{"ast":null,"code":"var _jsxFileName = \"/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/src/components/Notification/index.js\";\n\n/**\n *\n * Notification\n *\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport IconButton from '@material-ui/core/IconButton';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Grid from '@material-ui/core/Grid';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport { makeStyles } from '@material-ui/core/styles';\nconst notificationStyles = makeStyles(() => ({\n  margin: {\n    marginRight: '10px'\n  }\n}));\n\nfunction Notification({\n  status,\n  message,\n  classes,\n  messageHandler,\n  duration,\n  position,\n  type\n}) {\n  const variantIcon = {\n    success: CheckCircleIcon,\n    warning: WarningIcon,\n    error: ErrorIcon,\n    info: InfoIcon\n  };\n  const Icon = variantIcon[type];\n  const notifyClass = notificationStyles();\n\n  if (!type) {\n    return null;\n  }\n\n  return React.createElement(Snackbar, {\n    anchorOrigin: {\n      vertical: position.vertical,\n      horizontal: position.horizontal\n    },\n    open: status,\n    autoHideDuration: duration,\n    onClose: messageHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(SnackbarContent, {\n    className: clsx(classes[type]),\n    \"aria-describedby\": `${type}-snackbar`,\n    open: false,\n    message: React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"center\",\n      alignItems: \"center\",\n      id: `${type}-snackbar`,\n      className: classes.message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      className: clsx(classes.icon, classes.iconVariant, notifyClass.margin),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), message),\n    action: [React.createElement(IconButton, {\n      key: \"close\",\n      \"aria-label\": \"Close\",\n      color: \"inherit\",\n      onClick: messageHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(CloseIcon, {\n      className: classes.icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }))],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }));\n}\n\nNotification.displayName = \"Notification\";\nNotification.propTypes = {\n  status: PropTypes.bool.isRequired,\n  message: PropTypes.any,\n  classes: PropTypes.object.isRequired,\n  messageHandler: PropTypes.func.isRequired,\n  duration: PropTypes.number.isRequired,\n  position: PropTypes.object.isRequired,\n  type: PropTypes.oneOf(['success', 'warning', 'error', 'info'])\n};\nNotification.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Notification\",\n  \"props\": {\n    \"status\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"message\": {\n      \"type\": {\n        \"name\": \"any\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"classes\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"messageHandler\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"duration\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"position\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"type\": {\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"'success'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'warning'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'error'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'info'\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\nexport default Notification;\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/components/Notification/index.js\"] = {\n    name: \"Notification\",\n    docgenInfo: Notification.__docgenInfo,\n    path: \"src/components/Notification/index.js\"\n  };\n}","map":{"version":3,"sources":["/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/src/components/Notification/index.js"],"names":["React","PropTypes","clsx","IconButton","SnackbarContent","Snackbar","Grid","CloseIcon","ErrorIcon","WarningIcon","InfoIcon","CheckCircleIcon","makeStyles","notificationStyles","margin","marginRight","Notification","status","message","classes","messageHandler","duration","position","type","variantIcon","success","warning","error","info","Icon","notifyClass","vertical","horizontal","icon","iconVariant","propTypes","bool","isRequired","any","object","func","number","oneOf"],"mappings":"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","sourcesContent":["/**\n *\n * Notification\n *\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Grid from '@material-ui/core/Grid';\n\nimport CloseIcon from '@material-ui/icons/Close';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst notificationStyles = makeStyles(() => ({\n  margin: {\n    marginRight: '10px',\n  },\n}));\n\nfunction Notification({\n  status,\n  message,\n  classes,\n  messageHandler,\n  duration,\n  position,\n  type,\n}) {\n  const variantIcon = {\n    success: CheckCircleIcon,\n    warning: WarningIcon,\n    error: ErrorIcon,\n    info: InfoIcon,\n  };\n  const Icon = variantIcon[type];\n  const notifyClass = notificationStyles();\n\n  if (!type) {\n    return null;\n  }\n\n  return (\n    <Snackbar\n      anchorOrigin={{\n        vertical: position.vertical,\n        horizontal: position.horizontal,\n      }}\n      open={status}\n      autoHideDuration={duration}\n      onClose={messageHandler}\n    >\n      <SnackbarContent\n        className={clsx(classes[type])}\n        aria-describedby={`${type}-snackbar`}\n        open={false}\n        message={\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n            id={`${type}-snackbar`}\n            className={classes.message}\n          >\n            <Icon\n              className={clsx(\n                classes.icon,\n                classes.iconVariant,\n                notifyClass.margin\n              )}\n            />\n            {message}\n          </Grid>\n        }\n        action={[\n          <IconButton\n            key=\"close\"\n            aria-label=\"Close\"\n            color=\"inherit\"\n            onClick={messageHandler}\n          >\n            <CloseIcon className={classes.icon} />\n          </IconButton>,\n        ]}\n      />\n    </Snackbar>\n  );\n}\n\nNotification.propTypes = {\n  status: PropTypes.bool.isRequired,\n  message: PropTypes.any,\n  classes: PropTypes.object.isRequired,\n  messageHandler: PropTypes.func.isRequired,\n  duration: PropTypes.number.isRequired,\n  position: PropTypes.object.isRequired,\n  type: PropTypes.oneOf(['success', 'warning', 'error', 'info']),\n};\n\nexport default Notification;\n"]},"metadata":{},"sourceType":"module"}