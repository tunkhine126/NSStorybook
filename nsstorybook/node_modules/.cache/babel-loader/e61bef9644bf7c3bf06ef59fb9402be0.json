{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator\";\nvar _jsxFileName = \"/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/src/components/Horiz/index.js\";\n\n/**\n *\n * Horiz\n *\n */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport MoreHoriz from '@material-ui/icons/MoreHoriz';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport NSMenuItem from '../NSMenuItem';\nimport { styles } from './styles';\nexport function Horiz({\n  actions,\n  id\n}) {\n  const classes = styles();\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  function handleMenuClick(event) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function handleClick(_id, route) {\n    // TODO: Revisit\n    console.log(_id, route);\n  }\n\n  function handleClose() {\n    setAnchorEl(null);\n  }\n\n  const PaperProps = {\n    style: {\n      boxShadow: '0px 2px 6px rgba(0, 0, 0, 0.5)',\n      width: 200\n    }\n  };\n  return React.createElement(Grid, {\n    item: true,\n    className: classes.columnHeight,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    \"aria-label\": \"more options\",\n    size: \"small\",\n    \"aria-controls\": \"customized-menu\",\n    \"aria-haspopup\": \"true\",\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleMenuClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(MoreHoriz, {\n    className: classes.horiz,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })), React.createElement(Menu, {\n    id: `horiz-menu-${id}`,\n    anchorEl: anchorEl,\n    keepMounted: true,\n    open: Boolean(anchorEl),\n    onClose: handleClose,\n    elevation: 0,\n    getContentAnchorEl: null,\n    PaperProps: PaperProps,\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'right'\n    },\n    transformOrigin: {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, actions.map(({\n    icon,\n    text,\n    route\n  }, idx) => React.createElement(NSMenuItem, {\n    key: idx,\n    icon: icon,\n    text: text,\n    handleItemClick: () => handleClick(id, route),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }))));\n}\nHoriz.displayName = \"Horiz\";\nHoriz.propTypes = {\n  actions: PropTypes.array.isRequired,\n  id: PropTypes.string.isRequired\n};\nHoriz.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Horiz\",\n  \"props\": {\n    \"actions\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"id\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    }\n  }\n};\nexport default Horiz;\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/components/Horiz/index.js\"] = {\n    name: \"Horiz\",\n    docgenInfo: Horiz.__docgenInfo,\n    path: \"src/components/Horiz/index.js\"\n  };\n}","map":{"version":3,"sources":["/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/src/components/Horiz/index.js"],"names":["React","useState","PropTypes","Grid","MoreHoriz","IconButton","Menu","NSMenuItem","styles","Horiz","actions","id","classes","anchorEl","setAnchorEl","handleMenuClick","event","currentTarget","handleClick","_id","route","console","log","handleClose","PaperProps","style","boxShadow","width","columnHeight","horiz","Boolean","vertical","horizontal","map","icon","text","idx","propTypes","array","isRequired","string"],"mappings":"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","sourcesContent":["/**\n *\n * Horiz\n *\n */\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Grid from '@material-ui/core/Grid';\nimport MoreHoriz from '@material-ui/icons/MoreHoriz';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\n\nimport NSMenuItem from '../NSMenuItem';\nimport { styles } from './styles';\n\nexport function Horiz({ actions, id }) {\n  const classes = styles();\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  function handleMenuClick(event) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function handleClick(_id, route) {\n    // TODO: Revisit\n    console.log(_id, route);\n  }\n\n  function handleClose() {\n    setAnchorEl(null);\n  }\n\n  const PaperProps = {\n    style: {\n      boxShadow: '0px 2px 6px rgba(0, 0, 0, 0.5)',\n      width: 200,\n    },\n  };\n\n  return (\n    <Grid item className={classes.columnHeight}>\n      <IconButton\n        aria-label=\"more options\"\n        size=\"small\"\n        aria-controls=\"customized-menu\"\n        aria-haspopup=\"true\"\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={handleMenuClick}\n      >\n        <MoreHoriz className={classes.horiz} />\n      </IconButton>\n      <Menu\n        id={`horiz-menu-${id}`}\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n        elevation={0}\n        getContentAnchorEl={null}\n        PaperProps={PaperProps}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'right',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'right',\n        }}\n      >\n        {actions.map(({ icon, text, route }, idx) => (\n          <NSMenuItem\n            key={idx}\n            icon={icon}\n            text={text}\n            handleItemClick={() => handleClick(id, route)}\n          />\n        ))}\n      </Menu>\n    </Grid>\n  );\n}\n\nHoriz.propTypes = {\n  actions: PropTypes.array.isRequired,\n  id: PropTypes.string.isRequired,\n};\n\nexport default Horiz;\n"]},"metadata":{},"sourceType":"module"}