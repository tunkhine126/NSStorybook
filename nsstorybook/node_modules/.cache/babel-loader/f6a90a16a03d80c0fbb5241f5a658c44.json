{"ast":null,"code":"import { gql } from 'apollo-boost';\nexport const GET_ALL_FAMILIES = gql`\n  query getAllFamilies(\n    $sortColumn: RecipientSortBy\n    $sortDirection: SortDirection\n    $organizationUuid: String\n    $recipientDefinitionUuid: String\n  ) {\n    recipients(\n      filter: {\n        recipientDefinitionUuid: $recipientDefinitionUuid\n        organizationUuid: $organizationUuid\n      }\n      sort: { sortColumn: $sortColumn, sortDirection: $sortDirection }\n    ) {\n      uuid\n      internalId\n      name\n      submissionUuids\n      updatedAt\n      parent {\n        name\n        uuid\n      }\n      children {\n        uuid\n      }\n    }\n  }\n`;\nexport const GET_ALL_RECIPIENTS = gql`\n  query getAllRecipients(\n    $sortColumn: RecipientSortBy\n    $sortDirection: SortDirection\n    $organizationUuid: String\n    $recipientDefinitionUuid: String\n  ) {\n    recipients(\n      filter: {\n        recipientDefinitionUuid: $recipientDefinitionUuid\n        organizationUuid: $organizationUuid\n      }\n      sort: { sortColumn: $sortColumn, sortDirection: $sortDirection }\n    ) {\n      uuid\n      internalId\n      name\n      submissionUuids\n      updatedAt\n      parent {\n        name\n        uuid\n      }\n      children {\n        uuid\n      }\n    }\n  }\n`;\nexport const GET_ALL_SUBMISSIONS = gql`\n  query getAllSubmissions(\n    $sortColumn: SubmissionSortBy\n    $sortDirection: SortDirection\n    $organizationUuid: String\n  ) {\n    submissions(\n      filter: { organizationUuid: $organizationUuid }\n      sort: { sortColumn: $sortColumn, sortDirection: $sortDirection }\n    ) {\n      uuid\n      surveyUuid\n      status\n      completedAt\n      surveyor {\n        firstName\n        lastName\n      }\n      survey {\n        name\n      }\n      recipient {\n        name\n        uuid\n        internalId\n        name\n        submissionUuids\n        updatedAt\n        parent {\n          name\n          uuid\n        }\n        children {\n          uuid\n        }\n      }\n    }\n  }\n`;\nexport const GET_ALL_FILTERED_FAMILIES = gql`\n  query getAllFamilies(\n    $surveyUuids: [String!]\n    $parentUuids: [String!]\n    $sortColumn: RecipientSortBy\n    $sortDirection: SortDirection\n    $nameContains: String\n    $internalIdContains: String\n    $organizationUuid: String\n    $recipientDefinitionUuid: String\n    $lastSyncedAt: ISO8601DateTime\n    $before: ISO8601DateTime\n    $after: ISO8601DateTime\n  ) {\n    recipients(\n      filter: {\n        recipientDefinitionUuid: $recipientDefinitionUuid\n        organizationUuid: $organizationUuid\n        surveyUuids: $surveyUuids\n        parentUuids: $parentUuids\n        before: $before\n        after: $after\n        OR: [\n          { nameContains: $nameContains }\n          { internalIdContains: $internalIdContains }\n        ]\n      }\n      sort: { sortColumn: $sortColumn, sortDirection: $sortDirection }\n      lastSyncedAt: $lastSyncedAt\n    ) {\n      uuid\n      internalId\n      name\n      submissionUuids\n      updatedAt\n      parent {\n        name\n        uuid\n      }\n      children {\n        uuid\n      }\n    }\n  }\n`;\nexport const GET_ALL_FILTERED_RECIPIENTS = gql`\n  query getAllFilteredRecipients(\n    $surveyUuids: [String!]\n    $parentUuids: [String!]\n    $sortColumn: RecipientSortBy\n    $sortDirection: SortDirection\n    $nameContains: String\n    $internalIdContains: String\n    $organizationUuid: String\n    $recipientDefinitionUuid: String\n    $lastSyncedAt: ISO8601DateTime\n    $before: ISO8601DateTime\n    $after: ISO8601DateTime\n  ) {\n    recipients(\n      filter: {\n        recipientDefinitionUuid: $recipientDefinitionUuid\n        organizationUuid: $organizationUuid\n        surveyUuids: $surveyUuids\n        parentUuids: $parentUuids\n        before: $before\n        after: $after\n        OR: [\n          { nameContains: $nameContains }\n          { internalIdContains: $internalIdContains }\n        ]\n      }\n      sort: { sortColumn: $sortColumn, sortDirection: $sortDirection }\n      lastSyncedAt: $lastSyncedAt\n    ) {\n      uuid\n      internalId\n      name\n      submissionUuids\n      updatedAt\n      parent {\n        name\n        uuid\n      }\n      children {\n        uuid\n      }\n    }\n  }\n`;\nexport const GET_ALL_FILTERED_SURVEYS = gql`\n  query getSurveys(\n    $sortColumn: SurveySortBy\n    $sortDirection: SortDirection\n    $nameContains: String\n    $contextUuids: [String!]\n    $lastSyncedAt: ISO8601DateTime\n    $organizationUuid: String\n  ) {\n    surveys(\n      filter: {\n        organizationUuid: $organizationUuid\n        contextUuids: $contextUuids\n        OR: [{ nameContains: $nameContains }]\n      }\n      sort: { sortColumn: $sortColumn, sortDirection: $sortDirection }\n      lastSyncedAt: $lastSyncedAt\n    ) {\n      uuid\n      name\n      availableContexts {\n        name\n        uuid\n        permalink\n      }\n      surveySections {\n        surveyQuestionUuids\n      }\n      completedSubmissionUuids\n      lastCompletedSubmission {\n        uuid\n        completedAt\n      }\n      changedAt\n    }\n\n    _surveysMetaData {\n      totalCount\n      totalPages\n      currentPage\n    }\n  }\n`;\nexport const GET_ALL_FILTERED_SUBMISSIONS = gql`\n  query getAllFilteredSubmissions(\n    $sortColumn: SubmissionSortBy\n    $sortDirection: SortDirection\n    $organizationUuid: String\n    $surveyUuids: [String!]\n    $recipientParentUuids: [String!]\n    $recipientNameContains: String\n    $recipientInternalIdContains: String\n    $lastSyncedAt: ISO8601DateTime\n    $before: ISO8601DateTime\n    $after: ISO8601DateTime\n  ) {\n    submissions(\n      filter: {\n        organizationUuid: $organizationUuid\n        completedAtAfter: $after\n        completedAtBefore: $before\n        surveyUuids: $surveyUuids\n        recipientParentUuids: $recipientParentUuids\n        OR: [\n          { recipientNameContains: $recipientNameContains }\n          { recipientInternalIdContains: $recipientInternalIdContains }\n        ]\n      }\n      lastSyncedAt: $lastSyncedAt\n      sort: { sortColumn: $sortColumn, sortDirection: $sortDirection }\n    ) {\n      uuid\n      status\n      completedAt\n      surveyor {\n        firstName\n        lastName\n      }\n      survey {\n        name\n      }\n      recipient {\n        name\n        uuid\n        internalId\n        name\n        submissionUuids\n        updatedAt\n        parent {\n          name\n          uuid\n        }\n        children {\n          uuid\n        }\n      }\n    }\n  }\n`;\nexport const GET_ALL_SURVEYORS = gql`\n  query getAllSurveyors($organizationUuid: String) {\n    users(\n      filter: { organizationUuid: $organizationUuid, withSubmissions: true }\n    ) {\n      uuid\n      firstName\n      lastName\n    }\n  }\n`;\nexport const GET_ALL_SURVEYS = gql`\n  query getAllSurveys($organizationUuid: String) {\n    surveys(filter: { organizationUuid: $organizationUuid }) {\n      uuid\n      name\n      submissionUuids\n      availableContexts {\n        name\n        uuid\n        permalink\n      }\n      surveySections {\n        surveyQuestionUuids\n      }\n      completedSubmissionUuids\n      lastCompletedSubmission {\n        uuid\n        completedAt\n      }\n      changedAt\n    }\n  }\n`;\nexport const GET_ALL_CONTEXTS = gql`\n  query {\n    contexts {\n      uuid\n      name\n      permalink\n      language\n    }\n  }\n`;\nexport const GET_ALL_RECIPIENT_DEFINITIONS = gql`\n  query getAllRecipientDefinitions($organizationUuid: String) {\n    recipientDefinitions(filter: { organizationUuid: $organizationUuid }) {\n      name\n      uuid\n      primary\n      hierarchyId\n      parentUuid\n      routes\n      table\n      nestedRecipientTree\n    }\n  }\n`;","map":{"version":3,"sources":["/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/src/graphql/queries/all-queries.js"],"names":["gql","GET_ALL_FAMILIES","GET_ALL_RECIPIENTS","GET_ALL_SUBMISSIONS","GET_ALL_FILTERED_FAMILIES","GET_ALL_FILTERED_RECIPIENTS","GET_ALL_FILTERED_SURVEYS","GET_ALL_FILTERED_SUBMISSIONS","GET_ALL_SURVEYORS","GET_ALL_SURVEYS","GET_ALL_CONTEXTS","GET_ALL_RECIPIENT_DEFINITIONS"],"mappings":"AAAA,SAASA,GAAT,QAAoB,cAApB;AAEA,OAAO,MAAMC,gBAAgB,GAAGD,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAA7B;AA8BP,OAAO,MAAME,kBAAkB,GAAGF,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAA/B;AA8BP,OAAO,MAAMG,mBAAmB,GAAGH,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAhC;AAwCP,OAAO,MAAMI,yBAAyB,GAAGJ,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAtC;AA8CP,OAAO,MAAMK,2BAA2B,GAAGL,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAxC;AA8CP,OAAO,MAAMM,wBAAwB,GAAGN,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAArC;AA4CP,OAAO,MAAMO,4BAA4B,GAAGP,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAzC;AAyDP,OAAO,MAAMQ,iBAAiB,GAAGR,GAAI;;;;;;;;;;CAA9B;AAYP,OAAO,MAAMS,eAAe,GAAGT,GAAI;;;;;;;;;;;;;;;;;;;;;;CAA5B;AAwBP,OAAO,MAAMU,gBAAgB,GAAGV,GAAI;;;;;;;;;CAA7B;AAWP,OAAO,MAAMW,6BAA6B,GAAGX,GAAI;;;;;;;;;;;;;CAA1C","sourcesContent":["import { gql } from 'apollo-boost';\n\nexport const GET_ALL_FAMILIES = gql`\n  query getAllFamilies(\n    $sortColumn: RecipientSortBy\n    $sortDirection: SortDirection\n    $organizationUuid: String\n    $recipientDefinitionUuid: String\n  ) {\n    recipients(\n      filter: {\n        recipientDefinitionUuid: $recipientDefinitionUuid\n        organizationUuid: $organizationUuid\n      }\n      sort: { sortColumn: $sortColumn, sortDirection: $sortDirection }\n    ) {\n      uuid\n      internalId\n      name\n      submissionUuids\n      updatedAt\n      parent {\n        name\n        uuid\n      }\n      children {\n        uuid\n      }\n    }\n  }\n`;\n\nexport const GET_ALL_RECIPIENTS = gql`\n  query getAllRecipients(\n    $sortColumn: RecipientSortBy\n    $sortDirection: SortDirection\n    $organizationUuid: String\n    $recipientDefinitionUuid: String\n  ) {\n    recipients(\n      filter: {\n        recipientDefinitionUuid: $recipientDefinitionUuid\n        organizationUuid: $organizationUuid\n      }\n      sort: { sortColumn: $sortColumn, sortDirection: $sortDirection }\n    ) {\n      uuid\n      internalId\n      name\n      submissionUuids\n      updatedAt\n      parent {\n        name\n        uuid\n      }\n      children {\n        uuid\n      }\n    }\n  }\n`;\n\nexport const GET_ALL_SUBMISSIONS = gql`\n  query getAllSubmissions(\n    $sortColumn: SubmissionSortBy\n    $sortDirection: SortDirection\n    $organizationUuid: String\n  ) {\n    submissions(\n      filter: { organizationUuid: $organizationUuid }\n      sort: { sortColumn: $sortColumn, sortDirection: $sortDirection }\n    ) {\n      uuid\n      surveyUuid\n      status\n      completedAt\n      surveyor {\n        firstName\n        lastName\n      }\n      survey {\n        name\n      }\n      recipient {\n        name\n        uuid\n        internalId\n        name\n        submissionUuids\n        updatedAt\n        parent {\n          name\n          uuid\n        }\n        children {\n          uuid\n        }\n      }\n    }\n  }\n`;\n\nexport const GET_ALL_FILTERED_FAMILIES = gql`\n  query getAllFamilies(\n    $surveyUuids: [String!]\n    $parentUuids: [String!]\n    $sortColumn: RecipientSortBy\n    $sortDirection: SortDirection\n    $nameContains: String\n    $internalIdContains: String\n    $organizationUuid: String\n    $recipientDefinitionUuid: String\n    $lastSyncedAt: ISO8601DateTime\n    $before: ISO8601DateTime\n    $after: ISO8601DateTime\n  ) {\n    recipients(\n      filter: {\n        recipientDefinitionUuid: $recipientDefinitionUuid\n        organizationUuid: $organizationUuid\n        surveyUuids: $surveyUuids\n        parentUuids: $parentUuids\n        before: $before\n        after: $after\n        OR: [\n          { nameContains: $nameContains }\n          { internalIdContains: $internalIdContains }\n        ]\n      }\n      sort: { sortColumn: $sortColumn, sortDirection: $sortDirection }\n      lastSyncedAt: $lastSyncedAt\n    ) {\n      uuid\n      internalId\n      name\n      submissionUuids\n      updatedAt\n      parent {\n        name\n        uuid\n      }\n      children {\n        uuid\n      }\n    }\n  }\n`;\n\nexport const GET_ALL_FILTERED_RECIPIENTS = gql`\n  query getAllFilteredRecipients(\n    $surveyUuids: [String!]\n    $parentUuids: [String!]\n    $sortColumn: RecipientSortBy\n    $sortDirection: SortDirection\n    $nameContains: String\n    $internalIdContains: String\n    $organizationUuid: String\n    $recipientDefinitionUuid: String\n    $lastSyncedAt: ISO8601DateTime\n    $before: ISO8601DateTime\n    $after: ISO8601DateTime\n  ) {\n    recipients(\n      filter: {\n        recipientDefinitionUuid: $recipientDefinitionUuid\n        organizationUuid: $organizationUuid\n        surveyUuids: $surveyUuids\n        parentUuids: $parentUuids\n        before: $before\n        after: $after\n        OR: [\n          { nameContains: $nameContains }\n          { internalIdContains: $internalIdContains }\n        ]\n      }\n      sort: { sortColumn: $sortColumn, sortDirection: $sortDirection }\n      lastSyncedAt: $lastSyncedAt\n    ) {\n      uuid\n      internalId\n      name\n      submissionUuids\n      updatedAt\n      parent {\n        name\n        uuid\n      }\n      children {\n        uuid\n      }\n    }\n  }\n`;\n\nexport const GET_ALL_FILTERED_SURVEYS = gql`\n  query getSurveys(\n    $sortColumn: SurveySortBy\n    $sortDirection: SortDirection\n    $nameContains: String\n    $contextUuids: [String!]\n    $lastSyncedAt: ISO8601DateTime\n    $organizationUuid: String\n  ) {\n    surveys(\n      filter: {\n        organizationUuid: $organizationUuid\n        contextUuids: $contextUuids\n        OR: [{ nameContains: $nameContains }]\n      }\n      sort: { sortColumn: $sortColumn, sortDirection: $sortDirection }\n      lastSyncedAt: $lastSyncedAt\n    ) {\n      uuid\n      name\n      availableContexts {\n        name\n        uuid\n        permalink\n      }\n      surveySections {\n        surveyQuestionUuids\n      }\n      completedSubmissionUuids\n      lastCompletedSubmission {\n        uuid\n        completedAt\n      }\n      changedAt\n    }\n\n    _surveysMetaData {\n      totalCount\n      totalPages\n      currentPage\n    }\n  }\n`;\n\nexport const GET_ALL_FILTERED_SUBMISSIONS = gql`\n  query getAllFilteredSubmissions(\n    $sortColumn: SubmissionSortBy\n    $sortDirection: SortDirection\n    $organizationUuid: String\n    $surveyUuids: [String!]\n    $recipientParentUuids: [String!]\n    $recipientNameContains: String\n    $recipientInternalIdContains: String\n    $lastSyncedAt: ISO8601DateTime\n    $before: ISO8601DateTime\n    $after: ISO8601DateTime\n  ) {\n    submissions(\n      filter: {\n        organizationUuid: $organizationUuid\n        completedAtAfter: $after\n        completedAtBefore: $before\n        surveyUuids: $surveyUuids\n        recipientParentUuids: $recipientParentUuids\n        OR: [\n          { recipientNameContains: $recipientNameContains }\n          { recipientInternalIdContains: $recipientInternalIdContains }\n        ]\n      }\n      lastSyncedAt: $lastSyncedAt\n      sort: { sortColumn: $sortColumn, sortDirection: $sortDirection }\n    ) {\n      uuid\n      status\n      completedAt\n      surveyor {\n        firstName\n        lastName\n      }\n      survey {\n        name\n      }\n      recipient {\n        name\n        uuid\n        internalId\n        name\n        submissionUuids\n        updatedAt\n        parent {\n          name\n          uuid\n        }\n        children {\n          uuid\n        }\n      }\n    }\n  }\n`;\n\nexport const GET_ALL_SURVEYORS = gql`\n  query getAllSurveyors($organizationUuid: String) {\n    users(\n      filter: { organizationUuid: $organizationUuid, withSubmissions: true }\n    ) {\n      uuid\n      firstName\n      lastName\n    }\n  }\n`;\n\nexport const GET_ALL_SURVEYS = gql`\n  query getAllSurveys($organizationUuid: String) {\n    surveys(filter: { organizationUuid: $organizationUuid }) {\n      uuid\n      name\n      submissionUuids\n      availableContexts {\n        name\n        uuid\n        permalink\n      }\n      surveySections {\n        surveyQuestionUuids\n      }\n      completedSubmissionUuids\n      lastCompletedSubmission {\n        uuid\n        completedAt\n      }\n      changedAt\n    }\n  }\n`;\n\nexport const GET_ALL_CONTEXTS = gql`\n  query {\n    contexts {\n      uuid\n      name\n      permalink\n      language\n    }\n  }\n`;\n\nexport const GET_ALL_RECIPIENT_DEFINITIONS = gql`\n  query getAllRecipientDefinitions($organizationUuid: String) {\n    recipientDefinitions(filter: { organizationUuid: $organizationUuid }) {\n      name\n      uuid\n      primary\n      hierarchyId\n      parentUuid\n      routes\n      table\n      nestedRecipientTree\n    }\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}