{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator\";\nvar _jsxFileName = \"/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/src/components/RecipientList/RecipientView/profile.js\";\n\n/**\n *\n * Profile\n *\n */\nimport React, { useContext, Fragment } from 'react';\nimport { injectIntl, intlShape } from 'react-intl';\nimport Grid from '@material-ui/core/Grid';\nimport globalMessages from 'messages';\nimport Widget from './Widget/widget';\nimport RecipientPanel from './Widget/recipientPanel';\nimport { RecipientViewContext } from './context/index';\nimport { recipientListStyles } from '../styles';\n\nfunction Profile({\n  intl\n}) {\n  let recipientCustomFields = [];\n  let childCustomFields = null;\n  const classes = recipientListStyles();\n  const {\n    data,\n    rest,\n    rdData,\n    profileDetails\n  } = useContext(RecipientViewContext);\n  const {\n    history,\n    location\n  } = rest;\n\n  if (data.children.length > 0) {\n    const {\n      children: [{\n        recipientDefinition: {\n          customFields: CF\n        }\n      }]\n    } = data;\n    childCustomFields = CF;\n  }\n\n  const {\n    recipientDefinition: {\n      customFields: PCF\n    }\n  } = data;\n  recipientCustomFields = PCF;\n  const recipientChildPanels = data.children.map((c, idx) => React.createElement(Fragment, {\n    key: idx,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(RecipientPanel, {\n    name: c.name,\n    customFields: childCustomFields,\n    data: c,\n    twoColumn: true,\n    enableDelete: true,\n    lastChild: data.children.length === idx + 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  })));\n  return React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"space-between\",\n    alignItems: \"flex-start\",\n    className: classes.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 9,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Widget, {\n    header: profileDetails.recipientName,\n    body: React.createElement(RecipientPanel, {\n      name: intl.formatMessage(globalMessages.generalInfo),\n      customFields: recipientCustomFields,\n      data: data,\n      twoColumn: true,\n      parent: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  })), profileDetails.childRecipients && React.createElement(Grid, {\n    item: true,\n    xs: 9,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(Widget, {\n    header: profileDetails.childRecipients,\n    body: recipientChildPanels,\n    disableBtn: !rdData.customFields,\n    message: \"addRecipientChild\",\n    btnHandler: () => {\n      history.push(`/recipients/add/recipient?pId=${data.uuid}&rdId=${rdData.uuid}&name=${profileDetails.addRecipientName}&path=${location.pathname}`);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  })));\n}\n\nProfile.displayName = \"Profile\";\nProfile.propTypes = {\n  intl: intlShape.isRequired\n};\nconst intlProfile = injectIntl(Profile);\nexport default intlProfile;\nProfile.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Profile\",\n  \"props\": {\n    \"intl\": {\n      \"type\": {\n        \"name\": \"custom\",\n        \"raw\": \"intlShape.isRequired\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/components/RecipientList/RecipientView/profile.js\"] = {\n    name: \"Profile\",\n    docgenInfo: Profile.__docgenInfo,\n    path: \"src/components/RecipientList/RecipientView/profile.js\"\n  };\n}","map":{"version":3,"sources":["/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/src/components/RecipientList/RecipientView/profile.js"],"names":["React","useContext","Fragment","injectIntl","intlShape","Grid","globalMessages","Widget","RecipientPanel","RecipientViewContext","recipientListStyles","Profile","intl","recipientCustomFields","childCustomFields","classes","data","rest","rdData","profileDetails","history","location","children","length","recipientDefinition","customFields","CF","PCF","recipientChildPanels","map","c","idx","name","container","recipientName","formatMessage","generalInfo","childRecipients","push","uuid","addRecipientName","pathname","propTypes","isRequired","intlProfile"],"mappings":"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","sourcesContent":["/**\n *\n * Profile\n *\n */\n\nimport React, { useContext, Fragment } from 'react';\nimport { injectIntl, intlShape } from 'react-intl';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport globalMessages from 'messages';\nimport Widget from './Widget/widget';\nimport RecipientPanel from './Widget/recipientPanel';\nimport { RecipientViewContext } from './context/index';\nimport { recipientListStyles } from '../styles';\n\nfunction Profile({ intl }) {\n  let recipientCustomFields = [];\n  let childCustomFields = null;\n  const classes = recipientListStyles();\n  const { data, rest, rdData, profileDetails } = useContext(\n    RecipientViewContext\n  );\n  const { history, location } = rest;\n\n  if (data.children.length > 0) {\n    const {\n      children: [\n        {\n          recipientDefinition: { customFields: CF },\n        },\n      ],\n    } = data;\n    childCustomFields = CF;\n  }\n\n  const {\n    recipientDefinition: { customFields: PCF },\n  } = data;\n\n  recipientCustomFields = PCF;\n\n  const recipientChildPanels = data.children.map((c, idx) => (\n    <Fragment key={idx}>\n      <RecipientPanel\n        name={c.name}\n        customFields={childCustomFields}\n        data={c}\n        twoColumn\n        enableDelete\n        lastChild={data.children.length === idx + 1}\n      />\n    </Fragment>\n  ));\n\n  return (\n    <Grid\n      container\n      direction=\"row\"\n      justify=\"space-between\"\n      alignItems=\"flex-start\"\n      className={classes.container}\n    >\n      <Grid item xs={9}>\n        <Widget\n          header={profileDetails.recipientName}\n          body={\n            <RecipientPanel\n              name={intl.formatMessage(globalMessages.generalInfo)}\n              customFields={recipientCustomFields}\n              data={data}\n              twoColumn\n              parent\n            />\n          }\n        />\n      </Grid>\n      {profileDetails.childRecipients && (\n        <Grid item xs={9}>\n          <Widget\n            header={profileDetails.childRecipients}\n            body={recipientChildPanels}\n            disableBtn={!rdData.customFields}\n            message=\"addRecipientChild\"\n            btnHandler={() => {\n              history.push(\n                `/recipients/add/recipient?pId=${data.uuid}&rdId=${\n                  rdData.uuid\n                }&name=${profileDetails.addRecipientName}&path=${\n                  location.pathname\n                }`\n              );\n            }}\n          />\n        </Grid>\n      )}\n    </Grid>\n  );\n}\n\nProfile.propTypes = {\n  intl: intlShape.isRequired,\n};\n\nconst intlProfile = injectIntl(Profile);\n\nexport default intlProfile;\n"]},"metadata":{},"sourceType":"module"}