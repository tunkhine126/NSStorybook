{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator\";\nimport _objectSpread from \"/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/src/components/RecipientList/RecipientView/index.js\";\n\n/**\n *\n * RecipientView\n *\n */\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet';\nimport { useQuery, useLazyQuery } from '@apollo/react-hooks';\nimport { connect } from 'react-redux';\nimport qs from 'query-string';\nimport { createStructuredSelector } from 'reselect'; // Queries\n\nimport { GET_RECIPIENT } from 'graphql/queries/recipients';\nimport { GET_RECIPIENT_DEFINITION_BY_PARENT } from 'graphql/queries/all-queries'; // Components\n\nimport { makeSelectApp } from 'containers/App/selectors';\nimport { hideToaster as toast } from 'containers/App/actions';\nimport { generalErrorHandler } from 'utils/error-handler';\nimport Loading from 'components/shared/Loading';\nimport Notification from 'components/shared/Notification';\nimport Header from '../header';\nimport TabContent from './tabContent';\nimport { RecipientViewProvider } from './context';\nimport { ComponentStyle, recipientListStyles } from '../styles';\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(Loading, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 96\n  },\n  __self: this\n});\n\nfunction RecipientView(_ref) {\n  let {\n    match,\n    hideToaster,\n    app,\n    profileDetails,\n    primaryRecipient\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"match\", \"hideToaster\", \"app\", \"profileDetails\", \"primaryRecipient\"]);\n\n  const {\n    location\n  } = rest;\n  const index = parseInt(qs.parse(location.search).tab || 0);\n  const initialTab = index >= 0 && index < 3 ? index : 0;\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_RECIPIENT, {\n    variables: {\n      uuid: match.params.id\n    },\n    fetchPolicy: 'network-only'\n  });\n  const [getRecipientDefinition, {\n    loading: rdLoading,\n    error: rdError,\n    data: rdData\n  }] = useLazyQuery(GET_RECIPIENT_DEFINITION_BY_PARENT);\n  const [messageState, setMessageState] = useState({\n    message: 'Recipient Created!',\n    open: false,\n    type: 'success'\n  });\n  useEffect(() => {\n    if (data && data.recipient) {\n      getRecipientDefinition({\n        variables: {\n          parentUuid: data.recipient.recipientDefinitionUuid,\n          organizationUuid: app.org.uuid\n        }\n      });\n\n      if (!messageState.open && app.showToaster) {\n        setMessageState(mState => _objectSpread({}, mState, {\n          open: true\n        }));\n        hideToaster();\n      }\n    }\n  }, [app.org.uuid, app.showToaster, data, getRecipientDefinition, hideToaster, messageState.open]);\n  const classes = recipientListStyles();\n  const [value, setValue] = useState(initialTab);\n\n  const messageHandler = (event, reason) => {\n    if (reason === 'clickaway') return;\n    setMessageState({\n      open: false\n    });\n  };\n\n  if (error || rdError) {\n    return generalErrorHandler(error || rdError, _objectSpread({}, rest));\n  }\n\n  if (loading || rdLoading) {\n    return _ref2;\n  }\n\n  function handleChange(event, newValue) {\n    setValue(newValue);\n  }\n\n  function handleChangeIndex(idx) {\n    setValue(idx);\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(Helmet, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"New Story - \", profileDetails.recipientName, \" \"), React.createElement(\"meta\", {\n    name: \"description\",\n    content: profileDetails.recipientName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  })), React.createElement(Notification, {\n    status: messageState.open,\n    message: messageState.message,\n    classes: classes,\n    messageHandler: messageHandler,\n    duration: 3000,\n    position: {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    type: messageState.type,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }), React.createElement(RecipientViewProvider, Object.assign({\n    data: data.recipient,\n    rdData: rdData && rdData.recipientDefinitions[0] || {},\n    tabChange: handleChange,\n    profileDetails: profileDetails,\n    primaryRecipient: primaryRecipient,\n    match: match\n  }, rest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }), React.createElement(ComponentStyle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(Header, {\n    value: value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }), React.createElement(TabContent, Object.assign({\n    value: value,\n    indexChange: handleChangeIndex,\n    name: data && data.recipient && data.recipient.name\n  }, rest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  })))));\n}\n\nRecipientView.displayName = \"RecipientView\";\nRecipientView.propTypes = {\n  match: PropTypes.object.isRequired,\n  profileDetails: PropTypes.object.isRequired,\n  primaryRecipient: PropTypes.bool.isRequired,\n  hideToaster: PropTypes.func,\n  app: PropTypes.object\n};\nconst mapStateToProps = createStructuredSelector({\n  app: makeSelectApp()\n});\nexport function mapDispatchToProps(dispatch) {\n  return {\n    hideToaster: () => dispatch(toast()),\n    dispatch\n  };\n}\nRecipientView.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"RecipientView\",\n  \"props\": {\n    \"match\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"profileDetails\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"primaryRecipient\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"hideToaster\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"app\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(RecipientView);\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/components/RecipientList/RecipientView/index.js\"] = {\n    name: \"RecipientView\",\n    docgenInfo: RecipientView.__docgenInfo,\n    path: \"src/components/RecipientList/RecipientView/index.js\"\n  };\n}","map":{"version":3,"sources":["/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/src/components/RecipientList/RecipientView/index.js"],"names":["React","useState","useEffect","PropTypes","Helmet","useQuery","useLazyQuery","connect","qs","createStructuredSelector","GET_RECIPIENT","GET_RECIPIENT_DEFINITION_BY_PARENT","makeSelectApp","hideToaster","toast","generalErrorHandler","Loading","Notification","Header","TabContent","RecipientViewProvider","ComponentStyle","recipientListStyles","RecipientView","match","app","profileDetails","primaryRecipient","rest","location","index","parseInt","parse","search","tab","initialTab","loading","error","data","variables","uuid","params","id","fetchPolicy","getRecipientDefinition","rdLoading","rdError","rdData","messageState","setMessageState","message","open","type","recipient","parentUuid","recipientDefinitionUuid","organizationUuid","org","showToaster","mState","classes","value","setValue","messageHandler","event","reason","handleChange","newValue","handleChangeIndex","idx","recipientName","vertical","horizontal","recipientDefinitions","name","propTypes","object","isRequired","bool","func","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";;;;;AAAA;;;;;AAMA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,SAASC,QAAT,EAAmBC,YAAnB,QAAuC,qBAAvC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,EAAP,MAAe,cAAf;AACA,SAASC,wBAAT,QAAyC,UAAzC,C,CAEA;;AACA,SAASC,aAAT,QAA8B,4BAA9B;AACA,SAASC,kCAAT,QAAmD,6BAAnD,C,CAEA;;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,WAAW,IAAIC,KAAxB,QAAqC,wBAArC;AACA,SAASC,mBAAT,QAAoC,qBAApC;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,qBAAT,QAAsC,WAAtC;AACA,SAASC,cAAT,EAAyBC,mBAAzB,QAAoD,WAApD;;;;AAoEW,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,E;;AAlEX,SAASC,aAAT,OAOG;AAAA,MAPoB;AACrBC,IAAAA,KADqB;AAErBX,IAAAA,WAFqB;AAGrBY,IAAAA,GAHqB;AAIrBC,IAAAA,cAJqB;AAKrBC,IAAAA;AALqB,GAOpB;AAAA,MADEC,IACF;;AACD,QAAM;AAAEC,IAAAA;AAAF,MAAeD,IAArB;AACA,QAAME,KAAK,GAAGC,QAAQ,CAACvB,EAAE,CAACwB,KAAH,CAASH,QAAQ,CAACI,MAAlB,EAA0BC,GAA1B,IAAiC,CAAlC,CAAtB;AACA,QAAMC,UAAU,GAAGL,KAAK,IAAI,CAAT,IAAcA,KAAK,GAAG,CAAtB,GAA0BA,KAA1B,GAAkC,CAArD;AACA,QAAM;AAAEM,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BjC,QAAQ,CAACK,aAAD,EAAgB;AACvD6B,IAAAA,SAAS,EAAE;AACTC,MAAAA,IAAI,EAAEhB,KAAK,CAACiB,MAAN,CAAaC;AADV,KAD4C;AAIvDC,IAAAA,WAAW,EAAE;AAJ0C,GAAhB,CAAzC;AAOA,QAAM,CACJC,sBADI,EAEJ;AAAER,IAAAA,OAAO,EAAES,SAAX;AAAsBR,IAAAA,KAAK,EAAES,OAA7B;AAAsCR,IAAAA,IAAI,EAAES;AAA5C,GAFI,IAGFzC,YAAY,CAACK,kCAAD,CAHhB;AAKA,QAAM,CAACqC,YAAD,EAAeC,eAAf,IAAkChD,QAAQ,CAAC;AAC/CiD,IAAAA,OAAO,EAAE,oBADsC;AAE/CC,IAAAA,IAAI,EAAE,KAFyC;AAG/CC,IAAAA,IAAI,EAAE;AAHyC,GAAD,CAAhD;AAMAlD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIoC,IAAI,IAAIA,IAAI,CAACe,SAAjB,EAA4B;AAC1BT,MAAAA,sBAAsB,CAAC;AACrBL,QAAAA,SAAS,EAAE;AACTe,UAAAA,UAAU,EAAEhB,IAAI,CAACe,SAAL,CAAeE,uBADlB;AAETC,UAAAA,gBAAgB,EAAE/B,GAAG,CAACgC,GAAJ,CAAQjB;AAFjB;AADU,OAAD,CAAtB;;AAMA,UAAI,CAACQ,YAAY,CAACG,IAAd,IAAsB1B,GAAG,CAACiC,WAA9B,EAA2C;AACzCT,QAAAA,eAAe,CAACU,MAAM,sBAAUA,MAAV;AAAkBR,UAAAA,IAAI,EAAE;AAAxB,UAAP,CAAf;AACAtC,QAAAA,WAAW;AACZ;AACF;AACF,GAbQ,EAaN,CACDY,GAAG,CAACgC,GAAJ,CAAQjB,IADP,EAEDf,GAAG,CAACiC,WAFH,EAGDpB,IAHC,EAIDM,sBAJC,EAKD/B,WALC,EAMDmC,YAAY,CAACG,IANZ,CAbM,CAAT;AAsBA,QAAMS,OAAO,GAAGtC,mBAAmB,EAAnC;AACA,QAAM,CAACuC,KAAD,EAAQC,QAAR,IAAoB7D,QAAQ,CAACkC,UAAD,CAAlC;;AAEA,QAAM4B,cAAc,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACxC,QAAIA,MAAM,KAAK,WAAf,EAA4B;AAC5BhB,IAAAA,eAAe,CAAC;AAAEE,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAf;AACD,GAHD;;AAKA,MAAId,KAAK,IAAIS,OAAb,EAAsB;AACpB,WAAO/B,mBAAmB,CAACsB,KAAK,IAAIS,OAAV,oBACrBlB,IADqB,EAA1B;AAGD;;AAED,MAAIQ,OAAO,IAAIS,SAAf,EAA0B;AACxB;AACD;;AAED,WAASqB,YAAT,CAAsBF,KAAtB,EAA6BG,QAA7B,EAAuC;AACrCL,IAAAA,QAAQ,CAACK,QAAD,CAAR;AACD;;AAED,WAASC,iBAAT,CAA2BC,GAA3B,EAAgC;AAC9BP,IAAAA,QAAQ,CAACO,GAAD,CAAR;AACD;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAoB3C,cAAc,CAAC4C,aAAnC,MADF,EAEE;AAAM,IAAA,IAAI,EAAC,aAAX;AAAyB,IAAA,OAAO,EAAE5C,cAAc,CAAC4C,aAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAKE,oBAAC,YAAD;AACE,IAAA,MAAM,EAAEtB,YAAY,CAACG,IADvB;AAEE,IAAA,OAAO,EAAEH,YAAY,CAACE,OAFxB;AAGE,IAAA,OAAO,EAAEU,OAHX;AAIE,IAAA,cAAc,EAAEG,cAJlB;AAKE,IAAA,QAAQ,EAAE,IALZ;AAME,IAAA,QAAQ,EAAE;AAAEQ,MAAAA,QAAQ,EAAE,KAAZ;AAAmBC,MAAAA,UAAU,EAAE;AAA/B,KANZ;AAOE,IAAA,IAAI,EAAExB,YAAY,CAACI,IAPrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAcE,oBAAC,qBAAD;AACE,IAAA,IAAI,EAAEd,IAAI,CAACe,SADb;AAEE,IAAA,MAAM,EAAGN,MAAM,IAAIA,MAAM,CAAC0B,oBAAP,CAA4B,CAA5B,CAAX,IAA8C,EAFxD;AAGE,IAAA,SAAS,EAAEP,YAHb;AAIE,IAAA,cAAc,EAAExC,cAJlB;AAKE,IAAA,gBAAgB,EAAEC,gBALpB;AAME,IAAA,KAAK,EAAEH;AANT,KAOMI,IAPN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MASE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEiC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,UAAD;AACE,IAAA,KAAK,EAAEA,KADT;AAEE,IAAA,WAAW,EAAEO,iBAFf;AAGE,IAAA,IAAI,EAAE9B,IAAI,IAAIA,IAAI,CAACe,SAAb,IAA0Bf,IAAI,CAACe,SAAL,CAAeqB;AAHjD,KAIM9C,IAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,CATF,CAdF,CADF;AAoCD;;AAjHQL,a;AAmHTA,aAAa,CAACoD,SAAd,GAA0B;AACxBnD,EAAAA,KAAK,EAAErB,SAAS,CAACyE,MAAV,CAAiBC,UADA;AAExBnD,EAAAA,cAAc,EAAEvB,SAAS,CAACyE,MAAV,CAAiBC,UAFT;AAGxBlD,EAAAA,gBAAgB,EAAExB,SAAS,CAAC2E,IAAV,CAAeD,UAHT;AAIxBhE,EAAAA,WAAW,EAAEV,SAAS,CAAC4E,IAJC;AAKxBtD,EAAAA,GAAG,EAAEtB,SAAS,CAACyE;AALS,CAA1B;AAQA,MAAMI,eAAe,GAAGvE,wBAAwB,CAAC;AAC/CgB,EAAAA,GAAG,EAAEb,aAAa;AAD6B,CAAD,CAAhD;AAIA,OAAO,SAASqE,kBAAT,CAA4BC,QAA5B,EAAsC;AAC3C,SAAO;AACLrE,IAAAA,WAAW,EAAE,MAAMqE,QAAQ,CAACpE,KAAK,EAAN,CADtB;AAELoE,IAAAA;AAFK,GAAP;AAID;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAED,eAAe3E,OAAO,CACpByE,eADoB,EAEpBC,kBAFoB,CAAP,CAGb1D,aAHa,CAAf","sourcesContent":["/**\n *\n * RecipientView\n *\n */\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet';\nimport { useQuery, useLazyQuery } from '@apollo/react-hooks';\nimport { connect } from 'react-redux';\nimport qs from 'query-string';\nimport { createStructuredSelector } from 'reselect';\n\n// Queries\nimport { GET_RECIPIENT } from 'graphql/queries/recipients';\nimport { GET_RECIPIENT_DEFINITION_BY_PARENT } from 'graphql/queries/all-queries';\n\n// Components\nimport { makeSelectApp } from 'containers/App/selectors';\nimport { hideToaster as toast } from 'containers/App/actions';\nimport { generalErrorHandler } from 'utils/error-handler';\nimport Loading from 'components/shared/Loading';\nimport Notification from 'components/shared/Notification';\nimport Header from '../header';\nimport TabContent from './tabContent';\nimport { RecipientViewProvider } from './context';\nimport { ComponentStyle, recipientListStyles } from '../styles';\n\nfunction RecipientView({\n  match,\n  hideToaster,\n  app,\n  profileDetails,\n  primaryRecipient,\n  ...rest\n}) {\n  const { location } = rest;\n  const index = parseInt(qs.parse(location.search).tab || 0);\n  const initialTab = index >= 0 && index < 3 ? index : 0;\n  const { loading, error, data } = useQuery(GET_RECIPIENT, {\n    variables: {\n      uuid: match.params.id,\n    },\n    fetchPolicy: 'network-only',\n  });\n\n  const [\n    getRecipientDefinition,\n    { loading: rdLoading, error: rdError, data: rdData },\n  ] = useLazyQuery(GET_RECIPIENT_DEFINITION_BY_PARENT);\n\n  const [messageState, setMessageState] = useState({\n    message: 'Recipient Created!',\n    open: false,\n    type: 'success',\n  });\n\n  useEffect(() => {\n    if (data && data.recipient) {\n      getRecipientDefinition({\n        variables: {\n          parentUuid: data.recipient.recipientDefinitionUuid,\n          organizationUuid: app.org.uuid,\n        },\n      });\n      if (!messageState.open && app.showToaster) {\n        setMessageState(mState => ({ ...mState, open: true }));\n        hideToaster();\n      }\n    }\n  }, [\n    app.org.uuid,\n    app.showToaster,\n    data,\n    getRecipientDefinition,\n    hideToaster,\n    messageState.open,\n  ]);\n\n  const classes = recipientListStyles();\n  const [value, setValue] = useState(initialTab);\n\n  const messageHandler = (event, reason) => {\n    if (reason === 'clickaway') return;\n    setMessageState({ open: false });\n  };\n\n  if (error || rdError) {\n    return generalErrorHandler(error || rdError, {\n      ...rest,\n    });\n  }\n\n  if (loading || rdLoading) {\n    return <Loading />;\n  }\n\n  function handleChange(event, newValue) {\n    setValue(newValue);\n  }\n\n  function handleChangeIndex(idx) {\n    setValue(idx);\n  }\n\n  return (\n    <div>\n      <Helmet>\n        <title>New Story - {profileDetails.recipientName} </title>\n        <meta name=\"description\" content={profileDetails.recipientName} />\n      </Helmet>\n      <Notification\n        status={messageState.open}\n        message={messageState.message}\n        classes={classes}\n        messageHandler={messageHandler}\n        duration={3000}\n        position={{ vertical: 'top', horizontal: 'right' }}\n        type={messageState.type}\n      />\n      <RecipientViewProvider\n        data={data.recipient}\n        rdData={(rdData && rdData.recipientDefinitions[0]) || {}}\n        tabChange={handleChange}\n        profileDetails={profileDetails}\n        primaryRecipient={primaryRecipient}\n        match={match}\n        {...rest}\n      >\n        <ComponentStyle>\n          <Header value={value} />\n          <TabContent\n            value={value}\n            indexChange={handleChangeIndex}\n            name={data && data.recipient && data.recipient.name}\n            {...rest}\n          />\n        </ComponentStyle>\n      </RecipientViewProvider>\n    </div>\n  );\n}\n\nRecipientView.propTypes = {\n  match: PropTypes.object.isRequired,\n  profileDetails: PropTypes.object.isRequired,\n  primaryRecipient: PropTypes.bool.isRequired,\n  hideToaster: PropTypes.func,\n  app: PropTypes.object,\n};\n\nconst mapStateToProps = createStructuredSelector({\n  app: makeSelectApp(),\n});\n\nexport function mapDispatchToProps(dispatch) {\n  return {\n    hideToaster: () => dispatch(toast()),\n    dispatch,\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RecipientView);\n"]},"metadata":{},"sourceType":"module"}