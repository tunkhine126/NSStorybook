{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator\";\nvar _jsxFileName = \"/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/src/components/NSFilters/single.js\";\n\n/* eslint-disable react/prop-types */\n\n/**\n *\n * SingleSelect\n *\n */\nimport React, { useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { injectIntl } from 'react-intl';\nimport 'react-dates/initialize';\nimport { DateRangePicker } from 'react-dates';\nimport 'react-dates/lib/css/_datepicker.css';\nimport moment from 'moment';\nimport Grid from '@material-ui/core/Grid';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport KeyboardBackspaceIcon from '@material-ui/icons/KeyboardBackspace';\nimport ActiveRightArrow from '../Icons copy/activeRightArrow';\nimport ActiveLeftArrow from '../Icons copy/activeLeftArrow';\nimport { generateISODate } from 'utils/helpers';\nimport { NSFiltersContext } from './context/filters';\nimport { SelectFilterStyles } from './styles';\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(ActiveLeftArrow, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 180\n  },\n  __self: this\n});\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(ActiveRightArrow, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 181\n  },\n  __self: this\n});\n\nfunction SingleSelect({\n  selected,\n  handleChange,\n  type,\n  label,\n  singleOptions,\n  lastUpdate\n}) {\n  const {\n    dateRangeProps: {\n      setDateRange\n    },\n    localDateProps: {\n      localDateRange,\n      setlocalDateRange\n    },\n    calendarProps: {\n      showCalendar\n    }\n  } = useContext(NSFiltersContext);\n  const [currentDateFocus, setCurrentDateFocus] = useState(null);\n  const classes = SelectFilterStyles();\n\n  if (!showCalendar && localDateRange.before !== null) {\n    setlocalDateRange({\n      after: null,\n      before: null\n    });\n  }\n\n  const dateOptions = [{\n    value: '',\n    label: 'All time'\n  }, {\n    value: generateISODate(7),\n    label: 'Past 7 days'\n  }, {\n    value: generateISODate(30),\n    label: 'Past 30 days'\n  }, {\n    value: generateISODate(365),\n    label: 'Past Year'\n  }];\n  const options = type === 'date' ? dateOptions : singleOptions;\n  const dateValue = type === 'date' && showCalendar ? 'custom' : lastUpdate;\n  const radioValue = type === 'date' ? dateValue : selected;\n  return React.createElement(React.Fragment, null, React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"flex-start\",\n    alignItems: \"flex-start\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    component: \"fieldset\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(RadioGroup, {\n    \"aria-label\": label,\n    name: type === 'date' ? 'date' : label,\n    value: radioValue,\n    onChange: e => handleChange(e, dateOptions.find(d => d.value === e.target.value)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    className: classes.mainRadioBtns,\n    container: true,\n    direction: \"column\",\n    justify: \"flex-start\",\n    alignItems: \"flex-start\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, options.map(({\n    value,\n    label: optionLabel\n  }, idx) => React.createElement(FormControlLabel, {\n    key: idx,\n    value: value,\n    control: React.createElement(Radio, {\n      inputProps: {\n        'aria-label': optionLabel\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }),\n    label: optionLabel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  })))), type === 'date' && React.createElement(FormControlLabel, {\n    value: \"custom\",\n    control: React.createElement(Radio, {\n      inputProps: {\n        'aria-label': 'Custom Date'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }),\n    label: \"Custom...\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }))))), showCalendar && React.createElement(DateRangePicker, {\n    startDatePlaceholderText: \"Start\",\n    endDatePlaceholderText: \"End\",\n    displayFormat: \"MMM D, YYYY\",\n    startDate: localDateRange.after // momentPropTypes.momentObj or null,\n    ,\n    startDateId: \"start-date\" // PropTypes.string.isRequired,\n    ,\n    endDate: localDateRange.before // momentPropTypes.momentObj or null,\n    ,\n    endDateId: \"end-date\" // PropTypes.string.isRequired,\n    ,\n    focusedInput: currentDateFocus // PropTypes.oneOf([START_DATE, END_DATE]) or null,\n    ,\n    onDatesChange: ({\n      startDate,\n      endDate\n    }) => {\n      setlocalDateRange({\n        after: startDate,\n        before: endDate\n      });\n\n      if (startDate && endDate) {\n        setDateRange({\n          after: startDate,\n          before: endDate\n        });\n      }\n    },\n    isOutsideRange: () => {},\n    onFocusChange: focusedInput => {\n      setCurrentDateFocus(focusedInput);\n    },\n    renderCalendarInfo: () => {\n      const currentDaysinView = document.querySelectorAll('.CalendarDay[aria-label]');\n      const currentDaysOfWeek = document.querySelectorAll('.DayPicker_weekHeader_li small');\n      const daysOfWeekChar = ['S', 'M', 'T', 'W', 'T', 'F', 'S'];\n\n      for (let i = 0; i < currentDaysinView.length; i += 1) {\n        if (currentDaysinView[i].getAttribute('aria-label').toString().includes(moment().format('MMMM D, YYYY'))) {\n          currentDaysinView[i].setAttribute('style', 'font-weight: bold; text-decoration: underline');\n        }\n      }\n\n      for (let i = 0; i < currentDaysOfWeek.length; i += 1) {\n        currentDaysOfWeek[i].textContent = daysOfWeekChar[i];\n      }\n    },\n    navPrev: _ref,\n    navNext: _ref2,\n    numberOfMonths: 1,\n    verticalSpacing: 0,\n    appendToBody: true,\n    keepOpenOnDateSelect: true,\n    hideKeyboardShortcutsPanel: true,\n    customArrowIcon: React.createElement(KeyboardBackspaceIcon, {\n      fontSize: \"small\",\n      className: classes.dateInputArrow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }));\n}\n\nSingleSelect.propTypes = {\n  selected: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  label: PropTypes.string.isRequired,\n  lastUpdate: PropTypes.string,\n  singleOptions: PropTypes.array,\n  type: PropTypes.oneOf(['single', 'date'])\n};\nconst IntlSingleSelect = injectIntl(SingleSelect);\nexport default IntlSingleSelect;\nSingleSelect.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"SingleSelect\",\n  \"props\": {\n    \"selected\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"handleChange\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"label\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"lastUpdate\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"singleOptions\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"type\": {\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"'single'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'date'\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/components/NSFilters/single.js\"] = {\n    name: \"SingleSelect\",\n    docgenInfo: SingleSelect.__docgenInfo,\n    path: \"src/components/NSFilters/single.js\"\n  };\n}","map":{"version":3,"sources":["/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/src/components/NSFilters/single.js"],"names":["React","useState","useContext","PropTypes","injectIntl","DateRangePicker","moment","Grid","Radio","RadioGroup","FormControlLabel","FormControl","KeyboardBackspaceIcon","ActiveRightArrow","ActiveLeftArrow","generateISODate","NSFiltersContext","SelectFilterStyles","SingleSelect","selected","handleChange","type","label","singleOptions","lastUpdate","dateRangeProps","setDateRange","localDateProps","localDateRange","setlocalDateRange","calendarProps","showCalendar","currentDateFocus","setCurrentDateFocus","classes","before","after","dateOptions","value","options","dateValue","radioValue","e","find","d","target","mainRadioBtns","map","optionLabel","idx","startDate","endDate","focusedInput","currentDaysinView","document","querySelectorAll","currentDaysOfWeek","daysOfWeekChar","i","length","getAttribute","toString","includes","format","setAttribute","textContent","dateInputArrow","propTypes","string","isRequired","func","array","oneOf","IntlSingleSelect"],"mappings":"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","sourcesContent":["/* eslint-disable react/prop-types */\n/**\n *\n * SingleSelect\n *\n */\n\nimport React, { useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { injectIntl } from 'react-intl';\n\nimport 'react-dates/initialize';\nimport { DateRangePicker } from 'react-dates';\nimport 'react-dates/lib/css/_datepicker.css';\nimport moment from 'moment';\n\nimport Grid from '@material-ui/core/Grid';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport KeyboardBackspaceIcon from '@material-ui/icons/KeyboardBackspace';\n\nimport ActiveRightArrow from '../Icons copy/activeRightArrow';\nimport ActiveLeftArrow from '../Icons copy/activeLeftArrow';\nimport { generateISODate } from 'utils/helpers';\nimport { NSFiltersContext } from './context/filters';\nimport { SelectFilterStyles } from './styles';\n\nfunction SingleSelect({\n  selected,\n  handleChange,\n  type,\n  label,\n  singleOptions,\n  lastUpdate,\n}) {\n  const {\n    dateRangeProps: { setDateRange },\n    localDateProps: { localDateRange, setlocalDateRange },\n    calendarProps: { showCalendar },\n  } = useContext(NSFiltersContext);\n\n  const [currentDateFocus, setCurrentDateFocus] = useState(null);\n  const classes = SelectFilterStyles();\n\n  if (!showCalendar && localDateRange.before !== null) {\n    setlocalDateRange({ after: null, before: null });\n  }\n\n  const dateOptions = [\n    { value: '', label: 'All time' },\n    {\n      value: generateISODate(7),\n      label: 'Past 7 days',\n    },\n    {\n      value: generateISODate(30),\n      label: 'Past 30 days',\n    },\n    {\n      value: generateISODate(365),\n      label: 'Past Year',\n    },\n  ];\n\n  const options = type === 'date' ? dateOptions : singleOptions;\n  const dateValue = type === 'date' && showCalendar ? 'custom' : lastUpdate;\n  const radioValue = type === 'date' ? dateValue : selected;\n\n  return (\n    <>\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"flex-start\"\n        alignItems=\"flex-start\"\n      >\n        <Grid item xs>\n          <FormControl component=\"fieldset\">\n            <RadioGroup\n              aria-label={label}\n              name={type === 'date' ? 'date' : label}\n              value={radioValue}\n              onChange={e =>\n                handleChange(\n                  e,\n                  dateOptions.find(d => d.value === e.target.value)\n                )\n              }\n            >\n              <Grid\n                className={classes.mainRadioBtns}\n                container\n                direction=\"column\"\n                justify=\"flex-start\"\n                alignItems=\"flex-start\"\n              >\n                <Grid item xs={8}>\n                  {options.map(({ value, label: optionLabel }, idx) => (\n                    <FormControlLabel\n                      key={idx}\n                      value={value}\n                      control={\n                        <Radio\n                          inputProps={{\n                            'aria-label': optionLabel,\n                          }}\n                        />\n                      }\n                      label={optionLabel}\n                    />\n                  ))}\n                </Grid>\n              </Grid>\n              {type === 'date' && (\n                <FormControlLabel\n                  value=\"custom\"\n                  control={\n                    <Radio\n                      inputProps={{\n                        'aria-label': 'Custom Date',\n                      }}\n                    />\n                  }\n                  label=\"Custom...\"\n                />\n              )}\n            </RadioGroup>\n          </FormControl>\n        </Grid>\n      </Grid>\n      {showCalendar && (\n        <DateRangePicker\n          startDatePlaceholderText=\"Start\"\n          endDatePlaceholderText=\"End\"\n          displayFormat=\"MMM D, YYYY\"\n          startDate={localDateRange.after} // momentPropTypes.momentObj or null,\n          startDateId=\"start-date\" // PropTypes.string.isRequired,\n          endDate={localDateRange.before} // momentPropTypes.momentObj or null,\n          endDateId=\"end-date\" // PropTypes.string.isRequired,\n          focusedInput={currentDateFocus} // PropTypes.oneOf([START_DATE, END_DATE]) or null,\n          onDatesChange={({ startDate, endDate }) => {\n            setlocalDateRange({ after: startDate, before: endDate });\n            if (startDate && endDate) {\n              setDateRange({ after: startDate, before: endDate });\n            }\n          }}\n          isOutsideRange={() => {}}\n          onFocusChange={focusedInput => {\n            setCurrentDateFocus(focusedInput);\n          }}\n          renderCalendarInfo={() => {\n            const currentDaysinView = document.querySelectorAll(\n              '.CalendarDay[aria-label]'\n            );\n            const currentDaysOfWeek = document.querySelectorAll(\n              '.DayPicker_weekHeader_li small'\n            );\n\n            const daysOfWeekChar = ['S', 'M', 'T', 'W', 'T', 'F', 'S'];\n\n            for (let i = 0; i < currentDaysinView.length; i += 1) {\n              if (\n                currentDaysinView[i]\n                  .getAttribute('aria-label')\n                  .toString()\n                  .includes(moment().format('MMMM D, YYYY'))\n              ) {\n                currentDaysinView[i].setAttribute(\n                  'style',\n                  'font-weight: bold; text-decoration: underline'\n                );\n              }\n            }\n            for (let i = 0; i < currentDaysOfWeek.length; i += 1) {\n              currentDaysOfWeek[i].textContent = daysOfWeekChar[i];\n            }\n          }}\n          navPrev={<ActiveLeftArrow />}\n          navNext={<ActiveRightArrow />}\n          numberOfMonths={1}\n          verticalSpacing={0}\n          appendToBody\n          keepOpenOnDateSelect\n          hideKeyboardShortcutsPanel\n          customArrowIcon={\n            <KeyboardBackspaceIcon\n              fontSize=\"small\"\n              className={classes.dateInputArrow}\n            />\n          }\n        />\n      )}\n    </>\n  );\n}\n\nSingleSelect.propTypes = {\n  selected: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  label: PropTypes.string.isRequired,\n  lastUpdate: PropTypes.string,\n  singleOptions: PropTypes.array,\n  type: PropTypes.oneOf(['single', 'date']),\n};\n\nconst IntlSingleSelect = injectIntl(SingleSelect);\n\nexport default IntlSingleSelect;\n"]},"metadata":{},"sourceType":"module"}