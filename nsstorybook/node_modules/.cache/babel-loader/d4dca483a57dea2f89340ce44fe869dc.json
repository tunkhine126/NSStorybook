{"ast":null,"code":"var _jsxFileName = \"/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/src/components/CheckboxGroup/index.js\";\n\n/**\n *\n * CheckBoxGroup\n *\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Grid from '@material-ui/core/Grid';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Typography from '@material-ui/core/Typography';\nimport CustomCheckBox from '../Icons copy/customCheckbox';\nimport CheckboxChecked from '../Icons copy/checkboxChecked';\nimport IntermediateCheckbox from 'components/shared/Icons/intermediateCheckbox';\nimport { styles, listItemTextStyles, CheckBoxWrapper } from './styles'; // eslint-disable-next-line react/display-name\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(CustomCheckBox, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56\n  },\n  __self: this\n});\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(IntermediateCheckbox, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58\n  },\n  __self: this\n});\n\nconst CheckBoxGroup = React.forwardRef(({\n  label,\n  show,\n  id,\n  checboxChange,\n  shouldDisable,\n  resultCount,\n  intermediate,\n  multi = false\n}, ref) => {\n  const classes = styles();\n  const disable = shouldDisable.disable && shouldDisable.id === id;\n  return React.createElement(Grid, {\n    ref: ref,\n    item: true,\n    container: true,\n    direction: \"row\",\n    justify: \"flex-start\",\n    alignItems: \"flex-start\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(CheckBoxWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Checkbox, {\n    checked: show,\n    disabled: disable,\n    indeterminate: intermediate,\n    onChange: e => checboxChange ? checboxChange(e, id) : null,\n    className: classes.listItemChkbox,\n    icon: _ref,\n    checkedIcon: React.createElement(CheckboxChecked, {\n      disabled: disable,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }),\n    indeterminateIcon: _ref2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  })), React.createElement(ListItemText, {\n    primary: React.createElement(\"p\", {\n      className: classes.listItemText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, label),\n    classes: listItemTextStyles(multi)(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), resultCount > 0 && React.createElement(Typography, {\n    variant: \"caption\",\n    gutterBottom: true,\n    className: clsx(classes.caption, classes.resultsCaption),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, resultCount));\n});\nCheckBoxGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  show: PropTypes.bool.isRequired,\n  shouldDisable: PropTypes.object.isRequired,\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  checboxChange: PropTypes.func,\n  intermediate: PropTypes.bool,\n  resultCount: PropTypes.number,\n  multi: PropTypes.bool\n};\nCheckBoxGroup.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"props\": {\n    \"multi\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"label\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"show\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"shouldDisable\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"id\": {\n      \"type\": {\n        \"name\": \"union\",\n        \"value\": [{\n          \"name\": \"string\"\n        }, {\n          \"name\": \"number\"\n        }]\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"checboxChange\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"intermediate\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"resultCount\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\nexport default CheckBoxGroup;\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/components/CheckboxGroup/index.js\"] = {\n    name: \"CheckBoxGroup\",\n    docgenInfo: CheckBoxGroup.__docgenInfo,\n    path: \"src/components/CheckboxGroup/index.js\"\n  };\n}","map":{"version":3,"sources":["/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/src/components/CheckboxGroup/index.js"],"names":["React","PropTypes","clsx","Grid","ListItemText","Checkbox","Typography","CustomCheckBox","CheckboxChecked","IntermediateCheckbox","styles","listItemTextStyles","CheckBoxWrapper","CheckBoxGroup","forwardRef","label","show","id","checboxChange","shouldDisable","resultCount","intermediate","multi","ref","classes","disable","e","listItemChkbox","listItemText","caption","resultsCaption","propTypes","string","isRequired","bool","object","oneOfType","number","func"],"mappings":"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","sourcesContent":["/**\n *\n * CheckBoxGroup\n *\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\nimport Grid from '@material-ui/core/Grid';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Typography from '@material-ui/core/Typography';\n\nimport CustomCheckBox from '../Icons copy/customCheckbox';\nimport CheckboxChecked from '../Icons copy/checkboxChecked';\nimport IntermediateCheckbox from 'components/shared/Icons/intermediateCheckbox';\n\nimport { styles, listItemTextStyles, CheckBoxWrapper } from './styles';\n\n// eslint-disable-next-line react/display-name\nconst CheckBoxGroup = React.forwardRef(\n  (\n    {\n      label,\n      show,\n      id,\n      checboxChange,\n      shouldDisable,\n      resultCount,\n      intermediate,\n      multi = false,\n    },\n    ref\n  ) => {\n    const classes = styles();\n    const disable = shouldDisable.disable && shouldDisable.id === id;\n\n    return (\n      <Grid\n        ref={ref}\n        item\n        container\n        direction=\"row\"\n        justify=\"flex-start\"\n        alignItems=\"flex-start\"\n      >\n        <CheckBoxWrapper>\n          <Checkbox\n            checked={show}\n            disabled={disable}\n            indeterminate={intermediate}\n            onChange={e => (checboxChange ? checboxChange(e, id) : null)}\n            className={classes.listItemChkbox}\n            icon={<CustomCheckBox />}\n            checkedIcon={<CheckboxChecked disabled={disable} />}\n            indeterminateIcon={<IntermediateCheckbox />}\n          />\n        </CheckBoxWrapper>\n        <ListItemText\n          primary={<p className={classes.listItemText}>{label}</p>}\n          classes={listItemTextStyles(multi)()}\n        />\n        {resultCount > 0 && (\n          <Typography\n            variant=\"caption\"\n            gutterBottom\n            className={clsx(classes.caption, classes.resultsCaption)}\n          >\n            {resultCount}\n          </Typography>\n        )}\n      </Grid>\n    );\n  }\n);\n\nCheckBoxGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  show: PropTypes.bool.isRequired,\n  shouldDisable: PropTypes.object.isRequired,\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  checboxChange: PropTypes.func,\n  intermediate: PropTypes.bool,\n  resultCount: PropTypes.number,\n  multi: PropTypes.bool,\n};\n\nexport default CheckBoxGroup;\n"]},"metadata":{},"sourceType":"module"}