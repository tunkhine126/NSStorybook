{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator\";\nvar _jsxFileName = \"/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/src/stories/5-Content.stories.js\";\nimport React, { useState } from 'react';\nimport { action } from '@storybook/addon-actions';\nimport { BrowserRouter } from 'react-router-dom';\nimport Content from '../components/Content';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport button from '@material-ui/core';\nimport NSButton from '../components/NSButton/index';\nimport { NSButtonStyles } from '../components/NSButton/styles';\nimport clsx from 'clsx';\nimport { commonStyles, InputWrapper } from '../components/NewRecipient/styles';\nimport ActionPanel from '../components/ActionPanel/index';\nexport default {\n  title: 'Content',\n  component: Content\n};\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"h3\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}, \"Content Container \");\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46\n  },\n  __self: this\n}, React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47\n  },\n  __self: this\n}, \"This is where a component can be passed in\"), React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48\n  },\n  __self: this\n}, React.createElement(Checkbox, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48\n  },\n  __self: this\n})));\n\nexport function ContentContainter({\n  subHeader,\n  body,\n  headerClass,\n  containerClass,\n  screen\n}) {\n  const headerScreen = screen && screen.header.xs || 3;\n  const bodyScreen = screen && screen.header.xs || 9; // const classes = NSButtonStyles(); \n\n  const classes = commonStyles();\n  const [loadingState, setloadingState] = useState(true);\n  return React.createElement(BrowserRouter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, _ref, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Content, {\n    key: \"\",\n    subHeader: \"This is where a message to the user is passed\",\n    body: React.createElement(NSButton, {\n      id: \"Forward\",\n      version: 2,\n      componentClasses: clsx(classes.btns, classes.margin),\n      onClick: action(\"I've been clicked\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, _ref2),\n    containerClass: \"\",\n    headerClass: \"HEADER\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(Content, {\n    key: \"\",\n    subHeader: \"2nd Example that includes styling and passing a loading action panel\",\n    body: React.createElement(ActionPanel, {\n      action: \"\",\n      type: \"\",\n      formId: \"\",\n      resetForm: action(\"I've been clicked\"),\n      loading: loadingState,\n      disabled: loadingState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }),\n    containerClass: classes.required,\n    headerClass: classes.sectionHeader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })));\n}\nContentContainter.displayName = \"ContentContainter\";\nContentContainter.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"ContentContainter\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/stories/5-Content.stories.js\"] = {\n    name: \"ContentContainter\",\n    docgenInfo: ContentContainter.__docgenInfo,\n    path: \"src/stories/5-Content.stories.js\"\n  };\n}","map":{"version":3,"sources":["/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/src/stories/5-Content.stories.js"],"names":["React","useState","action","BrowserRouter","Content","Checkbox","button","NSButton","NSButtonStyles","clsx","commonStyles","InputWrapper","ActionPanel","title","component","ContentContainter","subHeader","body","headerClass","containerClass","screen","headerScreen","header","xs","bodyScreen","classes","loadingState","setloadingState","btns","margin","required","sectionHeader"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,0BAAvB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,QAAP,MAAqB,8BAArB;AACA,SAASC,cAAT,QAA+B,+BAA/B;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,YAAT,EAAuBC,YAAvB,QAA2C,mCAA3C;AACA,OAAOC,WAAP,MAAwB,iCAAxB;AAGA,eAAe;AACbC,EAAAA,KAAK,EAAE,SADM;AAEbC,EAAAA,SAAS,EAAEV;AAFE,CAAf;;;;AAqBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wB;;;;AAWY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAG,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAH,CAFF,C;;AA3BhB,OAAO,SAASW,iBAAT,CAA2B;AAChCC,EAAAA,SADgC;AAEhCC,EAAAA,IAFgC;AAGhCC,EAAAA,WAHgC;AAIhCC,EAAAA,cAJgC;AAKhCC,EAAAA;AALgC,CAA3B,EAMJ;AAEH,QAAMC,YAAY,GAAID,MAAM,IAAIA,MAAM,CAACE,MAAP,CAAcC,EAAzB,IAAgC,CAArD;AACA,QAAMC,UAAU,GAAIJ,MAAM,IAAIA,MAAM,CAACE,MAAP,CAAcC,EAAzB,IAAgC,CAAnD,CAHG,CAIH;;AACA,QAAME,OAAO,GAAGf,YAAY,EAA5B;AACA,QAAM,CAACgB,YAAD,EAAeC,eAAf,IAAkC1B,QAAQ,CAAC,IAAD,CAAhD;AAEA,SACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AACE,IAAA,GAAG,EAAC,EADN;AAEE,IAAA,SAAS,EAAC,+CAFZ;AAGE,IAAA,IAAI,EACF,oBAAC,QAAD;AACI,MAAA,EAAE,EAAC,SADP;AAEI,MAAA,OAAO,EAAE,CAFb;AAGI,MAAA,gBAAgB,EAAEQ,IAAI,CAACgB,OAAO,CAACG,IAAT,EAAeH,OAAO,CAACI,MAAvB,CAH1B;AAII,MAAA,OAAO,EAAE3B,MAAM,CAAC,mBAAD,CAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJJ;AAgBE,IAAA,cAAc,EAAC,EAhBjB;AAiBE,IAAA,WAAW,EAAC,QAjBd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAoBE,oBAAC,OAAD;AACE,IAAA,GAAG,EAAC,EADN;AAEE,IAAA,SAAS,EAAC,sEAFZ;AAGE,IAAA,IAAI,EAAE,oBAAC,WAAD;AACE,MAAA,MAAM,EAAC,EADT;AAEE,MAAA,IAAI,EAAC,EAFP;AAGE,MAAA,MAAM,EAAC,EAHT;AAIE,MAAA,SAAS,EAAEA,MAAM,CAAC,mBAAD,CAJnB;AAKE,MAAA,OAAO,EAAEwB,YALX;AAME,MAAA,QAAQ,EAAEA,YANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHR;AAWE,IAAA,cAAc,EAAED,OAAO,CAACK,QAX1B;AAYE,IAAA,WAAW,EAAEL,OAAO,CAACM,aAZvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBF,CAFJ,CADF;AAyCC;AAvDehB,iB","sourcesContent":["import React, { useState } from 'react';\nimport { action } from '@storybook/addon-actions';\nimport { BrowserRouter } from 'react-router-dom'\nimport Content from '../components/Content'\nimport Checkbox from '@material-ui/core/Checkbox';\nimport button from '@material-ui/core';\nimport NSButton from '../components/NSButton/index';\nimport { NSButtonStyles } from '../components/NSButton/styles'\nimport clsx from 'clsx';\nimport { commonStyles, InputWrapper } from '../components/NewRecipient/styles';\nimport ActionPanel from '../components/ActionPanel/index'\n\n\nexport default {\n  title: 'Content',\n  component: Content,\n};\n\nexport function ContentContainter({\n  subHeader,\n  body,\n  headerClass,\n  containerClass,\n  screen,\n}) {\n\nconst headerScreen = (screen && screen.header.xs) || 3;\nconst bodyScreen = (screen && screen.header.xs) || 9;\n// const classes = NSButtonStyles(); \nconst classes = commonStyles();\nconst [loadingState, setloadingState] = useState(true);\n\nreturn (\n  <BrowserRouter>\n    <h3>Content Container </h3>\n      <p> \n        <Content \n          key=''\n          subHeader='This is where a message to the user is passed'\n          body={\n            <NSButton\n                id=\"Forward\"\n                version={2}\n                componentClasses={clsx(classes.btns, classes.margin)}\n                onClick={action(\"I've been clicked\")}>\n                <span>\n                  <p>This is where a component can be passed in</p>\n                  <p><Checkbox />\n                  </p>\n                </span>\n              </NSButton>\n            }\n          containerClass=''\n          headerClass='HEADER'\n        />\n        <Content \n          key=''\n          subHeader='2nd Example that includes styling and passing a loading action panel'\n          body={<ActionPanel\n                  action=\"\"\n                  type=\"\"\n                  formId=\"\"\n                  resetForm={action(\"I've been clicked\")}\n                  loading={loadingState}\n                  disabled={loadingState}>\n                </ActionPanel>}\n          containerClass={classes.required}\n          headerClass={classes.sectionHeader}\n        />\n      </p>\n  </BrowserRouter>\n);\n\n}"]},"metadata":{},"sourceType":"module"}