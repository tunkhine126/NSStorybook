{"ast":null,"code":"var _jsxFileName = \"/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/src/components/NSTable/paginationControls.js\";\n\n/**\n *\n * PaginationControls\n *\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport Grid from '@material-ui/core/Grid';\nimport ArrowForward from '@material-ui/icons/ArrowForwardIos';\nimport ArrowBack from '@material-ui/icons/ArrowBackIos';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport TextLink from '../TextLink/index';\nimport messages from './messages';\nimport { styles } from './styles';\n\nfunction PaginationControls({\n  backIconButtonProps,\n  nextIconButtonProps,\n  onChangePage,\n  count,\n  currentPage,\n  totalPages,\n  resultCount\n}) {\n  const classes = styles();\n  const nextPage = currentPage + 1;\n  const prevPage = currentPage - 1;\n  const disable = currentPage >= totalPages;\n  return React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    container: true,\n    direction: \"row\",\n    justify: \"space-between\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    className: classes.numbeOfRequests,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"body2\",\n    className: classes.dataResults,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, resultCount, \" \", React.createElement(FormattedMessage, Object.assign({}, messages.of, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }))), React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"body2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, count, \" \", React.createElement(FormattedMessage, Object.assign({}, messages.requests, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })))), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(TextLink, Object.assign({\n    content: React.createElement(React.Fragment, null, React.createElement(ArrowBack, {\n      fontSize: \"inherit\",\n      className: classes.paginationLeftArrow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(FormattedMessage, Object.assign({}, messages.prev, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }))),\n    disabled: currentPage <= 1,\n    onClick: e => {\n      onChangePage(e, prevPage);\n    },\n    id: \"prev-btn\"\n  }, backIconButtonProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    container: true,\n    direction: \"row\",\n    justify: \"flex-start\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"page-input\",\n    type: \"number\",\n    disabled: disable,\n    value: currentPage,\n    onChange: e => {\n      const {\n        value\n      } = e.target;\n      const parsedValue = parseInt(value);\n\n      if (parsedValue > 0) {\n        if (parsedValue > totalPages) {\n          onChangePage(e, totalPages - 1);\n        } else {\n          onChangePage(e, parsedValue);\n        }\n      }\n    },\n    className: \"paginationPageInput\",\n    margin: \"normal\",\n    variant: \"outlined\",\n    inputProps: {\n      'aria-label': 'Page Number',\n      maxLength: 3\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, Object.assign({}, messages.of, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  })), \" \", totalPages))), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(TextLink, Object.assign({\n    content: React.createElement(React.Fragment, null, React.createElement(FormattedMessage, Object.assign({}, messages.next, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    })), React.createElement(ArrowForward, {\n      fontSize: \"inherit\",\n      className: classes.paginationRightArrow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    })),\n    disabled: disable,\n    onClick: e => {\n      onChangePage(e, nextPage);\n    },\n    id: \"next-btn\"\n  }, nextIconButtonProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }))));\n}\n\nPaginationControls.displayName = \"PaginationControls\";\nPaginationControls.propTypes = {\n  backIconButtonProps: PropTypes.object,\n  nextIconButtonProps: PropTypes.object,\n  onChangePage: PropTypes.func,\n  count: PropTypes.number.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  resultCount: PropTypes.number.isRequired,\n  totalPages: PropTypes.number.isRequired\n};\nPaginationControls.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"PaginationControls\",\n  \"props\": {\n    \"backIconButtonProps\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"nextIconButtonProps\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"onChangePage\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"count\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"currentPage\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"resultCount\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"totalPages\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    }\n  }\n};\nexport default PaginationControls;\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/components/NSTable/paginationControls.js\"] = {\n    name: \"PaginationControls\",\n    docgenInfo: PaginationControls.__docgenInfo,\n    path: \"src/components/NSTable/paginationControls.js\"\n  };\n}","map":{"version":3,"sources":["/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/src/components/NSTable/paginationControls.js"],"names":["React","PropTypes","FormattedMessage","Grid","ArrowForward","ArrowBack","Typography","TextField","TextLink","messages","styles","PaginationControls","backIconButtonProps","nextIconButtonProps","onChangePage","count","currentPage","totalPages","resultCount","classes","nextPage","prevPage","disable","numbeOfRequests","dataResults","of","requests","paginationLeftArrow","prev","e","value","target","parsedValue","parseInt","maxLength","next","paginationRightArrow","propTypes","object","func","number","isRequired"],"mappings":"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","sourcesContent":["/**\n *\n * PaginationControls\n *\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\n\nimport Grid from '@material-ui/core/Grid';\nimport ArrowForward from '@material-ui/icons/ArrowForwardIos';\nimport ArrowBack from '@material-ui/icons/ArrowBackIos';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\n\nimport TextLink from '../TextLink/index';\nimport messages from './messages';\nimport { styles } from './styles';\n\nfunction PaginationControls({\n  backIconButtonProps,\n  nextIconButtonProps,\n  onChangePage,\n  count,\n  currentPage,\n  totalPages,\n  resultCount,\n}) {\n  const classes = styles();\n  const nextPage = currentPage + 1;\n  const prevPage = currentPage - 1;\n  const disable = currentPage >= totalPages;\n\n  return (\n    <Grid\n      item\n      xs={10}\n      container\n      direction=\"row\"\n      justify=\"space-between\"\n      alignItems=\"center\"\n    >\n      <Grid item className={classes.numbeOfRequests}>\n        <Typography\n          color=\"inherit\"\n          variant=\"body2\"\n          className={classes.dataResults}\n        >\n          {resultCount} <FormattedMessage {...messages.of} />\n        </Typography>\n        <Typography color=\"inherit\" variant=\"body2\">\n          {count} <FormattedMessage {...messages.requests} />\n        </Typography>\n      </Grid>\n\n      <Grid item>\n        <TextLink\n          content={\n            <>\n              <ArrowBack\n                fontSize=\"inherit\"\n                className={classes.paginationLeftArrow}\n              />\n              <FormattedMessage {...messages.prev} />\n            </>\n          }\n          disabled={currentPage <= 1}\n          onClick={e => {\n            onChangePage(e, prevPage);\n          }}\n          id=\"prev-btn\"\n          {...backIconButtonProps}\n        />\n      </Grid>\n\n      <Grid item>\n        <Grid\n          item\n          container\n          direction=\"row\"\n          justify=\"flex-start\"\n          alignItems=\"center\"\n        >\n          <Grid item>\n            <TextField\n              id=\"page-input\"\n              type=\"number\"\n              disabled={disable}\n              value={currentPage}\n              onChange={e => {\n                const { value } = e.target;\n                const parsedValue = parseInt(value);\n\n                if (parsedValue > 0) {\n                  if (parsedValue > totalPages) {\n                    onChangePage(e, totalPages - 1);\n                  } else {\n                    onChangePage(e, parsedValue);\n                  }\n                }\n              }}\n              className=\"paginationPageInput\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              inputProps={{ 'aria-label': 'Page Number', maxLength: 3 }}\n            />\n          </Grid>\n          <Grid item>\n            <FormattedMessage {...messages.of} /> {totalPages}\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid item>\n        <TextLink\n          content={\n            <>\n              <FormattedMessage {...messages.next} />\n              <ArrowForward\n                fontSize=\"inherit\"\n                className={classes.paginationRightArrow}\n              />\n            </>\n          }\n          disabled={disable}\n          onClick={e => {\n            onChangePage(e, nextPage);\n          }}\n          id=\"next-btn\"\n          {...nextIconButtonProps}\n        />\n      </Grid>\n    </Grid>\n  );\n}\n\nPaginationControls.propTypes = {\n  backIconButtonProps: PropTypes.object,\n  nextIconButtonProps: PropTypes.object,\n  onChangePage: PropTypes.func,\n  count: PropTypes.number.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  resultCount: PropTypes.number.isRequired,\n  totalPages: PropTypes.number.isRequired,\n};\n\nexport default PaginationControls;\n"]},"metadata":{},"sourceType":"module"}