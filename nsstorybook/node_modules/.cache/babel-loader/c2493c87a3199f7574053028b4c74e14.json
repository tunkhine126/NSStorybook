{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator\";\nvar _jsxFileName = \"/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/src/components/NSTable/nsCard.js\";\n\n/**\n *\n * NSCard\n *\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDrag, useDrop } from 'react-dnd-cjs';\nimport DragIndicator from '@material-ui/icons/DragIndicator';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport { styles } from './styles';\n\nfunction NSCard({\n  id,\n  label,\n  moveCard,\n  findCard,\n  index\n}) {\n  const classes = styles();\n  const originalIndex = findCard(id).index;\n  const [{\n    isDragging\n  }, drag] = useDrag({\n    item: {\n      type: 'nsCard',\n      id,\n      originalIndex\n    },\n    collect: monitor => ({\n      isDragging: monitor.isDragging()\n    })\n  });\n  const [, drop] = useDrop({\n    accept: 'nsCard',\n    canDrop: () => false,\n\n    hover({\n      id: draggedId\n    }) {\n      if (draggedId !== id) {\n        const {\n          index: overIndex\n        } = findCard(id);\n        moveCard(draggedId, overIndex);\n      }\n    }\n\n  });\n  const opacity = isDragging ? 0 : 1;\n  return React.createElement(Grid, {\n    item: true,\n    container: true,\n    direction: \"row\",\n    justify: \"center\",\n    alignItems: \"center\",\n    className: classes.nsCardContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    className: classes.tsDragNDropIndex,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"body1\",\n    gutterBottom: true,\n    className: classes.nsCardIndex,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, index + 1)), React.createElement(Grid, {\n    item: true,\n    xs: true,\n    container: true,\n    direction: \"row\",\n    justify: \"center\",\n    alignItems: \"center\",\n    ref: node => drag(drop(node)),\n    className: classes.nsCardContent,\n    style: {\n      opacity\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: true,\n    className: classes.nsCardLabel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, label), React.createElement(DragIndicator, {\n    className: classes.nsCardDragIndicator,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  })));\n}\n\nNSCard.displayName = \"NSCard\";\nNSCard.propTypes = {\n  id: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  label: PropTypes.string.isRequired,\n  moveCard: PropTypes.func.isRequired,\n  findCard: PropTypes.func.isRequired\n};\nNSCard.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"NSCard\",\n  \"props\": {\n    \"id\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"index\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"label\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"moveCard\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"findCard\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    }\n  }\n};\nexport default NSCard;\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/components/NSTable/nsCard.js\"] = {\n    name: \"NSCard\",\n    docgenInfo: NSCard.__docgenInfo,\n    path: \"src/components/NSTable/nsCard.js\"\n  };\n}","map":{"version":3,"sources":["/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/src/components/NSTable/nsCard.js"],"names":["React","PropTypes","useDrag","useDrop","DragIndicator","Typography","Grid","styles","NSCard","id","label","moveCard","findCard","index","classes","originalIndex","isDragging","drag","item","type","collect","monitor","drop","accept","canDrop","hover","draggedId","overIndex","opacity","nsCardContainer","tsDragNDropIndex","nsCardIndex","node","nsCardContent","nsCardLabel","nsCardDragIndicator","propTypes","string","isRequired","number","func"],"mappings":"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","sourcesContent":["/**\n *\n * NSCard\n *\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDrag, useDrop } from 'react-dnd-cjs';\n\nimport DragIndicator from '@material-ui/icons/DragIndicator';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport { styles } from './styles';\n\nfunction NSCard({ id, label, moveCard, findCard, index }) {\n  const classes = styles();\n  const originalIndex = findCard(id).index;\n  const [{ isDragging }, drag] = useDrag({\n    item: { type: 'nsCard', id, originalIndex },\n    collect: monitor => ({\n      isDragging: monitor.isDragging(),\n    }),\n  });\n  const [, drop] = useDrop({\n    accept: 'nsCard',\n    canDrop: () => false,\n    hover({ id: draggedId }) {\n      if (draggedId !== id) {\n        const { index: overIndex } = findCard(id);\n        moveCard(draggedId, overIndex);\n      }\n    },\n  });\n  const opacity = isDragging ? 0 : 1;\n  return (\n    <Grid\n      item\n      container\n      direction=\"row\"\n      justify=\"center\"\n      alignItems=\"center\"\n      className={classes.nsCardContainer}\n    >\n      <Grid item className={classes.tsDragNDropIndex}>\n        <Typography\n          variant=\"body1\"\n          gutterBottom\n          className={classes.nsCardIndex}\n        >\n          {index + 1}\n        </Typography>\n      </Grid>\n\n      <Grid\n        item\n        xs\n        container\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n        ref={node => drag(drop(node))}\n        className={classes.nsCardContent}\n        style={{\n          opacity,\n        }}\n      >\n        <Grid item xs className={classes.nsCardLabel}>\n          {label}\n        </Grid>\n\n        <DragIndicator className={classes.nsCardDragIndicator} />\n      </Grid>\n    </Grid>\n  );\n}\n\nNSCard.propTypes = {\n  id: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  label: PropTypes.string.isRequired,\n  moveCard: PropTypes.func.isRequired,\n  findCard: PropTypes.func.isRequired,\n};\n\nexport default NSCard;\n"]},"metadata":{},"sourceType":"module"}