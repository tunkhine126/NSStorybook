{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator\";\nvar _jsxFileName = \"/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/src/components/NSTable/TableSettings/index.js\";\n\n/**\n *\n * TableSettings\n *\n */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { injectIntl, intlShape } from 'react-intl';\nimport Grid from '@material-ui/core/Grid';\nimport Settings from '@material-ui/icons/Settings';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport SolidDownArrow from 'components/shared/Icons/solidDownArrow';\nimport CoreSettings from './coreSettings';\nimport ReorderView from './reorderView';\nimport messages from '../messages';\nimport { styles, tableSettingBtnStyle, UpArrowStyle } from '../styles';\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(Divider, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 131\n  },\n  __self: this\n});\n\nfunction TableSettings({\n  intl,\n  columns,\n  density,\n  columnChange,\n  densityChange,\n  rowChange,\n  handleReorder\n}) {\n  const classes = styles();\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [reorderMode, setReorderMode] = useState(false);\n  const [addingField, setAddingField] = useState(false);\n\n  const handleMenuClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleExited = () => {\n    setAddingField(false);\n    setReorderMode(false);\n  };\n\n  const handleReorderMode = () => {\n    setReorderMode(!reorderMode);\n  };\n\n  const PaperProps = {\n    style: {\n      boxShadow: '0px 2px 4px rgba(0, 0, 0, 0.25)',\n      width: 390\n    }\n  };\n  const MenuListProps = {\n    style: {\n      paddingBottom: 0\n    }\n  };\n  return React.createElement(React.Fragment, null, React.createElement(IconButton, {\n    \"aria-label\": \"table settings\",\n    size: \"small\",\n    \"aria-controls\": \"table-settings\",\n    \"aria-haspopup\": \"true\",\n    variant: \"contained\",\n    classes: tableSettingBtnStyle(),\n    onClick: handleMenuClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Settings, {\n    className: classes.toolWheel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  })), React.createElement(Menu, {\n    id: \"table-settings\",\n    anchorEl: anchorEl,\n    keepMounted: true,\n    open: Boolean(anchorEl),\n    onClose: handleClose,\n    onExited: handleExited,\n    getContentAnchorEl: null,\n    PaperProps: PaperProps,\n    MenuListProps: MenuListProps,\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    transformOrigin: {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"space-between\",\n    alignItems: \"flex-start\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"body1\",\n    gutterBottom: true,\n    className: classes.menuTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, intl.formatMessage(messages.tableSettings))), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(UpArrowStyle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    \"aria-label\": \"close table settings\",\n    \"aria-controls\": \"table-settings-close\",\n    \"aria-haspopup\": \"false\",\n    color: \"primary\",\n    onClick: handleClose,\n    className: classes.upArrowBtn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(SolidDownArrow, {\n    className: classes.upArrow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }))))), _ref, React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"flex-start\",\n    alignItems: \"stretch\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, !reorderMode ? React.createElement(CoreSettings, {\n    rowChange: rowChange,\n    columnChange: columnChange,\n    columns: columns,\n    handleReorderMode: handleReorderMode,\n    density: density,\n    densityChange: densityChange,\n    addingFieldProps: {\n      addingField,\n      setAddingField\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }) : React.createElement(ReorderView, {\n    handleReorder: handleReorder,\n    handleReorderMode: handleReorderMode,\n    columns: columns,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }))));\n}\n\nTableSettings.propTypes = {\n  intl: intlShape.isRequired,\n  columns: PropTypes.array.isRequired,\n  columnChange: PropTypes.func.isRequired,\n  densityChange: PropTypes.func.isRequired,\n  density: PropTypes.string.isRequired,\n  rowChange: PropTypes.func.isRequired,\n  handleReorder: PropTypes.func.isRequired\n};\nconst IntlTableSettings = injectIntl(TableSettings);\nexport default IntlTableSettings;\nTableSettings.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"TableSettings\",\n  \"props\": {\n    \"intl\": {\n      \"type\": {\n        \"name\": \"custom\",\n        \"raw\": \"intlShape.isRequired\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"columns\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"columnChange\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"densityChange\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"density\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"rowChange\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"handleReorder\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/components/NSTable/TableSettings/index.js\"] = {\n    name: \"TableSettings\",\n    docgenInfo: TableSettings.__docgenInfo,\n    path: \"src/components/NSTable/TableSettings/index.js\"\n  };\n}","map":{"version":3,"sources":["/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/src/components/NSTable/TableSettings/index.js"],"names":["React","useState","PropTypes","injectIntl","intlShape","Grid","Settings","IconButton","Menu","Typography","Divider","SolidDownArrow","CoreSettings","ReorderView","messages","styles","tableSettingBtnStyle","UpArrowStyle","TableSettings","intl","columns","density","columnChange","densityChange","rowChange","handleReorder","classes","anchorEl","setAnchorEl","reorderMode","setReorderMode","addingField","setAddingField","handleMenuClick","event","currentTarget","handleClose","handleExited","handleReorderMode","PaperProps","style","boxShadow","width","MenuListProps","paddingBottom","toolWheel","Boolean","vertical","horizontal","menuTitle","formatMessage","tableSettings","upArrowBtn","upArrow","propTypes","isRequired","array","func","string","IntlTableSettings"],"mappings":"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","sourcesContent":["/**\n *\n * TableSettings\n *\n */\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { injectIntl, intlShape } from 'react-intl';\n\nimport Grid from '@material-ui/core/Grid';\nimport Settings from '@material-ui/icons/Settings';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\n\nimport SolidDownArrow from 'components/shared/Icons/solidDownArrow';\nimport CoreSettings from './coreSettings';\nimport ReorderView from './reorderView';\nimport messages from '../messages';\nimport { styles, tableSettingBtnStyle, UpArrowStyle } from '../styles';\n\nfunction TableSettings({\n  intl,\n  columns,\n  density,\n  columnChange,\n  densityChange,\n  rowChange,\n  handleReorder,\n}) {\n  const classes = styles();\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [reorderMode, setReorderMode] = useState(false);\n  const [addingField, setAddingField] = useState(false);\n\n  const handleMenuClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleExited = () => {\n    setAddingField(false);\n    setReorderMode(false);\n  };\n\n  const handleReorderMode = () => {\n    setReorderMode(!reorderMode);\n  };\n\n  const PaperProps = {\n    style: {\n      boxShadow: '0px 2px 4px rgba(0, 0, 0, 0.25)',\n      width: 390,\n    },\n  };\n\n  const MenuListProps = {\n    style: {\n      paddingBottom: 0,\n    },\n  };\n\n  return (\n    <>\n      <IconButton\n        aria-label=\"table settings\"\n        size=\"small\"\n        aria-controls=\"table-settings\"\n        aria-haspopup=\"true\"\n        variant=\"contained\"\n        classes={tableSettingBtnStyle()}\n        onClick={handleMenuClick}\n      >\n        <Settings className={classes.toolWheel} />\n      </IconButton>\n      <Menu\n        id=\"table-settings\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n        onExited={handleExited}\n        getContentAnchorEl={null}\n        PaperProps={PaperProps}\n        MenuListProps={MenuListProps}\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'right',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'right',\n        }}\n      >\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"space-between\"\n          alignItems=\"flex-start\"\n        >\n          <Grid item xs>\n            <Typography\n              variant=\"body1\"\n              gutterBottom\n              className={classes.menuTitle}\n            >\n              {intl.formatMessage(messages.tableSettings)}\n            </Typography>\n          </Grid>\n          <Grid item>\n            <UpArrowStyle>\n              <IconButton\n                aria-label=\"close table settings\"\n                aria-controls=\"table-settings-close\"\n                aria-haspopup=\"false\"\n                color=\"primary\"\n                onClick={handleClose}\n                className={classes.upArrowBtn}\n              >\n                <SolidDownArrow className={classes.upArrow} />\n              </IconButton>\n            </UpArrowStyle>\n          </Grid>\n        </Grid>\n\n        <Divider />\n\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"flex-start\"\n          alignItems=\"stretch\"\n        >\n          {!reorderMode ? (\n            <CoreSettings\n              rowChange={rowChange}\n              columnChange={columnChange}\n              columns={columns}\n              handleReorderMode={handleReorderMode}\n              density={density}\n              densityChange={densityChange}\n              addingFieldProps={{ addingField, setAddingField }}\n            />\n          ) : (\n            <ReorderView\n              handleReorder={handleReorder}\n              handleReorderMode={handleReorderMode}\n              columns={columns}\n            />\n          )}\n        </Grid>\n      </Menu>\n    </>\n  );\n}\n\nTableSettings.propTypes = {\n  intl: intlShape.isRequired,\n  columns: PropTypes.array.isRequired,\n  columnChange: PropTypes.func.isRequired,\n  densityChange: PropTypes.func.isRequired,\n  density: PropTypes.string.isRequired,\n  rowChange: PropTypes.func.isRequired,\n  handleReorder: PropTypes.func.isRequired,\n};\n\nconst IntlTableSettings = injectIntl(TableSettings);\n\nexport default IntlTableSettings;\n"]},"metadata":{},"sourceType":"module"}