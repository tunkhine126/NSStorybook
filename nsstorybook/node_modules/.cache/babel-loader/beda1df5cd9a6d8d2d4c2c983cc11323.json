{"ast":null,"code":"import \"core-js/modules/es.string.replace\";\nimport \"core-js/modules/web.dom-collections.iterator\";\nimport _objectSpread from \"/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/src/components/RecipientList/RecipientView/Widget/recipientPanel.js\";\n\n/**\n *\n * RecipientPanel\n *\n */\nimport React, { useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { injectIntl, intlShape } from 'react-intl';\nimport { useMutation } from '@apollo/react-hooks';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Divider from '@material-ui/core/Divider';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { generalErrorHandler } from 'utils/error-handler';\nimport { UPDATE_RECIPIENT } from 'graphql/mutations/families/families-mutation';\nimport { GET_FAMILY_RECIEPIENT_CACHE, GET_FAMILY_CHILD_RECIEPIENT_CACHE } from 'graphql/queries/families/family-queries';\nimport SmallRightArrow from 'components/shared/Icons/smallRightArrow';\nimport NSButton from 'components/shared/NSButton';\nimport placeHolderImg from 'assets/images/familyPlaceholder.png';\nimport { generateImg } from 'utils/helpers';\nimport globalMessages from 'messages';\nimport TwoColumns from './twoColumns';\nimport { ftSwitch } from './helper';\nimport { RecipientViewContext } from '../context';\nimport { recipientListStyles, ExpansionPanelDetailsStyle, RecipientPanelStyles } from '../../styles';\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(SmallRightArrow, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 219\n  },\n  __self: this\n});\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(Divider, {\n  light: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 255\n  },\n  __self: this\n});\n\nfunction RecipientPanel({\n  intl,\n  name,\n  type,\n  data,\n  customFields,\n  enableDelete,\n  parent = false,\n  lastChild = true,\n  twoColumn = false\n}) {\n  let allOptions = [];\n  const singleFields = [];\n  let twoColfields = [];\n  const allFieldsCurrentValue = {};\n  const allPhotoFields = {};\n  const allDateFields = {};\n  const allTimeFields = {};\n  const {\n    rest,\n    match\n  } = useContext(RecipientViewContext);\n  const classes = recipientListStyles();\n  const rsClasses = RecipientPanelStyles();\n  const [updateRecipientChild, {\n    error: childError\n  }] = useMutation(UPDATE_RECIPIENT, {\n    update(cache, {\n      data: {\n        updateRecipient: {\n          recipient: {\n            parent: {\n              children: updatedChildren\n            }\n          }\n        }\n      }\n    }) {\n      // Update apollo cache after successful db update\n      cache.writeQuery({\n        query: GET_FAMILY_CHILD_RECIEPIENT_CACHE,\n        data: {\n          recipient: {\n            children: updatedChildren,\n            __typename: 'Recipient'\n          }\n        },\n        variables: {\n          uuid: match.params.id\n        }\n      });\n    }\n\n  });\n  const [updateRecipient, {\n    error\n  }] = useMutation(UPDATE_RECIPIENT, {\n    update(cache, {\n      data: {\n        updateRecipient: {\n          recipient\n        }\n      }\n    }) {\n      cache.writeQuery({\n        query: GET_FAMILY_RECIEPIENT_CACHE,\n        data: {\n          recipient,\n          __typename: 'Recipient'\n        },\n        variables: {\n          uuid: match.params.id\n        }\n      });\n    }\n\n  });\n  const [recipientData, setRecipientData] = useState({\n    currentValue: allFieldsCurrentValue,\n    items: [...allOptions],\n    photos: allPhotoFields,\n    dates: allDateFields,\n    times: allTimeFields\n  });\n  const [expanded, setExpanded] = useState(false);\n\n  const reArrangeFields = function (arr) {\n    const from = arr.indexOf(arr.find(a => a.props.type === 'photo'));\n    const to = arr.length - 1;\n    arr.splice(to, 0, arr.splice(from, 1)[0]);\n  };\n\n  const handleOptionChange = (value, field) => {\n    setRecipientData(state => _objectSpread({}, state, {\n      currentValue: _objectSpread({}, state.currentValue, {\n        [field]: {\n          item: value\n        }\n      })\n    }));\n  };\n\n  const handleDateTimeChange = (value, field, types) => {\n    setRecipientData(state => _objectSpread({}, state, {\n      [types]: _objectSpread({}, state[types], {\n        [field]: value\n      })\n    }));\n  };\n\n  if (customFields) {\n    customFields.filter((f, i) => {\n      if (f.option_values) {\n        if (f.field_type === 'multi_select') {\n          allFieldsCurrentValue[f.name] = {\n            item: !data.customFields[f.name] ? [] : data.customFields[f.name]\n          };\n        } else {\n          allFieldsCurrentValue[f.name] = {\n            item: !data.customFields[f.name] ? f.option_values[0] : data.customFields[f.name]\n          };\n        }\n      }\n\n      if (f.field_type === 'photo') {\n        allPhotoFields[f.name] = data.customFields[f.name];\n      }\n\n      if (f.field_type === 'date') {\n        allDateFields[f.name] = data.customFields[f.name];\n      }\n\n      if (f.field_type === 'time') {\n        allTimeFields[f.name] = data.customFields[f.name];\n      }\n\n      singleFields.push(ftSwitch(f, data, i, recipientData, handleOptionChange, handleDateTimeChange, parent ? updateRecipient : updateRecipientChild));\n      return f.option_values;\n    }).map(o => o.option_values).forEach(group => {\n      group.forEach(o => {\n        allOptions = [...allOptions, {\n          value: o\n        }];\n      });\n    });\n    reArrangeFields(singleFields);\n\n    if (twoColumn && customFields.length > 0) {\n      for (let i = 0; i < singleFields.length; i += 2) {\n        const current = singleFields[i];\n        const next = singleFields[i + 1];\n        twoColfields = [...twoColfields, React.createElement(TwoColumns, {\n          key: i + 5 * 10,\n          col1: current || React.createElement(React.Fragment, null),\n          col2: next || React.createElement(React.Fragment, null),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201\n          },\n          __self: this\n        })];\n      }\n    }\n  }\n\n  if (error || childError) {\n    return generalErrorHandler(error || childError, _objectSpread({}, rest));\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(ExpansionPanel, {\n    onChange: (event, open) => setExpanded(open),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, React.createElement(ExpansionPanelSummary, {\n    expandIcon: _ref,\n    \"aria-controls\": \"family-member\",\n    id: name.toLowerCase().replace(/ /g, ''),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    justify: \"flex-start\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"body2\",\n    className: classes.contentBody,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }, name), type && React.createElement(Typography, {\n    variant: \"caption\",\n    className: classes.caption,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }, type))), React.createElement(ExpansionPanelDetailsStyle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  }, React.createElement(ExpansionPanelDetails, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238\n    },\n    __self: this\n  }, React.createElement(CardMedia, {\n    className: classes.recipientChildPhoto,\n    component: \"img\",\n    alt: data.name,\n    width: \"100%\",\n    image: data.base64Avatar ? generateImg(data.base64Avatar) : placeHolderImg,\n    title: data.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252\n    },\n    __self: this\n  }, twoColumn ? twoColfields : singleFields, _ref2, enableDelete && React.createElement(Grid, {\n    item: true,\n    container: true,\n    direction: \"row\",\n    justify: \"flex-end\",\n    alignItems: \"flex-end\",\n    className: rsClasses.deleteRecipientContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258\n    },\n    __self: this\n  }, React.createElement(NSButton, {\n    textBtn: true,\n    variant: \"contained\",\n    size: \"small\",\n    onClick: () => console.log('DELETING MEMBER'),\n    componentClasses: \"recipient-delete-btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266\n    },\n    __self: this\n  }, React.createElement(DeleteIcon, {\n    className: rsClasses.deleteIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    variant: \"body1\",\n    className: classes.recipientDeleteBtnText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275\n    },\n    __self: this\n  }, intl.formatMessage(globalMessages.deleteRecipient)))), !lastChild && React.createElement(Divider, {\n    className: rsClasses.divider,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285\n    },\n    __self: this\n  })))))), !lastChild && !expanded && React.createElement(Divider, {\n    light: true,\n    className: classes.divider,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291\n    },\n    __self: this\n  }));\n}\n\nRecipientPanel.propTypes = {\n  intl: intlShape.isRequired,\n  name: PropTypes.string.isRequired,\n  customFields: PropTypes.array,\n  data: PropTypes.object.isRequired,\n  lastChild: PropTypes.bool,\n  parent: PropTypes.bool,\n  twoColumn: PropTypes.bool,\n  enableDelete: PropTypes.bool,\n  type: PropTypes.string\n};\nconst intlRecipientPanel = injectIntl(RecipientPanel);\nexport default intlRecipientPanel;\nRecipientPanel.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"RecipientPanel\",\n  \"props\": {\n    \"parent\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"lastChild\": {\n      \"defaultValue\": {\n        \"value\": \"true\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"twoColumn\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"intl\": {\n      \"type\": {\n        \"name\": \"custom\",\n        \"raw\": \"intlShape.isRequired\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"name\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"customFields\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"data\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"enableDelete\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"type\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/components/RecipientList/RecipientView/Widget/recipientPanel.js\"] = {\n    name: \"RecipientPanel\",\n    docgenInfo: RecipientPanel.__docgenInfo,\n    path: \"src/components/RecipientList/RecipientView/Widget/recipientPanel.js\"\n  };\n}","map":{"version":3,"sources":["/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/src/components/RecipientList/RecipientView/Widget/recipientPanel.js"],"names":["React","useState","useContext","PropTypes","injectIntl","intlShape","useMutation","ExpansionPanel","ExpansionPanelSummary","ExpansionPanelDetails","Typography","Grid","CardMedia","Divider","DeleteIcon","generalErrorHandler","UPDATE_RECIPIENT","GET_FAMILY_RECIEPIENT_CACHE","GET_FAMILY_CHILD_RECIEPIENT_CACHE","SmallRightArrow","NSButton","placeHolderImg","generateImg","globalMessages","TwoColumns","ftSwitch","RecipientViewContext","recipientListStyles","ExpansionPanelDetailsStyle","RecipientPanelStyles","RecipientPanel","intl","name","type","data","customFields","enableDelete","parent","lastChild","twoColumn","allOptions","singleFields","twoColfields","allFieldsCurrentValue","allPhotoFields","allDateFields","allTimeFields","rest","match","classes","rsClasses","updateRecipientChild","error","childError","update","cache","updateRecipient","recipient","children","updatedChildren","writeQuery","query","__typename","variables","uuid","params","id","recipientData","setRecipientData","currentValue","items","photos","dates","times","expanded","setExpanded","reArrangeFields","arr","from","indexOf","find","a","props","to","length","splice","handleOptionChange","value","field","state","item","handleDateTimeChange","types","filter","f","i","option_values","field_type","push","map","o","forEach","group","current","next","event","open","toLowerCase","replace","contentBody","caption","recipientChildPhoto","base64Avatar","deleteRecipientContainer","console","log","deleteIcon","recipientDeleteBtnText","formatMessage","deleteRecipient","divider","propTypes","isRequired","string","array","object","bool","intlRecipientPanel"],"mappings":";;;;;AAAA;;;;;AAMA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,YAAtC;AACA,SAASC,WAAT,QAA4B,qBAA5B;AAEA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,qBAAP,MAAkC,yCAAlC;AACA,OAAOC,qBAAP,MAAkC,yCAAlC;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AAEA,SAASC,mBAAT,QAAoC,qBAApC;AACA,SAASC,gBAAT,QAAiC,8CAAjC;AACA,SACEC,2BADF,EAEEC,iCAFF,QAGO,yCAHP;AAIA,OAAOC,eAAP,MAA4B,yCAA5B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,cAAP,MAA2B,qCAA3B;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,OAAOC,cAAP,MAA2B,UAA3B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,QAAT,QAAyB,UAAzB;AACA,SAASC,oBAAT,QAAqC,YAArC;AACA,SACEC,mBADF,EAEEC,0BAFF,EAGEC,oBAHF,QAIO,cAJP;;;;AAwLsB,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,E;;;;AAoCN,oBAAC,OAAD;AAAS,EAAA,KAAK,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,E;;AAtNhB,SAASC,cAAT,CAAwB;AACtBC,EAAAA,IADsB;AAEtBC,EAAAA,IAFsB;AAGtBC,EAAAA,IAHsB;AAItBC,EAAAA,IAJsB;AAKtBC,EAAAA,YALsB;AAMtBC,EAAAA,YANsB;AAOtBC,EAAAA,MAAM,GAAG,KAPa;AAQtBC,EAAAA,SAAS,GAAG,IARU;AAStBC,EAAAA,SAAS,GAAG;AATU,CAAxB,EAUG;AACD,MAAIC,UAAU,GAAG,EAAjB;AACA,QAAMC,YAAY,GAAG,EAArB;AACA,MAAIC,YAAY,GAAG,EAAnB;AACA,QAAMC,qBAAqB,GAAG,EAA9B;AACA,QAAMC,cAAc,GAAG,EAAvB;AACA,QAAMC,aAAa,GAAG,EAAtB;AACA,QAAMC,aAAa,GAAG,EAAtB;AACA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkB9C,UAAU,CAACwB,oBAAD,CAAlC;AACA,QAAMuB,OAAO,GAAGtB,mBAAmB,EAAnC;AACA,QAAMuB,SAAS,GAAGrB,oBAAoB,EAAtC;AAEA,QAAM,CAACsB,oBAAD,EAAuB;AAAEC,IAAAA,KAAK,EAAEC;AAAT,GAAvB,IAAgD/C,WAAW,CAC/DU,gBAD+D,EAE/D;AACEsC,IAAAA,MAAM,CACJC,KADI,EAEJ;AACErB,MAAAA,IAAI,EAAE;AACJsB,QAAAA,eAAe,EAAE;AACfC,UAAAA,SAAS,EAAE;AACTpB,YAAAA,MAAM,EAAE;AAAEqB,cAAAA,QAAQ,EAAEC;AAAZ;AADC;AADI;AADb;AADR,KAFI,EAWJ;AACA;AACAJ,MAAAA,KAAK,CAACK,UAAN,CAAiB;AACfC,QAAAA,KAAK,EAAE3C,iCADQ;AAEfgB,QAAAA,IAAI,EAAE;AACJuB,UAAAA,SAAS,EAAE;AAAEC,YAAAA,QAAQ,EAAEC,eAAZ;AAA6BG,YAAAA,UAAU,EAAE;AAAzC;AADP,SAFS;AAKfC,QAAAA,SAAS,EAAE;AACTC,UAAAA,IAAI,EAAEhB,KAAK,CAACiB,MAAN,CAAaC;AADV;AALI,OAAjB;AASD;;AAvBH,GAF+D,CAAjE;AA6BA,QAAM,CAACV,eAAD,EAAkB;AAAEJ,IAAAA;AAAF,GAAlB,IAA+B9C,WAAW,CAACU,gBAAD,EAAmB;AACjEsC,IAAAA,MAAM,CACJC,KADI,EAEJ;AACErB,MAAAA,IAAI,EAAE;AACJsB,QAAAA,eAAe,EAAE;AAAEC,UAAAA;AAAF;AADb;AADR,KAFI,EAOJ;AACAF,MAAAA,KAAK,CAACK,UAAN,CAAiB;AACfC,QAAAA,KAAK,EAAE5C,2BADQ;AAEfiB,QAAAA,IAAI,EAAE;AACJuB,UAAAA,SADI;AAEJK,UAAAA,UAAU,EAAE;AAFR,SAFS;AAMfC,QAAAA,SAAS,EAAE;AACTC,UAAAA,IAAI,EAAEhB,KAAK,CAACiB,MAAN,CAAaC;AADV;AANI,OAAjB;AAUD;;AAnBgE,GAAnB,CAAhD;AAsBA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCnE,QAAQ,CAAC;AACjDoE,IAAAA,YAAY,EAAE1B,qBADmC;AAEjD2B,IAAAA,KAAK,EAAE,CAAC,GAAG9B,UAAJ,CAF0C;AAGjD+B,IAAAA,MAAM,EAAE3B,cAHyC;AAIjD4B,IAAAA,KAAK,EAAE3B,aAJ0C;AAKjD4B,IAAAA,KAAK,EAAE3B;AAL0C,GAAD,CAAlD;AAQA,QAAM,CAAC4B,QAAD,EAAWC,WAAX,IAA0B1E,QAAQ,CAAC,KAAD,CAAxC;;AAEA,QAAM2E,eAAe,GAAG,UAASC,GAAT,EAAc;AACpC,UAAMC,IAAI,GAAGD,GAAG,CAACE,OAAJ,CAAYF,GAAG,CAACG,IAAJ,CAASC,CAAC,IAAIA,CAAC,CAACC,KAAF,CAAQjD,IAAR,KAAiB,OAA/B,CAAZ,CAAb;AACA,UAAMkD,EAAE,GAAGN,GAAG,CAACO,MAAJ,GAAa,CAAxB;AACAP,IAAAA,GAAG,CAACQ,MAAJ,CAAWF,EAAX,EAAe,CAAf,EAAkBN,GAAG,CAACQ,MAAJ,CAAWP,IAAX,EAAiB,CAAjB,EAAoB,CAApB,CAAlB;AACD,GAJD;;AAMA,QAAMQ,kBAAkB,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC3CpB,IAAAA,gBAAgB,CAACqB,KAAK,sBACjBA,KADiB;AAEpBpB,MAAAA,YAAY,oBAAOoB,KAAK,CAACpB,YAAb;AAA2B,SAACmB,KAAD,GAAS;AAAEE,UAAAA,IAAI,EAAEH;AAAR;AAApC;AAFQ,MAAN,CAAhB;AAID,GALD;;AAOA,QAAMI,oBAAoB,GAAG,CAACJ,KAAD,EAAQC,KAAR,EAAeI,KAAf,KAAyB;AACpDxB,IAAAA,gBAAgB,CAACqB,KAAK,sBACjBA,KADiB;AAEpB,OAACG,KAAD,qBAAcH,KAAK,CAACG,KAAD,CAAnB;AAA4B,SAACJ,KAAD,GAASD;AAArC;AAFoB,MAAN,CAAhB;AAID,GALD;;AAOA,MAAIpD,YAAJ,EAAkB;AAChBA,IAAAA,YAAY,CACT0D,MADH,CACU,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAChB,UAAID,CAAC,CAACE,aAAN,EAAqB;AACnB,YAAIF,CAAC,CAACG,UAAF,KAAiB,cAArB,EAAqC;AACnCtD,UAAAA,qBAAqB,CAACmD,CAAC,CAAC9D,IAAH,CAArB,GAAgC;AAC9B0D,YAAAA,IAAI,EAAE,CAACxD,IAAI,CAACC,YAAL,CAAkB2D,CAAC,CAAC9D,IAApB,CAAD,GAA6B,EAA7B,GAAkCE,IAAI,CAACC,YAAL,CAAkB2D,CAAC,CAAC9D,IAApB;AADV,WAAhC;AAGD,SAJD,MAIO;AACLW,UAAAA,qBAAqB,CAACmD,CAAC,CAAC9D,IAAH,CAArB,GAAgC;AAC9B0D,YAAAA,IAAI,EAAE,CAACxD,IAAI,CAACC,YAAL,CAAkB2D,CAAC,CAAC9D,IAApB,CAAD,GACF8D,CAAC,CAACE,aAAF,CAAgB,CAAhB,CADE,GAEF9D,IAAI,CAACC,YAAL,CAAkB2D,CAAC,CAAC9D,IAApB;AAH0B,WAAhC;AAKD;AACF;;AACD,UAAI8D,CAAC,CAACG,UAAF,KAAiB,OAArB,EAA8B;AAC5BrD,QAAAA,cAAc,CAACkD,CAAC,CAAC9D,IAAH,CAAd,GAAyBE,IAAI,CAACC,YAAL,CAAkB2D,CAAC,CAAC9D,IAApB,CAAzB;AACD;;AAED,UAAI8D,CAAC,CAACG,UAAF,KAAiB,MAArB,EAA6B;AAC3BpD,QAAAA,aAAa,CAACiD,CAAC,CAAC9D,IAAH,CAAb,GAAwBE,IAAI,CAACC,YAAL,CAAkB2D,CAAC,CAAC9D,IAApB,CAAxB;AACD;;AAED,UAAI8D,CAAC,CAACG,UAAF,KAAiB,MAArB,EAA6B;AAC3BnD,QAAAA,aAAa,CAACgD,CAAC,CAAC9D,IAAH,CAAb,GAAwBE,IAAI,CAACC,YAAL,CAAkB2D,CAAC,CAAC9D,IAApB,CAAxB;AACD;;AAEDS,MAAAA,YAAY,CAACyD,IAAb,CACEzE,QAAQ,CACNqE,CADM,EAEN5D,IAFM,EAGN6D,CAHM,EAIN5B,aAJM,EAKNmB,kBALM,EAMNK,oBANM,EAONtD,MAAM,GAAGmB,eAAH,GAAqBL,oBAPrB,CADV;AAWA,aAAO2C,CAAC,CAACE,aAAT;AACD,KAvCH,EAwCGG,GAxCH,CAwCOC,CAAC,IAAIA,CAAC,CAACJ,aAxCd,EAyCGK,OAzCH,CAyCWC,KAAK,IAAI;AAChBA,MAAAA,KAAK,CAACD,OAAN,CAAcD,CAAC,IAAI;AACjB5D,QAAAA,UAAU,GAAG,CAAC,GAAGA,UAAJ,EAAgB;AAAE+C,UAAAA,KAAK,EAAEa;AAAT,SAAhB,CAAb;AACD,OAFD;AAGD,KA7CH;AA+CAxB,IAAAA,eAAe,CAACnC,YAAD,CAAf;;AAEA,QAAIF,SAAS,IAAIJ,YAAY,CAACiD,MAAb,GAAsB,CAAvC,EAA0C;AACxC,WAAK,IAAIW,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGtD,YAAY,CAAC2C,MAAjC,EAAyCW,CAAC,IAAI,CAA9C,EAAiD;AAC/C,cAAMQ,OAAO,GAAG9D,YAAY,CAACsD,CAAD,CAA5B;AACA,cAAMS,IAAI,GAAG/D,YAAY,CAACsD,CAAC,GAAG,CAAL,CAAzB;AAEArD,QAAAA,YAAY,GAAG,CACb,GAAGA,YADU,EAEb,oBAAC,UAAD;AACE,UAAA,GAAG,EAAEqD,CAAC,GAAG,IAAI,EADf;AAEE,UAAA,IAAI,EAAEQ,OAAO,IAAI,yCAFnB;AAGE,UAAA,IAAI,EAAEC,IAAI,IAAI,yCAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFa,CAAf;AAQD;AACF;AACF;;AAED,MAAIpD,KAAK,IAAIC,UAAb,EAAyB;AACvB,WAAOtC,mBAAmB,CAACqC,KAAK,IAAIC,UAAV,oBAA2BN,IAA3B,EAA1B;AACD;;AAED,SACE,0CACE,oBAAC,cAAD;AAAgB,IAAA,QAAQ,EAAE,CAAC0D,KAAD,EAAQC,IAAR,KAAiB/B,WAAW,CAAC+B,IAAD,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,qBAAD;AACE,IAAA,UAAU,MADZ;AAEE,qBAAc,eAFhB;AAGE,IAAA,EAAE,EAAE1E,IAAI,CAAC2E,WAAL,GAAmBC,OAAnB,CAA2B,IAA3B,EAAiC,EAAjC,CAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,SAAS,EAAC,QAA1B;AAAmC,IAAA,OAAO,EAAC,YAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAA4B,IAAA,SAAS,EAAE3D,OAAO,CAAC4D,WAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG7E,IADH,CADF,EAIGC,IAAI,IACH,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,SAApB;AAA8B,IAAA,SAAS,EAAEgB,OAAO,CAAC6D,OAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG7E,IADH,CALJ,CALF,CADF,EAkBE,oBAAC,0BAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,SAAS,EAAC,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,SAAS,EAAEgB,OAAO,CAAC8D,mBADrB;AAEE,IAAA,SAAS,EAAC,KAFZ;AAGE,IAAA,GAAG,EAAE7E,IAAI,CAACF,IAHZ;AAIE,IAAA,KAAK,EAAC,MAJR;AAKE,IAAA,KAAK,EACHE,IAAI,CAAC8E,YAAL,GACI1F,WAAW,CAACY,IAAI,CAAC8E,YAAN,CADf,GAEI3F,cARR;AAUE,IAAA,KAAK,EAAEa,IAAI,CAACF,IAVd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAeE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGO,SAAS,GAAGG,YAAH,GAAkBD,YAD9B,SAKGL,YAAY,IACX,oBAAC,IAAD;AACE,IAAA,IAAI,MADN;AAEE,IAAA,SAAS,MAFX;AAGE,IAAA,SAAS,EAAC,KAHZ;AAIE,IAAA,OAAO,EAAC,UAJV;AAKE,IAAA,UAAU,EAAC,UALb;AAME,IAAA,SAAS,EAAEc,SAAS,CAAC+D,wBANvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE,oBAAC,QAAD;AACE,IAAA,OAAO,MADT;AAEE,IAAA,OAAO,EAAC,WAFV;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,OAAO,EAAE,MAAMC,OAAO,CAACC,GAAR,CAAY,iBAAZ,CAJjB;AAKE,IAAA,gBAAgB,EAAC,sBALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEjE,SAAS,CAACkE,UAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EASE,oBAAC,UAAD;AACE,IAAA,OAAO,EAAC,OADV;AAEE,IAAA,SAAS,EAAEnE,OAAO,CAACoE,sBAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGtF,IAAI,CAACuF,aAAL,CAAmB/F,cAAc,CAACgG,eAAlC,CAJH,CATF,CARF,CANJ,EAiCG,CAACjF,SAAD,IAAc,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAEY,SAAS,CAACsE,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjCjB,CAfF,CADF,CADF,CAlBF,CADF,EA2EG,CAAClF,SAAD,IAAc,CAACoC,QAAf,IAA2B,oBAAC,OAAD;AAAS,IAAA,KAAK,MAAd;AAAe,IAAA,SAAS,EAAEzB,OAAO,CAACuE,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3E9B,CADF;AA+ED;;AAED1F,cAAc,CAAC2F,SAAf,GAA2B;AACzB1F,EAAAA,IAAI,EAAE1B,SAAS,CAACqH,UADS;AAEzB1F,EAAAA,IAAI,EAAE7B,SAAS,CAACwH,MAAV,CAAiBD,UAFE;AAGzBvF,EAAAA,YAAY,EAAEhC,SAAS,CAACyH,KAHC;AAIzB1F,EAAAA,IAAI,EAAE/B,SAAS,CAAC0H,MAAV,CAAiBH,UAJE;AAKzBpF,EAAAA,SAAS,EAAEnC,SAAS,CAAC2H,IALI;AAMzBzF,EAAAA,MAAM,EAAElC,SAAS,CAAC2H,IANO;AAOzBvF,EAAAA,SAAS,EAAEpC,SAAS,CAAC2H,IAPI;AAQzB1F,EAAAA,YAAY,EAAEjC,SAAS,CAAC2H,IARC;AASzB7F,EAAAA,IAAI,EAAE9B,SAAS,CAACwH;AATS,CAA3B;AAYA,MAAMI,kBAAkB,GAAG3H,UAAU,CAAC0B,cAAD,CAArC;AAEA,eAAeiG,kBAAf","sourcesContent":["/**\n *\n * RecipientPanel\n *\n */\n\nimport React, { useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { injectIntl, intlShape } from 'react-intl';\nimport { useMutation } from '@apollo/react-hooks';\n\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Divider from '@material-ui/core/Divider';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport { generalErrorHandler } from 'utils/error-handler';\nimport { UPDATE_RECIPIENT } from 'graphql/mutations/families/families-mutation';\nimport {\n  GET_FAMILY_RECIEPIENT_CACHE,\n  GET_FAMILY_CHILD_RECIEPIENT_CACHE,\n} from 'graphql/queries/families/family-queries';\nimport SmallRightArrow from 'components/shared/Icons/smallRightArrow';\nimport NSButton from 'components/shared/NSButton';\nimport placeHolderImg from 'assets/images/familyPlaceholder.png';\nimport { generateImg } from 'utils/helpers';\nimport globalMessages from 'messages';\nimport TwoColumns from './twoColumns';\nimport { ftSwitch } from './helper';\nimport { RecipientViewContext } from '../context';\nimport {\n  recipientListStyles,\n  ExpansionPanelDetailsStyle,\n  RecipientPanelStyles,\n} from '../../styles';\n\nfunction RecipientPanel({\n  intl,\n  name,\n  type,\n  data,\n  customFields,\n  enableDelete,\n  parent = false,\n  lastChild = true,\n  twoColumn = false,\n}) {\n  let allOptions = [];\n  const singleFields = [];\n  let twoColfields = [];\n  const allFieldsCurrentValue = {};\n  const allPhotoFields = {};\n  const allDateFields = {};\n  const allTimeFields = {};\n  const { rest, match } = useContext(RecipientViewContext);\n  const classes = recipientListStyles();\n  const rsClasses = RecipientPanelStyles();\n\n  const [updateRecipientChild, { error: childError }] = useMutation(\n    UPDATE_RECIPIENT,\n    {\n      update(\n        cache,\n        {\n          data: {\n            updateRecipient: {\n              recipient: {\n                parent: { children: updatedChildren },\n              },\n            },\n          },\n        }\n      ) {\n        // Update apollo cache after successful db update\n        cache.writeQuery({\n          query: GET_FAMILY_CHILD_RECIEPIENT_CACHE,\n          data: {\n            recipient: { children: updatedChildren, __typename: 'Recipient' },\n          },\n          variables: {\n            uuid: match.params.id,\n          },\n        });\n      },\n    }\n  );\n\n  const [updateRecipient, { error }] = useMutation(UPDATE_RECIPIENT, {\n    update(\n      cache,\n      {\n        data: {\n          updateRecipient: { recipient },\n        },\n      }\n    ) {\n      cache.writeQuery({\n        query: GET_FAMILY_RECIEPIENT_CACHE,\n        data: {\n          recipient,\n          __typename: 'Recipient',\n        },\n        variables: {\n          uuid: match.params.id,\n        },\n      });\n    },\n  });\n\n  const [recipientData, setRecipientData] = useState({\n    currentValue: allFieldsCurrentValue,\n    items: [...allOptions],\n    photos: allPhotoFields,\n    dates: allDateFields,\n    times: allTimeFields,\n  });\n\n  const [expanded, setExpanded] = useState(false);\n\n  const reArrangeFields = function(arr) {\n    const from = arr.indexOf(arr.find(a => a.props.type === 'photo'));\n    const to = arr.length - 1;\n    arr.splice(to, 0, arr.splice(from, 1)[0]);\n  };\n\n  const handleOptionChange = (value, field) => {\n    setRecipientData(state => ({\n      ...state,\n      currentValue: { ...state.currentValue, [field]: { item: value } },\n    }));\n  };\n\n  const handleDateTimeChange = (value, field, types) => {\n    setRecipientData(state => ({\n      ...state,\n      [types]: { ...state[types], [field]: value },\n    }));\n  };\n\n  if (customFields) {\n    customFields\n      .filter((f, i) => {\n        if (f.option_values) {\n          if (f.field_type === 'multi_select') {\n            allFieldsCurrentValue[f.name] = {\n              item: !data.customFields[f.name] ? [] : data.customFields[f.name],\n            };\n          } else {\n            allFieldsCurrentValue[f.name] = {\n              item: !data.customFields[f.name]\n                ? f.option_values[0]\n                : data.customFields[f.name],\n            };\n          }\n        }\n        if (f.field_type === 'photo') {\n          allPhotoFields[f.name] = data.customFields[f.name];\n        }\n\n        if (f.field_type === 'date') {\n          allDateFields[f.name] = data.customFields[f.name];\n        }\n\n        if (f.field_type === 'time') {\n          allTimeFields[f.name] = data.customFields[f.name];\n        }\n\n        singleFields.push(\n          ftSwitch(\n            f,\n            data,\n            i,\n            recipientData,\n            handleOptionChange,\n            handleDateTimeChange,\n            parent ? updateRecipient : updateRecipientChild\n          )\n        );\n        return f.option_values;\n      })\n      .map(o => o.option_values)\n      .forEach(group => {\n        group.forEach(o => {\n          allOptions = [...allOptions, { value: o }];\n        });\n      });\n\n    reArrangeFields(singleFields);\n\n    if (twoColumn && customFields.length > 0) {\n      for (let i = 0; i < singleFields.length; i += 2) {\n        const current = singleFields[i];\n        const next = singleFields[i + 1];\n\n        twoColfields = [\n          ...twoColfields,\n          <TwoColumns\n            key={i + 5 * 10}\n            col1={current || <></>}\n            col2={next || <></>}\n          />,\n        ];\n      }\n    }\n  }\n\n  if (error || childError) {\n    return generalErrorHandler(error || childError, { ...rest });\n  }\n\n  return (\n    <>\n      <ExpansionPanel onChange={(event, open) => setExpanded(open)}>\n        <ExpansionPanelSummary\n          expandIcon={<SmallRightArrow />}\n          aria-controls=\"family-member\"\n          id={name.toLowerCase().replace(/ /g, '')}\n        >\n          <Grid container direction=\"column\" justify=\"flex-start\">\n            <Typography variant=\"body2\" className={classes.contentBody}>\n              {name}\n            </Typography>\n            {type && (\n              <Typography variant=\"caption\" className={classes.caption}>\n                {type}\n              </Typography>\n            )}\n          </Grid>\n        </ExpansionPanelSummary>\n\n        <ExpansionPanelDetailsStyle>\n          <ExpansionPanelDetails>\n            <Grid container direction=\"row\">\n              <Grid item xs={6}>\n                <CardMedia\n                  className={classes.recipientChildPhoto}\n                  component=\"img\"\n                  alt={data.name}\n                  width=\"100%\"\n                  image={\n                    data.base64Avatar\n                      ? generateImg(data.base64Avatar)\n                      : placeHolderImg\n                  }\n                  title={data.name}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                {twoColumn ? twoColfields : singleFields}\n\n                <Divider light />\n\n                {enableDelete && (\n                  <Grid\n                    item\n                    container\n                    direction=\"row\"\n                    justify=\"flex-end\"\n                    alignItems=\"flex-end\"\n                    className={rsClasses.deleteRecipientContainer}\n                  >\n                    <NSButton\n                      textBtn\n                      variant=\"contained\"\n                      size=\"small\"\n                      onClick={() => console.log('DELETING MEMBER')}\n                      componentClasses=\"recipient-delete-btn\"\n                    >\n                      <DeleteIcon className={rsClasses.deleteIcon} />\n\n                      <Typography\n                        variant=\"body1\"\n                        className={classes.recipientDeleteBtnText}\n                      >\n                        {intl.formatMessage(globalMessages.deleteRecipient)}\n                      </Typography>\n                    </NSButton>\n                  </Grid>\n                )}\n\n                {!lastChild && <Divider className={rsClasses.divider} />}\n              </Grid>\n            </Grid>\n          </ExpansionPanelDetails>\n        </ExpansionPanelDetailsStyle>\n      </ExpansionPanel>\n      {!lastChild && !expanded && <Divider light className={classes.divider} />}\n    </>\n  );\n}\n\nRecipientPanel.propTypes = {\n  intl: intlShape.isRequired,\n  name: PropTypes.string.isRequired,\n  customFields: PropTypes.array,\n  data: PropTypes.object.isRequired,\n  lastChild: PropTypes.bool,\n  parent: PropTypes.bool,\n  twoColumn: PropTypes.bool,\n  enableDelete: PropTypes.bool,\n  type: PropTypes.string,\n};\n\nconst intlRecipientPanel = injectIntl(RecipientPanel);\n\nexport default intlRecipientPanel;\n"]},"metadata":{},"sourceType":"module"}