{"ast":null,"code":"import _extends from \"/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/node_modules/@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/src/utils/error-handler.js\";\n\n/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport NotFound from 'components/NotFound'; // Handle Custom network errors\n\nexport const networkErrors = ({\n  graphQLErrors,\n  networkError,\n  operation,\n  response\n}) => {\n  if (graphQLErrors) {\n    graphQLErrors.map(({\n      message,\n      locations,\n      path\n    }) => ({\n      type: 'GraphQL error',\n      message,\n      locations,\n      path\n    }));\n  }\n\n  if (networkError) {// console.log(`[Network error]: ${networkError}`);\n  }\n}; // Handles All UI Network Errors\n\nexport const generalErrorHandler = (error, _ref) => {\n  let rest = _extends({}, _ref);\n\n  // Handle Unauthorized\n  if (error.message.includes('Unauthorized')) {\n    return React.createElement(NotFound, Object.assign({\n      unAuthorized: true\n    }, rest, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }));\n  } // Handle Failed Queries\n\n\n  return React.createElement(NotFound, Object.assign({\n    failedQuery: true\n  }, rest, {\n    message: error.message,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }));\n};\ngeneralErrorHandler.displayName = \"generalErrorHandler\";\ngeneralErrorHandler.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"generalErrorHandler\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/utils/error-handler.js\"] = {\n    name: \"generalErrorHandler\",\n    docgenInfo: generalErrorHandler.__docgenInfo,\n    path: \"src/utils/error-handler.js\"\n  };\n}","map":{"version":3,"sources":["/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/src/utils/error-handler.js"],"names":["React","NotFound","networkErrors","graphQLErrors","networkError","operation","response","map","message","locations","path","type","generalErrorHandler","error","rest","includes"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,qBAArB,C,CAEA;;AACA,OAAO,MAAMC,aAAa,GAAG,CAAC;AAC5BC,EAAAA,aAD4B;AAE5BC,EAAAA,YAF4B;AAG5BC,EAAAA,SAH4B;AAI5BC,EAAAA;AAJ4B,CAAD,KAKvB;AACJ,MAAIH,aAAJ,EAAmB;AACjBA,IAAAA,aAAa,CAACI,GAAd,CAAkB,CAAC;AAAEC,MAAAA,OAAF;AAAWC,MAAAA,SAAX;AAAsBC,MAAAA;AAAtB,KAAD,MAAmC;AACnDC,MAAAA,IAAI,EAAE,eAD6C;AAEnDH,MAAAA,OAFmD;AAGnDC,MAAAA,SAHmD;AAInDC,MAAAA;AAJmD,KAAnC,CAAlB;AAMD;;AAED,MAAIN,YAAJ,EAAkB,CAChB;AACD;AACF,CAlBM,C,CAoBP;;AACA,OAAO,MAAMQ,mBAAmB,GAAG,CAACC,KAAD,WAAwB;AAAA,MAAXC,IAAW;;AACzD;AACA,MAAID,KAAK,CAACL,OAAN,CAAcO,QAAd,CAAuB,cAAvB,CAAJ,EAA4C;AAC1C,WAAO,oBAAC,QAAD;AAAU,MAAA,YAAY;AAAtB,OAA2BD,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD,GAJwD,CAKzD;;;AACA,SAAO,oBAAC,QAAD;AAAU,IAAA,WAAW;AAArB,KAA0BA,IAA1B;AAAgC,IAAA,OAAO,EAAED,KAAK,CAACL,OAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAPM;AAAMI,mB","sourcesContent":["/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport NotFound from 'components/NotFound';\n\n// Handle Custom network errors\nexport const networkErrors = ({\n  graphQLErrors,\n  networkError,\n  operation,\n  response,\n}) => {\n  if (graphQLErrors) {\n    graphQLErrors.map(({ message, locations, path }) => ({\n      type: 'GraphQL error',\n      message,\n      locations,\n      path,\n    }));\n  }\n\n  if (networkError) {\n    // console.log(`[Network error]: ${networkError}`);\n  }\n};\n\n// Handles All UI Network Errors\nexport const generalErrorHandler = (error, { ...rest }) => {\n  // Handle Unauthorized\n  if (error.message.includes('Unauthorized')) {\n    return <NotFound unAuthorized {...rest} />;\n  }\n  // Handle Failed Queries\n  return <NotFound failedQuery {...rest} message={error.message} />;\n};\n"]},"metadata":{},"sourceType":"module"}