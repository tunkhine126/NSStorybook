{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator\";\nvar _jsxFileName = \"/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/src/components/NSFilters/context/filters.js\";\nimport React, { useState, createContext } from 'react';\nimport PropTypes from 'prop-types';\nexport const NSFiltersContext = createContext();\nexport const NSFiltersProvider = ({\n  children,\n  filterCategories,\n  lastUpdateProps,\n  dateRangeProps,\n  handleSelected\n}) => {\n  const types = {\n    multi: {},\n    levels: {},\n    single: {},\n    date: {}\n  };\n  const {\n    lastUpdate\n  } = lastUpdateProps;\n  ['multi', 'levels', 'single', 'date'].forEach(type => {\n    filterCategories.filter(c => c.type === type).forEach(({\n      id\n    }) => {\n      types[type][id] = [];\n    });\n  });\n  const [singleSelectOptions, setSingleSelectOptions] = useState(types.single);\n  const [multiSelectOptions, setMultiSelectOptions] = useState(types.multi);\n  const [levelSelectOptions, setLevelSelectOptions] = useState(types.levels);\n  const [showCalendar, setShowCalendar] = useState(lastUpdate.query === 'custom');\n  const [localDateRange, setlocalDateRange] = useState({\n    before: null,\n    after: null\n  });\n  return React.createElement(NSFiltersContext.Provider, {\n    value: {\n      multiSelect: {\n        multiSelectOptions,\n        setMultiSelectOptions\n      },\n      levelSelect: {\n        levelSelectOptions,\n        setLevelSelectOptions\n      },\n      singleSelect: {\n        singleSelectOptions,\n        setSingleSelectOptions\n      },\n      calendarProps: {\n        showCalendar,\n        setShowCalendar\n      },\n      localDateProps: {\n        localDateRange,\n        setlocalDateRange\n      },\n      lastUpdateProps,\n      dateRangeProps,\n      filterCategories,\n      handleSelected\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, children);\n};\nNSFiltersProvider.displayName = \"NSFiltersProvider\";\nNSFiltersProvider.propTypes = {\n  children: PropTypes.any.isRequired,\n  dateRangeProps: PropTypes.object.isRequired,\n  lastUpdateProps: PropTypes.object.isRequired,\n  filterCategories: PropTypes.array.isRequired,\n  handleSelected: PropTypes.func.isRequired\n};\nNSFiltersProvider.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"NSFiltersProvider\",\n  \"props\": {\n    \"children\": {\n      \"type\": {\n        \"name\": \"any\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"dateRangeProps\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"lastUpdateProps\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"filterCategories\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"handleSelected\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/components/NSFilters/context/filters.js\"] = {\n    name: \"NSFiltersProvider\",\n    docgenInfo: NSFiltersProvider.__docgenInfo,\n    path: \"src/components/NSFilters/context/filters.js\"\n  };\n}","map":{"version":3,"sources":["/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/src/components/NSFilters/context/filters.js"],"names":["React","useState","createContext","PropTypes","NSFiltersContext","NSFiltersProvider","children","filterCategories","lastUpdateProps","dateRangeProps","handleSelected","types","multi","levels","single","date","lastUpdate","forEach","type","filter","c","id","singleSelectOptions","setSingleSelectOptions","multiSelectOptions","setMultiSelectOptions","levelSelectOptions","setLevelSelectOptions","showCalendar","setShowCalendar","query","localDateRange","setlocalDateRange","before","after","multiSelect","levelSelect","singleSelect","calendarProps","localDateProps","propTypes","any","isRequired","object","array","func"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,aAA1B,QAA+C,OAA/C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,MAAMC,gBAAgB,GAAGF,aAAa,EAAtC;AAEP,OAAO,MAAMG,iBAAiB,GAAG,CAAC;AAChCC,EAAAA,QADgC;AAEhCC,EAAAA,gBAFgC;AAGhCC,EAAAA,eAHgC;AAIhCC,EAAAA,cAJgC;AAKhCC,EAAAA;AALgC,CAAD,KAM3B;AACJ,QAAMC,KAAK,GAAG;AACZC,IAAAA,KAAK,EAAE,EADK;AAEZC,IAAAA,MAAM,EAAE,EAFI;AAGZC,IAAAA,MAAM,EAAE,EAHI;AAIZC,IAAAA,IAAI,EAAE;AAJM,GAAd;AAOA,QAAM;AAAEC,IAAAA;AAAF,MAAiBR,eAAvB;AAEA,GAAC,OAAD,EAAU,QAAV,EAAoB,QAApB,EAA8B,MAA9B,EAAsCS,OAAtC,CAA8CC,IAAI,IAAI;AACpDX,IAAAA,gBAAgB,CACbY,MADH,CACUC,CAAC,IAAIA,CAAC,CAACF,IAAF,KAAWA,IAD1B,EAEGD,OAFH,CAEW,CAAC;AAAEI,MAAAA;AAAF,KAAD,KAAY;AACnBV,MAAAA,KAAK,CAACO,IAAD,CAAL,CAAYG,EAAZ,IAAkB,EAAlB;AACD,KAJH;AAKD,GAND;AAQA,QAAM,CAACC,mBAAD,EAAsBC,sBAAtB,IAAgDtB,QAAQ,CAACU,KAAK,CAACG,MAAP,CAA9D;AACA,QAAM,CAACU,kBAAD,EAAqBC,qBAArB,IAA8CxB,QAAQ,CAACU,KAAK,CAACC,KAAP,CAA5D;AACA,QAAM,CAACc,kBAAD,EAAqBC,qBAArB,IAA8C1B,QAAQ,CAACU,KAAK,CAACE,MAAP,CAA5D;AACA,QAAM,CAACe,YAAD,EAAeC,eAAf,IAAkC5B,QAAQ,CAC9Ce,UAAU,CAACc,KAAX,KAAqB,QADyB,CAAhD;AAGA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsC/B,QAAQ,CAAC;AACnDgC,IAAAA,MAAM,EAAE,IAD2C;AAEnDC,IAAAA,KAAK,EAAE;AAF4C,GAAD,CAApD;AAKA,SACE,oBAAC,gBAAD,CAAkB,QAAlB;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,WAAW,EAAE;AAAEX,QAAAA,kBAAF;AAAsBC,QAAAA;AAAtB,OADR;AAELW,MAAAA,WAAW,EAAE;AAAEV,QAAAA,kBAAF;AAAsBC,QAAAA;AAAtB,OAFR;AAGLU,MAAAA,YAAY,EAAE;AAAEf,QAAAA,mBAAF;AAAuBC,QAAAA;AAAvB,OAHT;AAILe,MAAAA,aAAa,EAAE;AAAEV,QAAAA,YAAF;AAAgBC,QAAAA;AAAhB,OAJV;AAKLU,MAAAA,cAAc,EAAE;AAAER,QAAAA,cAAF;AAAkBC,QAAAA;AAAlB,OALX;AAMLxB,MAAAA,eANK;AAOLC,MAAAA,cAPK;AAQLF,MAAAA,gBARK;AASLG,MAAAA;AATK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAaGJ,QAbH,CADF;AAiBD,CApDM;AAAMD,iB;AAsDbA,iBAAiB,CAACmC,SAAlB,GAA8B;AAC5BlC,EAAAA,QAAQ,EAAEH,SAAS,CAACsC,GAAV,CAAcC,UADI;AAE5BjC,EAAAA,cAAc,EAAEN,SAAS,CAACwC,MAAV,CAAiBD,UAFL;AAG5BlC,EAAAA,eAAe,EAAEL,SAAS,CAACwC,MAAV,CAAiBD,UAHN;AAI5BnC,EAAAA,gBAAgB,EAAEJ,SAAS,CAACyC,KAAV,CAAgBF,UAJN;AAK5BhC,EAAAA,cAAc,EAAEP,SAAS,CAAC0C,IAAV,CAAeH;AALH,CAA9B","sourcesContent":["import React, { useState, createContext } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const NSFiltersContext = createContext();\n\nexport const NSFiltersProvider = ({\n  children,\n  filterCategories,\n  lastUpdateProps,\n  dateRangeProps,\n  handleSelected,\n}) => {\n  const types = {\n    multi: {},\n    levels: {},\n    single: {},\n    date: {},\n  };\n\n  const { lastUpdate } = lastUpdateProps;\n\n  ['multi', 'levels', 'single', 'date'].forEach(type => {\n    filterCategories\n      .filter(c => c.type === type)\n      .forEach(({ id }) => {\n        types[type][id] = [];\n      });\n  });\n\n  const [singleSelectOptions, setSingleSelectOptions] = useState(types.single);\n  const [multiSelectOptions, setMultiSelectOptions] = useState(types.multi);\n  const [levelSelectOptions, setLevelSelectOptions] = useState(types.levels);\n  const [showCalendar, setShowCalendar] = useState(\n    lastUpdate.query === 'custom'\n  );\n  const [localDateRange, setlocalDateRange] = useState({\n    before: null,\n    after: null,\n  });\n\n  return (\n    <NSFiltersContext.Provider\n      value={{\n        multiSelect: { multiSelectOptions, setMultiSelectOptions },\n        levelSelect: { levelSelectOptions, setLevelSelectOptions },\n        singleSelect: { singleSelectOptions, setSingleSelectOptions },\n        calendarProps: { showCalendar, setShowCalendar },\n        localDateProps: { localDateRange, setlocalDateRange },\n        lastUpdateProps,\n        dateRangeProps,\n        filterCategories,\n        handleSelected,\n      }}\n    >\n      {children}\n    </NSFiltersContext.Provider>\n  );\n};\n\nNSFiltersProvider.propTypes = {\n  children: PropTypes.any.isRequired,\n  dateRangeProps: PropTypes.object.isRequired,\n  lastUpdateProps: PropTypes.object.isRequired,\n  filterCategories: PropTypes.array.isRequired,\n  handleSelected: PropTypes.func.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}