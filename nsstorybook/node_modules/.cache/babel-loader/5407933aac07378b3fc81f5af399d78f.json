{"ast":null,"code":"var _jsxFileName = \"/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/src/components/RecipientList/RecipientView/Widget/helper.js\";\n\n/* eslint-disable no-restricted-syntax */\n\n/* eslint-disable react/display-name */\nimport React from 'react';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport InputValidation from 'components/shared/InputValidation';\nimport DatePickerValidation from 'components/shared/DatePickerValidation';\nimport TimePickerValidation from 'components/shared/TimePickerValidation';\nimport SelectValidation from 'components/shared/SelectValidation';\nimport MultiSelectValidation from 'components/shared/MultiSelectValidation';\nimport Photo from './fieldTypes/photo';\nimport { SelectWrapper } from '../../styles';\nimport { FieldsProvider } from '../context/fields';\nimport SwitchMode from './switchMode';\nexport const ftSwitch = (field, {\n  customFields,\n  uuid\n}, key, rData, handleOptionChange, handleDateTimeChange, updateRecipient) => {\n  let optionValues = [];\n  let optionIntialValue = {};\n  let optionIsNull = false;\n  const enLabel = field.contexts.us_en.label;\n\n  if (field.option_values) {\n    optionValues = field.option_values.map(i => ({\n      value: i\n    }));\n\n    if (!rData.currentValue[field.name].item) {\n      optionIsNull = true;\n    }\n\n    optionIntialValue = !optionIsNull ? rData.currentValue[field.name].item : optionValues[0].value;\n  }\n\n  const Field = ({\n    classes,\n    label,\n    name,\n    content,\n    element,\n    fieldType,\n    type\n  }) => React.createElement(FieldsProvider, {\n    type: type,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(SwitchMode, {\n    classes: classes,\n    rData: rData,\n    field: field,\n    uuid: uuid,\n    fieldType: fieldType,\n    handleDateTimeChange: handleDateTimeChange,\n    handleOptionChange: handleOptionChange,\n    updateRecipient: updateRecipient,\n    label: label,\n    currentField: name,\n    content: content,\n    element: element,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }));\n\n  Field.propTypes = {\n    classes: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    element: PropTypes.any.isRequired,\n    content: PropTypes.any,\n    fieldType: PropTypes.string,\n    type: PropTypes.string\n  };\n\n  switch (field.field_type) {\n    case 'short_text':\n      return React.createElement(Field, {\n        key: key,\n        classes: \"field-container\",\n        label: enLabel,\n        name: field.name,\n        content: customFields[field.name],\n        element: React.createElement(InputValidation, {\n          maxWidth: \"none\",\n          field: field.name,\n          type: \"text\",\n          initialValue: customFields[field.name],\n          label: enLabel,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      });\n\n    case 'paragraph_text':\n      return React.createElement(Field, {\n        key: key,\n        classes: \"paragraph-text field-container\",\n        label: enLabel,\n        name: field.name,\n        content: customFields[field.name],\n        element: React.createElement(InputValidation, {\n          field: field.name,\n          maxWidth: \"none\",\n          type: \"text\",\n          multiline: true,\n          rows: \"3\",\n          initialValue: customFields[field.name],\n          label: enLabel,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      });\n\n    case 'number':\n      return React.createElement(Field, {\n        key: key,\n        classes: \"field-container\",\n        label: enLabel,\n        name: field.name,\n        content: customFields[field.name] ? customFields[field.name].toString() : '',\n        element: React.createElement(InputValidation, {\n          type: \"number\",\n          maxWidth: \"none\",\n          field: field.name,\n          initialValue: customFields[field.name] ? customFields[field.name].toString() : '',\n          label: enLabel,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      });\n\n    case 'date':\n      return React.createElement(Field, {\n        key: key,\n        classes: \"field-container\",\n        label: enLabel,\n        name: field.name,\n        content: rData.dates[field.name],\n        element: React.createElement(DatePickerValidation, {\n          field: field.name,\n          label: enLabel,\n          initialValue: rData.dates[field.name],\n          customFormat: \"MM-dd-yyyy\",\n          placeholder: `${moment().format('MM-DD-YYYY')}`,\n          variant: \"dialog\",\n          inputVariant: \"filled\",\n          margin: \"normal\",\n          fullWidth: true,\n          clearable: true,\n          disableFuture: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      });\n\n    case 'time':\n      return React.createElement(Field, {\n        key: key,\n        classes: \"field-container\",\n        label: enLabel,\n        name: field.name,\n        content: rData.times[field.name] ? moment(new Date(rData.times[field.name])).format('hh:mm a') : null,\n        fieldType: \"time\",\n        element: React.createElement(TimePickerValidation, {\n          field: field.name,\n          label: enLabel,\n          initialValue: rData.times[field.name],\n          placeholder: \"08:00 AM\",\n          inputVariant: \"filled\",\n          margin: \"normal\",\n          fullWidth: true,\n          clearable: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      });\n\n    case 'single_select':\n      return React.createElement(Field, {\n        key: key,\n        classes: \"field-container\",\n        label: enLabel,\n        name: field.name,\n        content: customFields[field.name],\n        element: (localChildData, localOptionChange) => React.createElement(SelectWrapper, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208\n          },\n          __self: this\n        }, React.createElement(SelectValidation, {\n          field: field.name,\n          type: \"select\",\n          maxWidth: \"none\",\n          label: enLabel,\n          values: !optionIsNull ? localChildData.currentValue[field.name] : optionIntialValue,\n          initialValue: optionIntialValue,\n          items: optionValues,\n          onChange: v => localOptionChange(v, field.name),\n          padding: \"25px 18px 10px 13px\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209\n          },\n          __self: this\n        })),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      });\n\n    case 'multi_select':\n      return React.createElement(Field, {\n        key: key,\n        classes: \"field-container\",\n        label: enLabel,\n        name: field.name,\n        content: Array.isArray(customFields[field.name]) ? customFields[field.name].join(', ') : customFields[field.name],\n        element: (localChildData, localOptionChange) => React.createElement(SelectWrapper, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 241\n          },\n          __self: this\n        }, React.createElement(MultiSelectValidation, {\n          field: field.name,\n          type: \"select\",\n          maxWidth: \"none\",\n          label: enLabel,\n          values: !optionIsNull ? localChildData.currentValue[field.name] : optionIntialValue,\n          initialValue: optionIntialValue,\n          onChange: v => localOptionChange(v, field.name),\n          items: optionValues,\n          padding: \"25px 18px 10px 13px\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 242\n          },\n          __self: this\n        })),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      });\n\n    case 'likert':\n      return React.createElement(Field, {\n        key: key,\n        classes: \"field-container\",\n        label: enLabel,\n        name: field.name,\n        content: customFields[field.name],\n        element: (localChildData, localOptionChange) => React.createElement(SelectWrapper, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 270\n          },\n          __self: this\n        }, React.createElement(SelectValidation, {\n          field: field.name,\n          type: \"select\",\n          maxWidth: \"none\",\n          label: enLabel,\n          values: !optionIsNull ? localChildData.currentValue[field.name] : optionIntialValue,\n          initialValue: optionIntialValue,\n          items: optionValues,\n          onChange: v => localOptionChange(v, field.name),\n          padding: \"25px 18px 10px 13px\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 271\n          },\n          __self: this\n        })),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      });\n\n    case 'photo':\n      return React.createElement(Field, {\n        type: \"photo\",\n        key: key,\n        classes: \"field-container\",\n        label: enLabel,\n        name: field.name,\n        content: React.createElement(Photo, {\n          field: field,\n          label: enLabel,\n          values: customFields,\n          recipientData: rData,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 299\n          },\n          __self: this\n        }),\n        element: React.createElement(Photo, {\n          className: \"photo-edit-mode\",\n          rData: rData,\n          editMode: true,\n          field: field,\n          label: enLabel,\n          values: customFields,\n          recipientData: rData,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 307\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      });\n\n    case 'audio':\n      return 'audio';\n\n    case 'video':\n      return 'video';\n\n    case 'coordinates':\n      return React.createElement(Field, {\n        key: key,\n        classes: \"field-container\",\n        label: enLabel,\n        name: field.name,\n        content: customFields[field.name],\n        element: React.createElement(InputValidation, {\n          maxWidth: \"none\",\n          field: field.name,\n          type: \"text\",\n          initialValue: customFields[field.name],\n          label: enLabel,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 332\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      });\n\n    default:\n      return null;\n  }\n};\nftSwitch.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"ftSwitch\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/components/RecipientList/RecipientView/Widget/helper.js\"] = {\n    name: \"ftSwitch\",\n    docgenInfo: ftSwitch.__docgenInfo,\n    path: \"src/components/RecipientList/RecipientView/Widget/helper.js\"\n  };\n}","map":{"version":3,"sources":["/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/src/components/RecipientList/RecipientView/Widget/helper.js"],"names":["React","moment","PropTypes","InputValidation","DatePickerValidation","TimePickerValidation","SelectValidation","MultiSelectValidation","Photo","SelectWrapper","FieldsProvider","SwitchMode","ftSwitch","field","customFields","uuid","key","rData","handleOptionChange","handleDateTimeChange","updateRecipient","optionValues","optionIntialValue","optionIsNull","enLabel","contexts","us_en","label","option_values","map","i","value","currentValue","name","item","Field","classes","content","element","fieldType","type","propTypes","string","isRequired","any","field_type","toString","dates","format","times","Date","localChildData","localOptionChange","v","Array","isArray","join"],"mappings":"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","sourcesContent":["/* eslint-disable no-restricted-syntax */\n/* eslint-disable react/display-name */\nimport React from 'react';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\n\nimport InputValidation from 'components/shared/InputValidation';\nimport DatePickerValidation from 'components/shared/DatePickerValidation';\nimport TimePickerValidation from 'components/shared/TimePickerValidation';\nimport SelectValidation from 'components/shared/SelectValidation';\nimport MultiSelectValidation from 'components/shared/MultiSelectValidation';\nimport Photo from './fieldTypes/photo';\n\nimport { SelectWrapper } from '../../styles';\nimport { FieldsProvider } from '../context/fields';\nimport SwitchMode from './switchMode';\n\nexport const ftSwitch = (\n  field,\n  { customFields, uuid },\n  key,\n  rData,\n  handleOptionChange,\n  handleDateTimeChange,\n  updateRecipient\n) => {\n  let optionValues = [];\n  let optionIntialValue = {};\n  let optionIsNull = false;\n  const enLabel = field.contexts.us_en.label;\n\n  if (field.option_values) {\n    optionValues = field.option_values.map(i => ({ value: i }));\n\n    if (!rData.currentValue[field.name].item) {\n      optionIsNull = true;\n    }\n\n    optionIntialValue = !optionIsNull\n      ? rData.currentValue[field.name].item\n      : optionValues[0].value;\n  }\n\n  const Field = ({\n    classes,\n    label,\n    name,\n    content,\n    element,\n    fieldType,\n    type,\n  }) => (\n    <FieldsProvider type={type}>\n      <SwitchMode\n        classes={classes}\n        rData={rData}\n        field={field}\n        uuid={uuid}\n        fieldType={fieldType}\n        handleDateTimeChange={handleDateTimeChange}\n        handleOptionChange={handleOptionChange}\n        updateRecipient={updateRecipient}\n        label={label}\n        currentField={name}\n        content={content}\n        element={element}\n      />\n    </FieldsProvider>\n  );\n\n  Field.propTypes = {\n    classes: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    element: PropTypes.any.isRequired,\n    content: PropTypes.any,\n    fieldType: PropTypes.string,\n    type: PropTypes.string,\n  };\n\n  switch (field.field_type) {\n    case 'short_text':\n      return (\n        <Field\n          key={key}\n          classes=\"field-container\"\n          label={enLabel}\n          name={field.name}\n          content={customFields[field.name]}\n          element={\n            <InputValidation\n              maxWidth=\"none\"\n              field={field.name}\n              type=\"text\"\n              initialValue={customFields[field.name]}\n              label={enLabel}\n            />\n          }\n        />\n      );\n    case 'paragraph_text':\n      return (\n        <Field\n          key={key}\n          classes=\"paragraph-text field-container\"\n          label={enLabel}\n          name={field.name}\n          content={customFields[field.name]}\n          element={\n            <InputValidation\n              field={field.name}\n              maxWidth=\"none\"\n              type=\"text\"\n              multiline\n              rows=\"3\"\n              initialValue={customFields[field.name]}\n              label={enLabel}\n            />\n          }\n        />\n      );\n    case 'number':\n      return (\n        <Field\n          key={key}\n          classes=\"field-container\"\n          label={enLabel}\n          name={field.name}\n          content={\n            customFields[field.name] ? customFields[field.name].toString() : ''\n          }\n          element={\n            <InputValidation\n              type=\"number\"\n              maxWidth=\"none\"\n              field={field.name}\n              initialValue={\n                customFields[field.name]\n                  ? customFields[field.name].toString()\n                  : ''\n              }\n              label={enLabel}\n            />\n          }\n        />\n      );\n    case 'date':\n      return (\n        <Field\n          key={key}\n          classes=\"field-container\"\n          label={enLabel}\n          name={field.name}\n          content={rData.dates[field.name]}\n          element={\n            <DatePickerValidation\n              field={field.name}\n              label={enLabel}\n              initialValue={rData.dates[field.name]}\n              customFormat=\"MM-dd-yyyy\"\n              placeholder={`${moment().format('MM-DD-YYYY')}`}\n              variant=\"dialog\"\n              inputVariant=\"filled\"\n              margin=\"normal\"\n              fullWidth\n              clearable\n              disableFuture\n            />\n          }\n        />\n      );\n    case 'time':\n      return (\n        <Field\n          key={key}\n          classes=\"field-container\"\n          label={enLabel}\n          name={field.name}\n          content={\n            rData.times[field.name]\n              ? moment(new Date(rData.times[field.name])).format('hh:mm a')\n              : null\n          }\n          fieldType=\"time\"\n          element={\n            <TimePickerValidation\n              field={field.name}\n              label={enLabel}\n              initialValue={rData.times[field.name]}\n              placeholder=\"08:00 AM\"\n              inputVariant=\"filled\"\n              margin=\"normal\"\n              fullWidth\n              clearable\n            />\n          }\n        />\n      );\n    case 'single_select':\n      return (\n        <Field\n          key={key}\n          classes=\"field-container\"\n          label={enLabel}\n          name={field.name}\n          content={customFields[field.name]}\n          element={(localChildData, localOptionChange) => (\n            <SelectWrapper>\n              <SelectValidation\n                field={field.name}\n                type=\"select\"\n                maxWidth=\"none\"\n                label={enLabel}\n                values={\n                  !optionIsNull\n                    ? localChildData.currentValue[field.name]\n                    : optionIntialValue\n                }\n                initialValue={optionIntialValue}\n                items={optionValues}\n                onChange={v => localOptionChange(v, field.name)}\n                padding=\"25px 18px 10px 13px\"\n              />\n            </SelectWrapper>\n          )}\n        />\n      );\n    case 'multi_select':\n      return (\n        <Field\n          key={key}\n          classes=\"field-container\"\n          label={enLabel}\n          name={field.name}\n          content={\n            Array.isArray(customFields[field.name])\n              ? customFields[field.name].join(', ')\n              : customFields[field.name]\n          }\n          element={(localChildData, localOptionChange) => (\n            <SelectWrapper>\n              <MultiSelectValidation\n                field={field.name}\n                type=\"select\"\n                maxWidth=\"none\"\n                label={enLabel}\n                values={\n                  !optionIsNull\n                    ? localChildData.currentValue[field.name]\n                    : optionIntialValue\n                }\n                initialValue={optionIntialValue}\n                onChange={v => localOptionChange(v, field.name)}\n                items={optionValues}\n                padding=\"25px 18px 10px 13px\"\n              />\n            </SelectWrapper>\n          )}\n        />\n      );\n    case 'likert':\n      return (\n        <Field\n          key={key}\n          classes=\"field-container\"\n          label={enLabel}\n          name={field.name}\n          content={customFields[field.name]}\n          element={(localChildData, localOptionChange) => (\n            <SelectWrapper>\n              <SelectValidation\n                field={field.name}\n                type=\"select\"\n                maxWidth=\"none\"\n                label={enLabel}\n                values={\n                  !optionIsNull\n                    ? localChildData.currentValue[field.name]\n                    : optionIntialValue\n                }\n                initialValue={optionIntialValue}\n                items={optionValues}\n                onChange={v => localOptionChange(v, field.name)}\n                padding=\"25px 18px 10px 13px\"\n              />\n            </SelectWrapper>\n          )}\n        />\n      );\n    case 'photo':\n      return (\n        <Field\n          type=\"photo\"\n          key={key}\n          classes=\"field-container\"\n          label={enLabel}\n          name={field.name}\n          content={\n            <Photo\n              field={field}\n              label={enLabel}\n              values={customFields}\n              recipientData={rData}\n            />\n          }\n          element={\n            <Photo\n              className=\"photo-edit-mode\"\n              rData={rData}\n              editMode\n              field={field}\n              label={enLabel}\n              values={customFields}\n              recipientData={rData}\n            />\n          }\n        />\n      );\n    case 'audio':\n      return 'audio';\n    case 'video':\n      return 'video';\n    case 'coordinates':\n      return (\n        <Field\n          key={key}\n          classes=\"field-container\"\n          label={enLabel}\n          name={field.name}\n          content={customFields[field.name]}\n          element={\n            <InputValidation\n              maxWidth=\"none\"\n              field={field.name}\n              type=\"text\"\n              initialValue={customFields[field.name]}\n              label={enLabel}\n            />\n          }\n        />\n      );\n    default:\n      return null;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}