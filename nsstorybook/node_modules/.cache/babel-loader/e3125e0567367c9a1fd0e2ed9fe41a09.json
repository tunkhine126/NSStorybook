{"ast":null,"code":"/*\n *\n * App reducer\n *\n */\nimport produce from 'immer';\nimport { LOCAL_STORAGE } from 'utils/globalConstants';\nimport { setLocalStorage } from 'utils/helpers';\nimport { SHOW_TOASTER, HIDE_TOASTER, SET_ORG } from './constants';\nexport const initialState = window.Cypress && window.initialState || {\n  showToaster: false,\n  org: {}\n};\n/* eslint-disable default-case, no-param-reassign */\n\nconst appReducer = (state = initialState, action) => produce(state, draft => {\n  switch (action.type) {\n    case SHOW_TOASTER:\n      draft.showToaster = true;\n      break;\n\n    case HIDE_TOASTER:\n      draft.showToaster = false;\n      break;\n\n    case SET_ORG:\n      draft.org = action.payload;\n      setLocalStorage(LOCAL_STORAGE.org, JSON.stringify(action.payload));\n      break;\n  }\n});\n\nexport default appReducer;","map":{"version":3,"sources":["/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/src/containers/App/reducer.js"],"names":["produce","LOCAL_STORAGE","setLocalStorage","SHOW_TOASTER","HIDE_TOASTER","SET_ORG","initialState","window","Cypress","showToaster","org","appReducer","state","action","draft","type","payload","JSON","stringify"],"mappings":"AAAA;;;;;AAKA,OAAOA,OAAP,MAAoB,OAApB;AAEA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,SAASC,YAAT,EAAuBC,YAAvB,EAAqCC,OAArC,QAAoD,aAApD;AAEA,OAAO,MAAMC,YAAY,GAAIC,MAAM,CAACC,OAAP,IAAkBD,MAAM,CAACD,YAA1B,IAA2C;AACrEG,EAAAA,WAAW,EAAE,KADwD;AAErEC,EAAAA,GAAG,EAAE;AAFgE,CAAhE;AAKP;;AACA,MAAMC,UAAU,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KACjBb,OAAO,CAACY,KAAD,EAAQE,KAAK,IAAI;AACtB,UAAQD,MAAM,CAACE,IAAf;AACE,SAAKZ,YAAL;AACEW,MAAAA,KAAK,CAACL,WAAN,GAAoB,IAApB;AACA;;AACF,SAAKL,YAAL;AACEU,MAAAA,KAAK,CAACL,WAAN,GAAoB,KAApB;AACA;;AACF,SAAKJ,OAAL;AACES,MAAAA,KAAK,CAACJ,GAAN,GAAYG,MAAM,CAACG,OAAnB;AACAd,MAAAA,eAAe,CAACD,aAAa,CAACS,GAAf,EAAoBO,IAAI,CAACC,SAAL,CAAeL,MAAM,CAACG,OAAtB,CAApB,CAAf;AACA;AAVJ;AAYD,CAbM,CADT;;AAgBA,eAAeL,UAAf","sourcesContent":["/*\n *\n * App reducer\n *\n */\nimport produce from 'immer';\n\nimport { LOCAL_STORAGE } from 'utils/globalConstants';\nimport { setLocalStorage } from 'utils/helpers';\nimport { SHOW_TOASTER, HIDE_TOASTER, SET_ORG } from './constants';\n\nexport const initialState = (window.Cypress && window.initialState) || {\n  showToaster: false,\n  org: {},\n};\n\n/* eslint-disable default-case, no-param-reassign */\nconst appReducer = (state = initialState, action) =>\n  produce(state, draft => {\n    switch (action.type) {\n      case SHOW_TOASTER:\n        draft.showToaster = true;\n        break;\n      case HIDE_TOASTER:\n        draft.showToaster = false;\n        break;\n      case SET_ORG:\n        draft.org = action.payload;\n        setLocalStorage(LOCAL_STORAGE.org, JSON.stringify(action.payload));\n        break;\n    }\n  });\n\nexport default appReducer;\n"]},"metadata":{},"sourceType":"module"}