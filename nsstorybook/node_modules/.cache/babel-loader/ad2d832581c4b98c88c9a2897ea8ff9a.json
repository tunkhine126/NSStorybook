{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator\";\nvar _jsxFileName = \"/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/src/stories/2-ActionPanel.stories.js\";\nimport React, { useState } from 'react';\nimport { action } from '@storybook/addon-actions';\nimport { BrowserRouter } from 'react-router-dom';\nimport ActionPanel from '../components/ActionPanel/index';\nimport { actionPanelStyles } from '../components/ActionPanel/styles';\nexport default {\n  title: 'ActionPanel',\n  component: ActionPanel\n};\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"h3\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}, \"Action Panel Loading\");\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42\n  },\n  __self: this\n}, \"An Action Panel usually consists of a button(s) and when clicked will have some loading state before delivering a message\");\n\nexport function ActionPanelContainer({\n  formId,\n  type,\n  resetForm,\n  disabled,\n  loading\n}) {\n  const classes = actionPanelStyles();\n  const [loadingState, setloadingState] = useState(true);\n  const [messageState, setmessageState] = useState({\n    message: '',\n    open: false,\n    type: 'success'\n  });\n  return React.createElement(BrowserRouter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, _ref, React.createElement(ActionPanel, {\n    action: \"\",\n    type: \"\",\n    formId: \"\",\n    resetForm: action(\"I've been clicked\"),\n    loading: loadingState,\n    disabled: loadingState,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Button\"), _ref2);\n}\nActionPanelContainer.displayName = \"ActionPanelContainer\";\nActionPanelContainer.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"ActionPanelContainer\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/stories/2-ActionPanel.stories.js\"] = {\n    name: \"ActionPanelContainer\",\n    docgenInfo: ActionPanelContainer.__docgenInfo,\n    path: \"src/stories/2-ActionPanel.stories.js\"\n  };\n}","map":{"version":3,"sources":["/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/src/stories/2-ActionPanel.stories.js"],"names":["React","useState","action","BrowserRouter","ActionPanel","actionPanelStyles","title","component","ActionPanelContainer","formId","type","resetForm","disabled","loading","classes","loadingState","setloadingState","messageState","setmessageState","message","open"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,0BAAvB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAOC,WAAP,MAAwB,iCAAxB;AACA,SAASC,iBAAT,QAAkC,kCAAlC;AAIA,eAAe;AACbC,EAAAA,KAAK,EAAE,aADM;AAEbC,EAAAA,SAAS,EAAEH;AAFE,CAAf;;;;AAuBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0B;;;;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+H;;AA5BJ,OAAO,SAASI,oBAAT,CAA8B;AACnCC,EAAAA,MADmC;AAEnCC,EAAAA,IAFmC;AAGnCC,EAAAA,SAHmC;AAInCC,EAAAA,QAJmC;AAKnCC,EAAAA;AALmC,CAA9B,EAMJ;AAED,QAAMC,OAAO,GAAGT,iBAAiB,EAAjC;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCf,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACgB,YAAD,EAAeC,eAAf,IAAkCjB,QAAQ,CAAC;AAC/CkB,IAAAA,OAAO,EAAE,EADsC;AAE/CC,IAAAA,IAAI,EAAE,KAFyC;AAG/CV,IAAAA,IAAI,EAAE;AAHyC,GAAD,CAAhD;AAMA,SACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEE,oBAAC,WAAD;AACM,IAAA,MAAM,EAAC,EADb;AAEM,IAAA,IAAI,EAAC,EAFX;AAGM,IAAA,MAAM,EAAC,EAHb;AAIM,IAAA,SAAS,EAAER,MAAM,CAAC,mBAAD,CAJvB;AAKM,IAAA,OAAO,EAAEa,YALf;AAMM,IAAA,QAAQ,EAAEA,YANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,QADF;AAeD;AA/BeP,oB","sourcesContent":["import React, { useState } from 'react';\nimport { action } from '@storybook/addon-actions';\nimport { BrowserRouter } from 'react-router-dom'\nimport ActionPanel from '../components/ActionPanel/index'\nimport { actionPanelStyles } from '../components/ActionPanel/styles';\n\n\n\nexport default {\n  title: 'ActionPanel',\n  component: ActionPanel,\n};\n\nexport function ActionPanelContainer({\n  formId,\n  type,\n  resetForm,\n  disabled,\n  loading,\n}) {\n\n  const classes = actionPanelStyles();\n  const [loadingState, setloadingState] = useState(true);\n  const [messageState, setmessageState] = useState({\n    message: '',\n    open: false,\n    type: 'success',\n  });\n\n  return (\n    <BrowserRouter>\n    <h3>Action Panel Loading</h3>\n      <ActionPanel\n            action=\"\"\n            type=\"\"\n            formId=\"\"\n            resetForm={action(\"I've been clicked\")}\n            loading={loadingState}\n            disabled={loadingState}>\n            Button\n      </ActionPanel>\n    <p>An Action Panel usually consists of a button(s) and when clicked will have some loading state before delivering a message</p>\n    </BrowserRouter>\n  );\n}"]},"metadata":{},"sourceType":"module"}