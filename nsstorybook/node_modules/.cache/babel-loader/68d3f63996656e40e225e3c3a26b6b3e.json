{"ast":null,"code":"import \"core-js/modules/es.string.replace\";\nimport \"core-js/modules/web.dom-collections.iterator\";\nvar _jsxFileName = \"/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/src/components/RecipientList/header.js\";\n\n/**\n *\n * RecipientList Header\n *\n */\nimport React, { useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { injectIntl, intlShape } from 'react-intl';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Card from '@material-ui/core/Card';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Add from '@material-ui/icons/Add';\nimport Menu from '@material-ui/core/Menu';\nimport Edit from '@material-ui/icons/Edit';\nimport ImportExport from '@material-ui/icons/ImportExport';\nimport colors from 'global-styles';\nimport NSMenuItem from 'components/shared/NSMenuItem';\nimport TextLink from 'components/shared/TextLink';\nimport HeaderButton from 'components/shared/HeaderButton';\nimport placeHolderImg from 'assets/images/familyPlaceholder.png';\nimport { generateImg } from 'utils/helpers';\nimport globalMessages from 'messages';\nimport { RecipientViewContext } from './RecipientView/context/index';\nimport { recipientListStyles, helperClasses } from './styles';\n\nfunction a11yProps(name) {\n  return {\n    id: `${name}-tab`,\n    'aria-controls': `${name}-control-tab`\n  };\n}\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(Add, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 136\n  },\n  __self: this\n});\n\nexport function Header({\n  intl,\n  value\n}) {\n  const {\n    data,\n    tabChange,\n    profileDetails,\n    primaryRecipient\n  } = useContext(RecipientViewContext);\n  const classes = recipientListStyles();\n  const {\n    survyReqBtn\n  } = helperClasses;\n  const TabNavs = [intl.formatMessage(globalMessages.overview), intl.formatMessage(globalMessages.profile), primaryRecipient ? intl.formatMessage(globalMessages.rtSurveys) : '', profileDetails.childRecipients, intl.formatMessage(globalMessages.files), intl.formatMessage(globalMessages.impact)].filter(m => m).map((tab, idx, array) => React.createElement(Tab, Object.assign({\n    key: tab,\n    label: tab,\n    disabled: array.length - 1 === idx || array.length - 2 === idx\n  }, a11yProps(tab), {\n    className: classes.tab,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })));\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleMenuClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const PaperProps = {\n    style: {\n      boxShadow: '0px 2px 6px rgba(0, 0, 0, 0.5)',\n      width: 200\n    }\n  }; // TODO: Complete actions\n\n  const actions = [{\n    action: () => console.log('go to survey request'),\n    icon: Add,\n    text: profileDetails.recipientName\n  }, {\n    action: e => {\n      tabChange(e, 1);\n      handleClose();\n    },\n    icon: Edit,\n    text: `Edit ${profileDetails.recipientName}`\n  }, {\n    action: () => console.log('go to update status'),\n    icon: ImportExport,\n    text: intl.formatMessage(globalMessages.updateStatus)\n  }];\n  return React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    className: classes.cardContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: classes.headerImg,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    height: \"100%\",\n    alt: data.name,\n    src: data.base64Avatar ? generateImg(data.base64Avatar) : placeHolderImg,\n    title: data.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    container: true,\n    item: true,\n    className: classes.navContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    item: true,\n    direction: \"row-reverse\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    container: true,\n    xs: 8,\n    justify: \"flex-end\",\n    alignItems: \"flex-start\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    container: true,\n    justify: \"flex-end\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(HeaderButton, {\n    version: 1,\n    bgColor: colors.TEXT.medium,\n    padding: survyReqBtn.padding,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(React.Fragment, null, _ref, profileDetails.recipientName)), React.createElement(TextLink, {\n    content: intl.formatMessage(globalMessages.moreBtn),\n    onClick: handleMenuClick,\n    className: classes.moreBtn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }), React.createElement(Menu, {\n    id: profileDetails.recipientName.replace(/ /g, '-'),\n    anchorEl: anchorEl,\n    keepMounted: true,\n    open: Boolean(anchorEl),\n    onClose: handleClose,\n    elevation: 0,\n    getContentAnchorEl: null,\n    PaperProps: PaperProps,\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'right'\n    },\n    transformOrigin: {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, actions.map(({\n    icon,\n    text,\n    action\n  }, idx) => React.createElement(NSMenuItem, {\n    key: idx,\n    icon: icon,\n    text: text,\n    handleItemClick: action,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }))))), React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    className: classes.recipientInfo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h1\",\n    className: classes.recipientName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, data.name), React.createElement(Typography, {\n    variant: \"caption\",\n    className: classes.recipientId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, data.internalId))), React.createElement(Grid, {\n    item: true,\n    container: true,\n    alignItems: \"flex-end\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, React.createElement(AppBar, {\n    position: \"static\",\n    color: \"default\",\n    className: classes.appBar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, React.createElement(Tabs, {\n    value: value,\n    onChange: tabChange,\n    indicatorColor: \"primary\",\n    textColor: \"primary\",\n    \"aria-label\": \"Recipient List Tabs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, TabNavs)))));\n}\nHeader.displayName = \"Header\";\nHeader.propTypes = {\n  intl: intlShape.isRequired,\n  value: PropTypes.number.isRequired\n};\nconst intlHeader = injectIntl(Header);\nexport default intlHeader;\nHeader.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Header\",\n  \"props\": {\n    \"intl\": {\n      \"type\": {\n        \"name\": \"custom\",\n        \"raw\": \"intlShape.isRequired\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"value\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/components/RecipientList/header.js\"] = {\n    name: \"Header\",\n    docgenInfo: Header.__docgenInfo,\n    path: \"src/components/RecipientList/header.js\"\n  };\n}","map":{"version":3,"sources":["/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/src/components/RecipientList/header.js"],"names":["React","useContext","useState","PropTypes","injectIntl","intlShape","AppBar","Tabs","Tab","Card","Grid","Typography","Add","Menu","Edit","ImportExport","colors","NSMenuItem","TextLink","HeaderButton","placeHolderImg","generateImg","globalMessages","RecipientViewContext","recipientListStyles","helperClasses","a11yProps","name","id","Header","intl","value","data","tabChange","profileDetails","primaryRecipient","classes","survyReqBtn","TabNavs","formatMessage","overview","profile","rtSurveys","childRecipients","files","impact","filter","m","map","tab","idx","array","length","anchorEl","setAnchorEl","handleMenuClick","event","currentTarget","handleClose","PaperProps","style","boxShadow","width","actions","action","console","log","icon","text","recipientName","e","updateStatus","cardContainer","headerImg","base64Avatar","navContainer","TEXT","medium","padding","moreBtn","replace","Boolean","vertical","horizontal","recipientInfo","recipientId","internalId","appBar","propTypes","isRequired","number","intlHeader"],"mappings":"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","sourcesContent":["/**\n *\n * RecipientList Header\n *\n */\n\nimport React, { useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { injectIntl, intlShape } from 'react-intl';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Card from '@material-ui/core/Card';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Add from '@material-ui/icons/Add';\nimport Menu from '@material-ui/core/Menu';\nimport Edit from '@material-ui/icons/Edit';\nimport ImportExport from '@material-ui/icons/ImportExport';\n\nimport colors from 'global-styles';\nimport NSMenuItem from 'components/shared/NSMenuItem';\nimport TextLink from 'components/shared/TextLink';\nimport HeaderButton from 'components/shared/HeaderButton';\nimport placeHolderImg from 'assets/images/familyPlaceholder.png';\nimport { generateImg } from 'utils/helpers';\nimport globalMessages from 'messages';\nimport { RecipientViewContext } from './RecipientView/context/index';\nimport { recipientListStyles, helperClasses } from './styles';\n\nfunction a11yProps(name) {\n  return {\n    id: `${name}-tab`,\n    'aria-controls': `${name}-control-tab`,\n  };\n}\n\nexport function Header({ intl, value }) {\n  const { data, tabChange, profileDetails, primaryRecipient } = useContext(\n    RecipientViewContext\n  );\n  const classes = recipientListStyles();\n  const { survyReqBtn } = helperClasses;\n\n  const TabNavs = [\n    intl.formatMessage(globalMessages.overview),\n    intl.formatMessage(globalMessages.profile),\n    primaryRecipient ? intl.formatMessage(globalMessages.rtSurveys) : '',\n    profileDetails.childRecipients,\n    intl.formatMessage(globalMessages.files),\n    intl.formatMessage(globalMessages.impact),\n  ]\n    .filter(m => m)\n    .map((tab, idx, array) => (\n      <Tab\n        key={tab}\n        label={tab}\n        disabled={array.length - 1 === idx || array.length - 2 === idx}\n        {...a11yProps(tab)}\n        className={classes.tab}\n      />\n    ));\n\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleMenuClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const PaperProps = {\n    style: {\n      boxShadow: '0px 2px 6px rgba(0, 0, 0, 0.5)',\n      width: 200,\n    },\n  };\n\n  // TODO: Complete actions\n  const actions = [\n    {\n      action: () => console.log('go to survey request'),\n      icon: Add,\n      text: profileDetails.recipientName,\n    },\n    {\n      action: e => {\n        tabChange(e, 1);\n        handleClose();\n      },\n      icon: Edit,\n      text: `Edit ${profileDetails.recipientName}`,\n    },\n    {\n      action: () => console.log('go to update status'),\n      icon: ImportExport,\n      text: intl.formatMessage(globalMessages.updateStatus),\n    },\n  ];\n\n  return (\n    <Grid container>\n      <Grid item xs={2} className={classes.cardContainer}>\n        <Card className={classes.headerImg}>\n          <img\n            height=\"100%\"\n            alt={data.name}\n            src={\n              data.base64Avatar\n                ? generateImg(data.base64Avatar)\n                : placeHolderImg\n            }\n            title={data.name}\n          />\n        </Card>\n      </Grid>\n      <Grid container item className={classes.navContainer}>\n        <Grid container item direction=\"row-reverse\">\n          <Grid\n            item\n            container\n            xs={8}\n            justify=\"flex-end\"\n            alignItems=\"flex-start\"\n          >\n            <Grid item container justify=\"flex-end\">\n              <HeaderButton\n                version={1}\n                bgColor={colors.TEXT.medium}\n                padding={survyReqBtn.padding}\n              >\n                <>\n                  <Add />\n                  {profileDetails.recipientName}\n                </>\n              </HeaderButton>\n              <TextLink\n                content={intl.formatMessage(globalMessages.moreBtn)}\n                onClick={handleMenuClick}\n                className={classes.moreBtn}\n              />\n              <Menu\n                id={profileDetails.recipientName.replace(/ /g, '-')}\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n                elevation={0}\n                getContentAnchorEl={null}\n                PaperProps={PaperProps}\n                anchorOrigin={{\n                  vertical: 'bottom',\n                  horizontal: 'right',\n                }}\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n              >\n                {actions.map(({ icon, text, action }, idx) => (\n                  <NSMenuItem\n                    key={idx}\n                    icon={icon}\n                    text={text}\n                    handleItemClick={action}\n                  />\n                ))}\n              </Menu>\n            </Grid>\n          </Grid>\n          <Grid item xs={4} className={classes.recipientInfo}>\n            <Typography variant=\"h1\" className={classes.recipientName}>\n              {data.name}\n            </Typography>\n            <Typography variant=\"caption\" className={classes.recipientId}>\n              {data.internalId}\n            </Typography>\n          </Grid>\n        </Grid>\n\n        <Grid item container alignItems=\"flex-end\">\n          <AppBar position=\"static\" color=\"default\" className={classes.appBar}>\n            <Tabs\n              value={value}\n              onChange={tabChange}\n              indicatorColor=\"primary\"\n              textColor=\"primary\"\n              aria-label=\"Recipient List Tabs\"\n            >\n              {TabNavs}\n            </Tabs>\n          </AppBar>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n\nHeader.propTypes = {\n  intl: intlShape.isRequired,\n  value: PropTypes.number.isRequired,\n};\n\nconst intlHeader = injectIntl(Header);\n\nexport default intlHeader;\n"]},"metadata":{},"sourceType":"module"}