{"ast":null,"code":"/**\n *\n * ActionPanel\n *\n */\n// import React from 'react';\n// import PropTypes from 'prop-types';\n// import { FormattedMessage } from 'react-intl';\n// import clsx from 'clsx';\n// import Grid from '@material-ui/core/Grid';\n// import Button from '@material-ui/core/Button';\n// import CircularProgress from '@material-ui/core/CircularProgress';\n// import appMessages from 'messages';\n// import { actionPanelStyles } from '../components/ActionPanel/styles';\n// export function ActionPanel({\n//   action,\n//   formId,\n//   type,\n//   resetForm,\n//   disabled,\n//   loading,\n// }) {\n//   const classes = actionPanelStyles();\n//   return (\n//     <>\n//       <Grid item xs={3} xl={2}>\n//         <div className={clsx(classes.panel)}>\n//           <Grid\n//             item\n//             container\n//             direction=\"column\"\n//             justify=\"center\"\n//             alignItems=\"center\"\n//           >\n//             <Button\n//               variant=\"contained\"\n//               color=\"primary\"\n//               size=\"large\"\n//               className={classes.confirmBtn}\n//               form={formId}\n//               type={type}\n//               disabled={disabled}\n//             >\n//               {loading ? (\n//                 <CircularProgress\n//                   className={classes.progress}\n//                   color=\"primary\"\n//                 />\n//               ) : (\n//                 <FormattedMessage {...appMessages[action]} />\n//               )}\n//             </Button>\n//             <Button className={classes.cancelBtn} onClick={resetForm}>\n//               <FormattedMessage {...appMessages.cancel} />\n//             </Button>\n//           </Grid>\n//         </div>\n//       </Grid>\n//     </>\n//   );\n// }\n// export const loadingAction = (message, loading) => {\n//   const timeOut = setTimeout(() => {\n//     message(state => ({\n//       ...state,\n//       open: false,\n//       message: '',\n//     }));\n//   }, 3000);\n//   loading(false);\n//   return timeOut;\n// };\n// ActionPanel.propTypes = {\n//   action: PropTypes.string.isRequired,\n//   type: PropTypes.string.isRequired,\n//   formId: PropTypes.string.isRequired,\n//   resetForm: PropTypes.func.isRequired,\n//   disabled: PropTypes.bool,\n//   loading: PropTypes.bool,\n// };\n// export default ActionPanel;","map":{"version":3,"sources":["/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/src/stories/2-ActionPanel.stories.js"],"names":[],"mappings":"AAAA;;;;;AAMA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["/**\n *\n * ActionPanel\n *\n */\n\n// import React from 'react';\n// import PropTypes from 'prop-types';\n// import { FormattedMessage } from 'react-intl';\n// import clsx from 'clsx';\n\n// import Grid from '@material-ui/core/Grid';\n// import Button from '@material-ui/core/Button';\n// import CircularProgress from '@material-ui/core/CircularProgress';\n\n// import appMessages from 'messages';\n// import { actionPanelStyles } from '../components/ActionPanel/styles';\n\n// export function ActionPanel({\n//   action,\n//   formId,\n//   type,\n//   resetForm,\n//   disabled,\n//   loading,\n// }) {\n//   const classes = actionPanelStyles();\n\n//   return (\n//     <>\n//       <Grid item xs={3} xl={2}>\n//         <div className={clsx(classes.panel)}>\n//           <Grid\n//             item\n//             container\n//             direction=\"column\"\n//             justify=\"center\"\n//             alignItems=\"center\"\n//           >\n//             <Button\n//               variant=\"contained\"\n//               color=\"primary\"\n//               size=\"large\"\n//               className={classes.confirmBtn}\n//               form={formId}\n//               type={type}\n//               disabled={disabled}\n//             >\n//               {loading ? (\n//                 <CircularProgress\n//                   className={classes.progress}\n//                   color=\"primary\"\n//                 />\n//               ) : (\n//                 <FormattedMessage {...appMessages[action]} />\n//               )}\n//             </Button>\n//             <Button className={classes.cancelBtn} onClick={resetForm}>\n//               <FormattedMessage {...appMessages.cancel} />\n//             </Button>\n//           </Grid>\n//         </div>\n//       </Grid>\n//     </>\n//   );\n// }\n\n// export const loadingAction = (message, loading) => {\n//   const timeOut = setTimeout(() => {\n//     message(state => ({\n//       ...state,\n//       open: false,\n//       message: '',\n//     }));\n//   }, 3000);\n//   loading(false);\n//   return timeOut;\n// };\n\n// ActionPanel.propTypes = {\n//   action: PropTypes.string.isRequired,\n//   type: PropTypes.string.isRequired,\n//   formId: PropTypes.string.isRequired,\n//   resetForm: PropTypes.func.isRequired,\n//   disabled: PropTypes.bool,\n//   loading: PropTypes.bool,\n// };\n\n// export default ActionPanel;\n"]},"metadata":{},"sourceType":"module"}