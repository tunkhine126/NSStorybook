{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator\";\nimport _objectWithoutProperties from \"/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/src/components/NSFields/index.js\";\n\n/**\n *\n * NSFields\n *\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport DatePickerValidation from 'components/shared/DatePickerValidation';\nimport TimePickerValidation from 'components/shared/TimePickerValidation';\nimport SelectValidation from 'components/shared/SelectValidation';\nimport MultiSelectValidation from 'components/shared/MultiSelectValidation';\nimport InputValidation from 'components/shared/InputValidation';\nimport Photo from './photo';\nimport { SelectWrapper } from './styles';\n\nfunction NSFields(_ref) {\n  let {\n    field,\n    fieldType,\n    label,\n    initialValue,\n    showPrefix = false,\n    icon,\n    position,\n    values = {},\n    options = [],\n    onchange = () => {}\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"field\", \"fieldType\", \"label\", \"initialValue\", \"showPrefix\", \"icon\", \"position\", \"values\", \"options\", \"onchange\"]);\n\n  let preFixAttr = {};\n\n  if (showPrefix) {\n    preFixAttr = {\n      position,\n      icon\n    };\n  }\n\n  switch (fieldType) {\n    case 'short_text':\n      return React.createElement(InputValidation, Object.assign({\n        field: field,\n        label: label,\n        initialValue: initialValue,\n        type: \"text\",\n        maxWidth: \"none\"\n      }, preFixAttr, rest, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }));\n\n    case 'paragraph_text':\n      return React.createElement(InputValidation, Object.assign({\n        field: field,\n        label: label,\n        initialValue: initialValue,\n        multiline: true,\n        type: \"text\",\n        maxWidth: \"none\",\n        rows: \"3\"\n      }, rest, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }));\n\n    case 'number':\n      return React.createElement(InputValidation, Object.assign({\n        field: field,\n        label: label,\n        initialValue: initialValue\n      }, preFixAttr, {\n        type: \"number\",\n        maxWidth: \"none\"\n      }, rest, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }));\n\n    case 'date':\n      return React.createElement(DatePickerValidation, Object.assign({\n        field: field,\n        label: label,\n        initialValue: initialValue,\n        fullWidth: true,\n        clearable: true,\n        disableFuture: true,\n        customFormat: \"MM-dd-yyyy\",\n        placeholder: `${moment().format('MM-DD-YYYY')}`,\n        variant: \"dialog\",\n        inputVariant: \"filled\",\n        margin: \"normal\"\n      }, rest, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }));\n\n    case 'time':\n      return React.createElement(TimePickerValidation, Object.assign({\n        field: field,\n        label: label,\n        initialValue: initialValue,\n        fullWidth: true,\n        clearable: true,\n        placeholder: \"08:00 AM\",\n        inputVariant: \"filled\",\n        margin: \"normal\"\n      }, rest, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }));\n\n    case 'single_select':\n      return React.createElement(SelectWrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(SelectValidation, Object.assign({\n        field: field,\n        label: label,\n        initialValue: initialValue,\n        values: values,\n        items: options,\n        onChange: onchange,\n        type: \"select\",\n        maxWidth: \"none\",\n        padding: \"25px 18px 10px 13px\"\n      }, rest, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      })));\n\n    case 'multi_select':\n      return React.createElement(SelectWrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(MultiSelectValidation, Object.assign({\n        field: field,\n        label: label,\n        initialValue: initialValue,\n        values: values,\n        onChange: onchange,\n        items: options,\n        type: \"select\",\n        maxWidth: \"none\",\n        padding: \"25px 18px 10px 13px\"\n      }, rest, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      })));\n\n    case 'likert':\n      return React.createElement(SelectWrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(SelectValidation, Object.assign({\n        field: field,\n        label: label,\n        initialValue: initialValue,\n        values: values,\n        items: options,\n        onChange: onchange,\n        type: \"select\",\n        maxWidth: \"none\",\n        padding: \"25px 18px 10px 13px\"\n      }, rest, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      })));\n\n    case 'photo':\n      return React.createElement(Photo, Object.assign({\n        field: field,\n        initialValue: initialValue,\n        label: label\n      }, rest, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }));\n\n    case 'audio':\n      return 'audio';\n\n    case 'video':\n      return 'video';\n\n    case 'coordinates':\n      return React.createElement(InputValidation, Object.assign({\n        field: field,\n        label: label,\n        initialValue: initialValue,\n        maxWidth: \"none\",\n        type: \"text\"\n      }, rest, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }));\n\n    default:\n      return null;\n  }\n}\n\nNSFields.propTypes = {\n  field: PropTypes.string.isRequired,\n  fieldType: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  initialValue: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]),\n  position: PropTypes.string,\n  showPrefix: PropTypes.bool,\n  icon: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\n  values: PropTypes.object,\n  options: PropTypes.array,\n  onchange: PropTypes.func\n};\nNSFields.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"NSFields\",\n  \"props\": {\n    \"showPrefix\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"values\": {\n      \"defaultValue\": {\n        \"value\": \"{}\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"options\": {\n      \"defaultValue\": {\n        \"value\": \"[]\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"onchange\": {\n      \"defaultValue\": {\n        \"value\": \"() => {}\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"field\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"fieldType\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"label\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"initialValue\": {\n      \"type\": {\n        \"name\": \"union\",\n        \"value\": [{\n          \"name\": \"string\"\n        }, {\n          \"name\": \"object\"\n        }, {\n          \"name\": \"array\"\n        }]\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"position\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"icon\": {\n      \"type\": {\n        \"name\": \"union\",\n        \"value\": [{\n          \"name\": \"element\"\n        }, {\n          \"name\": \"func\"\n        }]\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\nexport default NSFields;\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/components/NSFields/index.js\"] = {\n    name: \"NSFields\",\n    docgenInfo: NSFields.__docgenInfo,\n    path: \"src/components/NSFields/index.js\"\n  };\n}","map":{"version":3,"sources":["/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/src/components/NSFields/index.js"],"names":["React","PropTypes","moment","DatePickerValidation","TimePickerValidation","SelectValidation","MultiSelectValidation","InputValidation","Photo","SelectWrapper","NSFields","field","fieldType","label","initialValue","showPrefix","icon","position","values","options","onchange","rest","preFixAttr","format","propTypes","string","isRequired","oneOfType","object","array","bool","element","func"],"mappings":"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","sourcesContent":["/**\n *\n * NSFields\n *\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nimport DatePickerValidation from 'components/shared/DatePickerValidation';\nimport TimePickerValidation from 'components/shared/TimePickerValidation';\nimport SelectValidation from 'components/shared/SelectValidation';\nimport MultiSelectValidation from 'components/shared/MultiSelectValidation';\nimport InputValidation from 'components/shared/InputValidation';\nimport Photo from './photo';\n\nimport { SelectWrapper } from './styles';\n\nfunction NSFields({\n  field,\n  fieldType,\n  label,\n  initialValue,\n  showPrefix = false,\n  icon,\n  position,\n  values = {},\n  options = [],\n  onchange = () => {},\n  ...rest\n}) {\n  let preFixAttr = {};\n\n  if (showPrefix) {\n    preFixAttr = {\n      position,\n      icon,\n    };\n  }\n\n  switch (fieldType) {\n    case 'short_text':\n      return (\n        <InputValidation\n          field={field}\n          label={label}\n          initialValue={initialValue}\n          type=\"text\"\n          maxWidth=\"none\"\n          {...preFixAttr}\n          {...rest}\n        />\n      );\n    case 'paragraph_text':\n      return (\n        <InputValidation\n          field={field}\n          label={label}\n          initialValue={initialValue}\n          multiline\n          type=\"text\"\n          maxWidth=\"none\"\n          rows=\"3\"\n          {...rest}\n        />\n      );\n    case 'number':\n      return (\n        <InputValidation\n          field={field}\n          label={label}\n          initialValue={initialValue}\n          {...preFixAttr}\n          type=\"number\"\n          maxWidth=\"none\"\n          {...rest}\n        />\n      );\n    case 'date':\n      return (\n        <DatePickerValidation\n          field={field}\n          label={label}\n          initialValue={initialValue}\n          fullWidth\n          clearable\n          disableFuture\n          customFormat=\"MM-dd-yyyy\"\n          placeholder={`${moment().format('MM-DD-YYYY')}`}\n          variant=\"dialog\"\n          inputVariant=\"filled\"\n          margin=\"normal\"\n          {...rest}\n        />\n      );\n    case 'time':\n      return (\n        <TimePickerValidation\n          field={field}\n          label={label}\n          initialValue={initialValue}\n          fullWidth\n          clearable\n          placeholder=\"08:00 AM\"\n          inputVariant=\"filled\"\n          margin=\"normal\"\n          {...rest}\n        />\n      );\n    case 'single_select':\n      return (\n        <SelectWrapper>\n          <SelectValidation\n            field={field}\n            label={label}\n            initialValue={initialValue}\n            values={values}\n            items={options}\n            onChange={onchange}\n            type=\"select\"\n            maxWidth=\"none\"\n            padding=\"25px 18px 10px 13px\"\n            {...rest}\n          />\n        </SelectWrapper>\n      );\n    case 'multi_select':\n      return (\n        <SelectWrapper>\n          <MultiSelectValidation\n            field={field}\n            label={label}\n            initialValue={initialValue}\n            values={values}\n            onChange={onchange}\n            items={options}\n            type=\"select\"\n            maxWidth=\"none\"\n            padding=\"25px 18px 10px 13px\"\n            {...rest}\n          />\n        </SelectWrapper>\n      );\n    case 'likert':\n      return (\n        <SelectWrapper>\n          <SelectValidation\n            field={field}\n            label={label}\n            initialValue={initialValue}\n            values={values}\n            items={options}\n            onChange={onchange}\n            type=\"select\"\n            maxWidth=\"none\"\n            padding=\"25px 18px 10px 13px\"\n            {...rest}\n          />\n        </SelectWrapper>\n      );\n    case 'photo':\n      return (\n        <Photo\n          field={field}\n          initialValue={initialValue}\n          label={label}\n          {...rest}\n        />\n      );\n    case 'audio':\n      return 'audio';\n    case 'video':\n      return 'video';\n    case 'coordinates':\n      return (\n        <InputValidation\n          field={field}\n          label={label}\n          initialValue={initialValue}\n          maxWidth=\"none\"\n          type=\"text\"\n          {...rest}\n        />\n      );\n    default:\n      return null;\n  }\n}\n\nNSFields.propTypes = {\n  field: PropTypes.string.isRequired,\n  fieldType: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  initialValue: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.object,\n    PropTypes.array,\n  ]),\n  position: PropTypes.string,\n  showPrefix: PropTypes.bool,\n  icon: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\n  values: PropTypes.object,\n  options: PropTypes.array,\n  onchange: PropTypes.func,\n};\n\nexport default NSFields;\n"]},"metadata":{},"sourceType":"module"}