{"ast":null,"code":"import _objectSpread from \"/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/src/components/ActionPanel/index.js\";\n\n/**\n *\n * ActionPanel\n *\n */\nimport React from 'react';\nimport PropTypes from 'prop-types'; // import { FormattedMessage } from 'react-intl';\n\nimport clsx from 'clsx';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress'; // import appMessages from 'messages';\n\nimport { actionPanelStyles } from './styles';\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55\n  },\n  __self: this\n}, \" Hello \");\n\nexport function ActionPanel({\n  action,\n  formId,\n  type,\n  resetForm,\n  disabled,\n  loading\n}) {\n  const classes = actionPanelStyles();\n  return React.createElement(React.Fragment, null, React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    xl: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: clsx(classes.panel),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    container: true,\n    direction: \"column\",\n    justify: \"center\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    className: classes.confirmBtn,\n    form: formId,\n    type: type,\n    disabled: disabled,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, loading ? React.createElement(CircularProgress, {\n    className: classes.progress,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }) : _ref), React.createElement(Button, {\n    className: classes.cancelBtn,\n    onClick: resetForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })))));\n}\nexport const loadingAction = (message, loading) => {\n  const timeOut = setTimeout(() => {\n    message(state => _objectSpread({}, state, {\n      open: false,\n      message: ''\n    }));\n  }, 3000);\n  loading(false);\n  return timeOut;\n};\nActionPanel.propTypes = {\n  action: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  formId: PropTypes.string.isRequired,\n  resetForm: PropTypes.func.isRequired,\n  disabled: PropTypes.bool,\n  loading: PropTypes.bool\n};\nActionPanel.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"ActionPanel\",\n  \"props\": {\n    \"action\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"type\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"formId\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"resetForm\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"disabled\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"loading\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\nexport default ActionPanel;\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/components/ActionPanel/index.js\"] = {\n    name: \"ActionPanel\",\n    docgenInfo: ActionPanel.__docgenInfo,\n    path: \"src/components/ActionPanel/index.js\"\n  };\n}","map":{"version":3,"sources":["/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/src/components/ActionPanel/index.js"],"names":["React","PropTypes","clsx","Grid","Button","CircularProgress","actionPanelStyles","ActionPanel","action","formId","type","resetForm","disabled","loading","classes","panel","confirmBtn","progress","cancelBtn","loadingAction","message","timeOut","setTimeout","state","open","propTypes","string","isRequired","func","bool"],"mappings":"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","sourcesContent":["/**\n *\n * ActionPanel\n *\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n// import { FormattedMessage } from 'react-intl';\nimport clsx from 'clsx';\n\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n// import appMessages from 'messages';\nimport { actionPanelStyles } from './styles';\n\nexport function ActionPanel({\n  action,\n  formId,\n  type,\n  resetForm,\n  disabled,\n  loading,\n}) {\n  const classes = actionPanelStyles();\n\n  return (\n    <>\n      <Grid item xs={3} xl={2}>\n        <div className={clsx(classes.panel)}>\n          <Grid\n            item\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n          >\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              size=\"large\"\n              className={classes.confirmBtn}\n              form={formId}\n              type={type}\n              disabled={disabled}\n            >\n              {loading ? (\n                <CircularProgress\n                  className={classes.progress}\n                  color=\"primary\"\n                />\n              ) : (\n                <p> Hello </p>\n\n              )}\n            </Button>\n            <Button className={classes.cancelBtn} onClick={resetForm}>\n              {/* <FormattedMessage {...appMessages.cancel} /> */}\n            </Button>\n          </Grid>\n        </div>\n      </Grid>\n    </>\n  );\n}\n\nexport const loadingAction = (message, loading) => {\n  const timeOut = setTimeout(() => {\n    message(state => ({\n      ...state,\n      open: false,\n      message: '',\n    }));\n  }, 3000);\n  loading(false);\n  return timeOut;\n};\n\nActionPanel.propTypes = {\n  action: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  formId: PropTypes.string.isRequired,\n  resetForm: PropTypes.func.isRequired,\n  disabled: PropTypes.bool,\n  loading: PropTypes.bool,\n};\n\nexport default ActionPanel;\n"]},"metadata":{},"sourceType":"module"}