{"ast":null,"code":"import _objectWithoutProperties from \"/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/src/components/InputValidation/index.js\";\n\n/**\n *\n * InputValidation\n *\n */\nimport React from 'react';\nimport clsx from 'clsx';\nimport { asField } from 'informed';\nimport NSInput from '../NSInput/index';\nimport { inputStyles } from '../../global-styles';\nimport { styles } from './styles';\nconst InputValidation = asField((_ref) => {\n  let {\n    fieldState,\n    fieldApi\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"fieldState\", \"fieldApi\"]);\n\n  const {\n    value\n  } = fieldState;\n  const {\n    setValue,\n    setTouched\n  } = fieldApi;\n\n  const {\n    onChange,\n    onBlur,\n    field,\n    customClass,\n    maxWidth = '400px'\n  } = props,\n        rest = _objectWithoutProperties(props, [\"onChange\", \"onBlur\", \"field\", \"customClass\", \"maxWidth\"]);\n\n  const classes = styles(maxWidth)();\n  const globalClasses = inputStyles(fieldState.error)(); // These two props are not native and are not needed\n\n  delete rest.forwardedRef;\n  delete rest.debug;\n  return React.createElement(React.Fragment, null, React.createElement(NSInput, Object.assign({}, rest, {\n    value: !value && value !== 0 ? '' : value,\n    id: field,\n    name: field,\n    margin: \"normal\",\n    variant: \"filled\",\n    className: clsx(classes.input, globalClasses.root, customClass),\n    onChange: e => {\n      setValue(e.target.value);\n\n      if (onChange) {\n        onChange(e.target.value, field, fieldApi);\n      }\n    },\n    onBlur: e => {\n      setTouched(true);\n\n      if (onBlur) {\n        onBlur(e.target.value);\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  })), fieldState.error ? React.createElement(\"small\", {\n    className: globalClasses.error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, fieldState.error) : null);\n});\nexport default InputValidation;","map":{"version":3,"sources":["/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/src/components/InputValidation/index.js"],"names":["React","clsx","asField","NSInput","inputStyles","styles","InputValidation","fieldState","fieldApi","props","value","setValue","setTouched","onChange","onBlur","field","customClass","maxWidth","rest","classes","globalClasses","error","forwardedRef","debug","input","root","e","target"],"mappings":";;;AAAA;;;;;AAMA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,OAAT,QAAwB,UAAxB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,MAAT,QAAuB,UAAvB;AAEA,MAAMC,eAAe,GAAGJ,OAAO,CAAC,UAAwC;AAAA,MAAvC;AAAEK,IAAAA,UAAF;AAAcC,IAAAA;AAAd,GAAuC;AAAA,MAAZC,KAAY;;AACtE,QAAM;AAAEC,IAAAA;AAAF,MAAYH,UAAlB;AACA,QAAM;AAAEI,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA2BJ,QAAjC;;AACA,QAAM;AACJK,IAAAA,QADI;AAEJC,IAAAA,MAFI;AAGJC,IAAAA,KAHI;AAIJC,IAAAA,WAJI;AAKJC,IAAAA,QAAQ,GAAG;AALP,MAOFR,KAPJ;AAAA,QAMKS,IANL,4BAOIT,KAPJ;;AAQA,QAAMU,OAAO,GAAGd,MAAM,CAACY,QAAD,CAAN,EAAhB;AACA,QAAMG,aAAa,GAAGhB,WAAW,CAACG,UAAU,CAACc,KAAZ,CAAX,EAAtB,CAZsE,CActE;;AACA,SAAOH,IAAI,CAACI,YAAZ;AACA,SAAOJ,IAAI,CAACK,KAAZ;AAEA,SACE,0CACE,oBAAC,OAAD,oBACML,IADN;AAEE,IAAA,KAAK,EAAE,CAACR,KAAD,IAAUA,KAAK,KAAK,CAApB,GAAwB,EAAxB,GAA6BA,KAFtC;AAGE,IAAA,EAAE,EAAEK,KAHN;AAIE,IAAA,IAAI,EAAEA,KAJR;AAKE,IAAA,MAAM,EAAC,QALT;AAME,IAAA,OAAO,EAAC,QANV;AAOE,IAAA,SAAS,EAAEd,IAAI,CAACkB,OAAO,CAACK,KAAT,EAAgBJ,aAAa,CAACK,IAA9B,EAAoCT,WAApC,CAPjB;AAQE,IAAA,QAAQ,EAAEU,CAAC,IAAI;AACbf,MAAAA,QAAQ,CAACe,CAAC,CAACC,MAAF,CAASjB,KAAV,CAAR;;AACA,UAAIG,QAAJ,EAAc;AACZA,QAAAA,QAAQ,CAACa,CAAC,CAACC,MAAF,CAASjB,KAAV,EAAiBK,KAAjB,EAAwBP,QAAxB,CAAR;AACD;AACF,KAbH;AAcE,IAAA,MAAM,EAAEkB,CAAC,IAAI;AACXd,MAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,UAAIE,MAAJ,EAAY;AACVA,QAAAA,MAAM,CAACY,CAAC,CAACC,MAAF,CAASjB,KAAV,CAAN;AACD;AACF,KAnBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,EAuBGH,UAAU,CAACc,KAAX,GACC;AAAO,IAAA,SAAS,EAAED,aAAa,CAACC,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwCd,UAAU,CAACc,KAAnD,CADD,GAEG,IAzBN,CADF;AA6BD,CA/C8B,CAA/B;AAiDA,eAAef,eAAf","sourcesContent":["/**\n *\n * InputValidation\n *\n */\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport { asField } from 'informed';\nimport NSInput from '../NSInput/index';\nimport { inputStyles } from '../../global-styles';\nimport { styles } from './styles';\n\nconst InputValidation = asField(({ fieldState, fieldApi, ...props }) => {\n  const { value } = fieldState;\n  const { setValue, setTouched } = fieldApi;\n  const {\n    onChange,\n    onBlur,\n    field,\n    customClass,\n    maxWidth = '400px',\n    ...rest\n  } = props;\n  const classes = styles(maxWidth)();\n  const globalClasses = inputStyles(fieldState.error)();\n\n  // These two props are not native and are not needed\n  delete rest.forwardedRef;\n  delete rest.debug;\n\n  return (\n    <>\n      <NSInput\n        {...rest}\n        value={!value && value !== 0 ? '' : value}\n        id={field}\n        name={field}\n        margin=\"normal\"\n        variant=\"filled\"\n        className={clsx(classes.input, globalClasses.root, customClass)}\n        onChange={e => {\n          setValue(e.target.value);\n          if (onChange) {\n            onChange(e.target.value, field, fieldApi);\n          }\n        }}\n        onBlur={e => {\n          setTouched(true);\n          if (onBlur) {\n            onBlur(e.target.value);\n          }\n        }}\n      />\n\n      {fieldState.error ? (\n        <small className={globalClasses.error}>{fieldState.error}</small>\n      ) : null}\n    </>\n  );\n});\n\nexport default InputValidation;\n"]},"metadata":{},"sourceType":"module"}