{"ast":null,"code":"var _jsxFileName = \"/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/src/components/NSTable/tableViews.js\";\n\n/* eslint-disable react/prop-types */\n\n/**\n *\n * TableViews\n *\n */\nimport React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { injectIntl, intlShape } from 'react-intl';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Delete from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\nimport SolidDownArrow from 'components/shared/Icons/solidDownArrow';\nimport HeaderButton from 'components/shared/HeaderButton';\nimport NSInput from 'components/shared/NSInput';\nimport TextLink from 'components/shared/TextLink';\nimport CheckMark from 'components/shared/Icons/checkMark';\nimport globalMessages from 'messages';\nimport messages from './messages';\nimport { TableViewStyle, UpArrowStyle, NewViewContainerStyle, MenuStyle, styles, tableViewHelperClasses } from './styles';\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(Divider, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 106\n  },\n  __self: this\n});\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(CheckMark, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 170\n  },\n  __self: this\n});\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(Divider, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 200\n  },\n  __self: this\n});\n\nfunction TableViews({\n  intl,\n  anchorEl,\n  addView,\n  options,\n  selectedId,\n  handleClose,\n  handleExited,\n  handleCancel,\n  handleMenuItemClick,\n  handleAddViewDelete,\n  handleAddViewClick\n}) {\n  const classes = TableViewStyle();\n  const classes2 = styles();\n  const {\n    actionBtns,\n    createBtn,\n    cancelBtn\n  } = tableViewHelperClasses;\n  const PaperProps = {\n    style: {\n      boxShadow: '0px 2px 4px rgba(0, 0, 0, 0.25)',\n      width: 272\n    }\n  };\n  return React.createElement(Menu, {\n    id: \"saved-views-menu\",\n    PaperProps: PaperProps,\n    anchorEl: anchorEl,\n    keepMounted: true,\n    open: Boolean(anchorEl),\n    onClose: handleClose,\n    onExited: handleExited,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"space-between\",\n    alignItems: \"flex-start\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"body1\",\n    gutterBottom: true,\n    className: classes.menuTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, addView ? intl.formatMessage(messages.newTableView) : intl.formatMessage(messages.loadTableView))), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(UpArrowStyle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    \"aria-label\": \"close table settings\",\n    \"aria-controls\": \"table-settings-close\",\n    \"aria-haspopup\": \"false\",\n    color: \"primary\",\n    onClick: handleClose,\n    className: classes2.upArrowBtn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(SolidDownArrow, {\n    className: classes2.upArrow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }))))), _ref, addView && React.createElement(NewViewContainerStyle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"caption\",\n    gutterBottom: true,\n    className: classes.newViewNotice,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, intl.formatMessage(messages.newViewNotice)), React.createElement(NSInput, {\n    placeholder: intl.formatMessage(messages.inputPlaceholder),\n    className: clsx(classes.newViewInput, 'newViewInput'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"flex-end\",\n    alignItems: \"flex-end\",\n    className: classes.actionBtns,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(HeaderButton, {\n    version: 2,\n    padding: actionBtns.padding,\n    bgColor: cancelBtn.bg,\n    onClick: handleCancel,\n    className: classes.cancelBtn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"body1\",\n    className: clsx(classes.actionBtnText),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, intl.formatMessage(globalMessages.cancel))), React.createElement(HeaderButton, {\n    version: 1,\n    padding: actionBtns.padding,\n    bgColor: createBtn.bg,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"body1\",\n    className: classes.actionBtnText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, intl.formatMessage(globalMessages.create))))), !addView && React.createElement(MenuStyle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, options.map((option, index) => React.createElement(MenuItem, {\n    key: option.id,\n    id: option.id,\n    selected: option.id === selectedId,\n    onClick: event => handleMenuItemClick(event, option.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, React.createElement(Checkbox, {\n    icon: React.createElement(React.Fragment, null),\n    checked: option.id === selectedId,\n    checkedIcon: _ref2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"space-between\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"body1\",\n    className: classes.menuOptionText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, option.name)), index !== 0 && React.createElement(Delete, {\n    className: clsx(classes.deleteView, 'deleteViewBtn'),\n    onClick: event => handleAddViewDelete(event, option.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }))))), !addView && React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, _ref3, React.createElement(Grid, {\n    className: classes.saveNewView,\n    container: true,\n    direction: \"column\",\n    justify: \"flex-start\",\n    alignItems: \"flex-start\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, React.createElement(TextLink, {\n    content: intl.formatMessage(messages.saveNewView),\n    onClick: handleAddViewClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    variant: \"caption\",\n    gutterBottom: true,\n    className: classes.saveNewViewDesc,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, intl.formatMessage(messages.saveNewViewDesc)))));\n}\n\nTableViews.displayName = \"TableViews\";\nTableViews.propTypes = {\n  intl: intlShape.isRequired,\n  options: PropTypes.array.isRequired\n};\nconst IntlTableTableViews = injectIntl(TableViews);\nexport default IntlTableTableViews;\nTableViews.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"TableViews\",\n  \"props\": {\n    \"intl\": {\n      \"type\": {\n        \"name\": \"custom\",\n        \"raw\": \"intlShape.isRequired\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"options\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/components/NSTable/tableViews.js\"] = {\n    name: \"TableViews\",\n    docgenInfo: TableViews.__docgenInfo,\n    path: \"src/components/NSTable/tableViews.js\"\n  };\n}","map":{"version":3,"sources":["/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/src/components/NSTable/tableViews.js"],"names":["React","clsx","PropTypes","injectIntl","intlShape","Menu","MenuItem","Grid","Typography","Divider","Checkbox","Delete","IconButton","SolidDownArrow","HeaderButton","NSInput","TextLink","CheckMark","globalMessages","messages","TableViewStyle","UpArrowStyle","NewViewContainerStyle","MenuStyle","styles","tableViewHelperClasses","TableViews","intl","anchorEl","addView","options","selectedId","handleClose","handleExited","handleCancel","handleMenuItemClick","handleAddViewDelete","handleAddViewClick","classes","classes2","actionBtns","createBtn","cancelBtn","PaperProps","style","boxShadow","width","Boolean","menuTitle","formatMessage","newTableView","loadTableView","upArrowBtn","upArrow","newViewNotice","inputPlaceholder","newViewInput","padding","bg","actionBtnText","cancel","create","map","option","index","id","event","menuOptionText","name","deleteView","saveNewView","saveNewViewDesc","propTypes","isRequired","array","IntlTableTableViews"],"mappings":"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","sourcesContent":["/* eslint-disable react/prop-types */\n/**\n *\n * TableViews\n *\n */\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { injectIntl, intlShape } from 'react-intl';\n\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Delete from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport SolidDownArrow from 'components/shared/Icons/solidDownArrow';\nimport HeaderButton from 'components/shared/HeaderButton';\nimport NSInput from 'components/shared/NSInput';\nimport TextLink from 'components/shared/TextLink';\nimport CheckMark from 'components/shared/Icons/checkMark';\nimport globalMessages from 'messages';\nimport messages from './messages';\n\nimport {\n  TableViewStyle,\n  UpArrowStyle,\n  NewViewContainerStyle,\n  MenuStyle,\n  styles,\n  tableViewHelperClasses,\n} from './styles';\n\nfunction TableViews({\n  intl,\n  anchorEl,\n  addView,\n  options,\n  selectedId,\n  handleClose,\n  handleExited,\n  handleCancel,\n  handleMenuItemClick,\n  handleAddViewDelete,\n  handleAddViewClick,\n}) {\n  const classes = TableViewStyle();\n  const classes2 = styles();\n  const { actionBtns, createBtn, cancelBtn } = tableViewHelperClasses;\n\n  const PaperProps = {\n    style: {\n      boxShadow: '0px 2px 4px rgba(0, 0, 0, 0.25)',\n      width: 272,\n    },\n  };\n\n  return (\n    <Menu\n      id=\"saved-views-menu\"\n      PaperProps={PaperProps}\n      anchorEl={anchorEl}\n      keepMounted\n      open={Boolean(anchorEl)}\n      onClose={handleClose}\n      onExited={handleExited}\n    >\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"flex-start\"\n      >\n        <Grid item xs>\n          <Typography\n            variant=\"body1\"\n            gutterBottom\n            className={classes.menuTitle}\n          >\n            {addView\n              ? intl.formatMessage(messages.newTableView)\n              : intl.formatMessage(messages.loadTableView)}\n          </Typography>\n        </Grid>\n        <Grid item>\n          <UpArrowStyle>\n            <IconButton\n              aria-label=\"close table settings\"\n              aria-controls=\"table-settings-close\"\n              aria-haspopup=\"false\"\n              color=\"primary\"\n              onClick={handleClose}\n              className={classes2.upArrowBtn}\n            >\n              <SolidDownArrow className={classes2.upArrow} />\n            </IconButton>\n          </UpArrowStyle>\n        </Grid>\n      </Grid>\n\n      <Divider />\n\n      {addView && (\n        <NewViewContainerStyle>\n          <Typography\n            variant=\"caption\"\n            gutterBottom\n            className={classes.newViewNotice}\n          >\n            {intl.formatMessage(messages.newViewNotice)}\n          </Typography>\n\n          <NSInput\n            placeholder={intl.formatMessage(messages.inputPlaceholder)}\n            className={clsx(classes.newViewInput, 'newViewInput')}\n          />\n\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"flex-end\"\n            alignItems=\"flex-end\"\n            className={classes.actionBtns}\n          >\n            <HeaderButton\n              version={2}\n              padding={actionBtns.padding}\n              bgColor={cancelBtn.bg}\n              onClick={handleCancel}\n              className={classes.cancelBtn}\n            >\n              <Typography\n                variant=\"body1\"\n                className={clsx(classes.actionBtnText)}\n              >\n                {intl.formatMessage(globalMessages.cancel)}\n              </Typography>\n            </HeaderButton>\n\n            <HeaderButton\n              version={1}\n              padding={actionBtns.padding}\n              bgColor={createBtn.bg}\n            >\n              <Typography variant=\"body1\" className={classes.actionBtnText}>\n                {intl.formatMessage(globalMessages.create)}\n              </Typography>\n            </HeaderButton>\n          </Grid>\n        </NewViewContainerStyle>\n      )}\n\n      {!addView && (\n        <MenuStyle>\n          {options.map((option, index) => (\n            <MenuItem\n              key={option.id}\n              id={option.id}\n              selected={option.id === selectedId}\n              onClick={event => handleMenuItemClick(event, option.id)}\n            >\n              <Checkbox\n                icon={<></>}\n                checked={option.id === selectedId}\n                checkedIcon={<CheckMark />}\n              />\n              <Grid\n                container\n                direction=\"row\"\n                justify=\"space-between\"\n                alignItems=\"center\"\n              >\n                <Grid item xs>\n                  <Typography\n                    variant=\"body1\"\n                    className={classes.menuOptionText}\n                  >\n                    {option.name}\n                  </Typography>\n                </Grid>\n                {index !== 0 && (\n                  <Delete\n                    className={clsx(classes.deleteView, 'deleteViewBtn')}\n                    onClick={event => handleAddViewDelete(event, option.id)}\n                  />\n                )}\n              </Grid>\n            </MenuItem>\n          ))}\n        </MenuStyle>\n      )}\n\n      {!addView && (\n        <span>\n          <Divider />\n          <Grid\n            className={classes.saveNewView}\n            container\n            direction=\"column\"\n            justify=\"flex-start\"\n            alignItems=\"flex-start\"\n          >\n            <TextLink\n              content={intl.formatMessage(messages.saveNewView)}\n              onClick={handleAddViewClick}\n            />\n\n            <Typography\n              variant=\"caption\"\n              gutterBottom\n              className={classes.saveNewViewDesc}\n            >\n              {intl.formatMessage(messages.saveNewViewDesc)}\n            </Typography>\n          </Grid>\n        </span>\n      )}\n    </Menu>\n  );\n}\n\nTableViews.propTypes = {\n  intl: intlShape.isRequired,\n  options: PropTypes.array.isRequired,\n};\n\nconst IntlTableTableViews = injectIntl(TableViews);\n\nexport default IntlTableTableViews;\n"]},"metadata":{},"sourceType":"module"}