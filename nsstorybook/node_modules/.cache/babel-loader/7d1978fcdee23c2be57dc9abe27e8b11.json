{"ast":null,"code":"import \"core-js/modules/es.string.replace\";\nimport \"core-js/modules/web.dom-collections.iterator\";\nvar _jsxFileName = \"/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/src/components/NSSelect/index.js\";\n\n/**\n *\n * NSSelect\n *\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport colors from '../../global-styles';\nimport { styles, useNSSelectStyle } from './styles';\n\nfunction NSSelect({\n  values,\n  items,\n  label,\n  update,\n  code = 'value',\n  value = 'value',\n  infoKey,\n  width,\n  maxWidth = '400px',\n  outterWidth,\n  outerHeight,\n  padding,\n  disableLabel,\n  selectOverride,\n  placeholderText,\n  required = false,\n  translate = '14px, 10px',\n  className,\n  onBlur = () => {}\n}) {\n  const classes = styles(width, maxWidth)();\n  const labelFormatted = label.replace(/ /g, '-').toLowerCase();\n  const menuItems = items.map(item => {\n    if (item[infoKey]) {\n      return React.createElement(MenuItem, {\n        key: item[code],\n        value: item[code],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, item[value], React.createElement(\"strong\", {\n        className: classes.infoKey,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"(\", item[infoKey], \")\"));\n    }\n\n    return React.createElement(MenuItem, {\n      key: item[code],\n      value: item[code],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, item[value]);\n  });\n  const ComponentStyle = styled.div`\n    .MuiInputLabel-outlined.MuiInputLabel-shrink {\n      transform: translate(${translate}) scale(0.75);\n    }\n    .MuiOutlinedInput-root:hover .MuiOutlinedInput-notchedOutline {\n      border-color: ${colors.STATE.active};\n    }\n    .MuiOutlinedInput-notchedOutline {\n      border-color: ${colors.INTERFACE.ui4};\n    }\n    .MuiSvgIcon-root {\n      color: ${colors.TEXT.light};\n    }\n    .MuiInputLabel-outlined {\n      color: ${colors.TEXT.light};\n      width: 77%;\n    }\n    .MuiOutlinedInput-root {\n      padding: 1px;\n    }\n    .MuiInputLabel-outlined {\n      ${disableLabel ? 'display: none;' : ''}\n    }\n  `;\n  return React.createElement(ComponentStyle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    variant: \"outlined\",\n    className: classes.size,\n    required: required,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, !placeholderText && React.createElement(InputLabel, {\n    htmlFor: `${labelFormatted}-selector`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, label), React.createElement(Select, {\n    value: values.item || values,\n    onChange: update,\n    onBlur: onBlur,\n    classes: selectOverride,\n    className: className,\n    displayEmpty: placeholderText,\n    inputProps: {\n      classes: useNSSelectStyle(outterWidth, outerHeight, padding)()\n    },\n    input: React.createElement(OutlinedInput, {\n      name: labelFormatted,\n      id: `${labelFormatted}-selector`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, placeholderText && React.createElement(MenuItem, {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, label), menuItems)));\n}\n\nNSSelect.displayName = \"NSSelect\";\nNSSelect.propTypes = {\n  values: PropTypes.oneOfType([PropTypes.object, PropTypes.string]).isRequired,\n  items: PropTypes.array.isRequired,\n  update: PropTypes.func.isRequired,\n  label: PropTypes.string.isRequired,\n  className: PropTypes.string,\n  onBlur: PropTypes.func,\n  required: PropTypes.bool,\n  code: PropTypes.string,\n  value: PropTypes.string,\n  placeholderText: PropTypes.bool,\n  disableLabel: PropTypes.bool,\n  infoKey: PropTypes.string,\n  width: PropTypes.string,\n  maxWidth: PropTypes.string,\n  outterWidth: PropTypes.string,\n  outerHeight: PropTypes.string,\n  padding: PropTypes.string,\n  translate: PropTypes.string,\n  selectOverride: PropTypes.object\n};\nNSSelect.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"NSSelect\",\n  \"props\": {\n    \"code\": {\n      \"defaultValue\": {\n        \"value\": \"'value'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"value\": {\n      \"defaultValue\": {\n        \"value\": \"'value'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"maxWidth\": {\n      \"defaultValue\": {\n        \"value\": \"'400px'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"required\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"translate\": {\n      \"defaultValue\": {\n        \"value\": \"'14px, 10px'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"onBlur\": {\n      \"defaultValue\": {\n        \"value\": \"() => {}\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"values\": {\n      \"type\": {\n        \"name\": \"union\",\n        \"value\": [{\n          \"name\": \"object\"\n        }, {\n          \"name\": \"string\"\n        }]\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"items\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"update\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"label\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"className\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"placeholderText\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"disableLabel\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"infoKey\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"width\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"outterWidth\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"outerHeight\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"padding\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"selectOverride\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\nexport default NSSelect;\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/components/NSSelect/index.js\"] = {\n    name: \"NSSelect\",\n    docgenInfo: NSSelect.__docgenInfo,\n    path: \"src/components/NSSelect/index.js\"\n  };\n}","map":{"version":3,"sources":["/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/src/components/NSSelect/index.js"],"names":["React","PropTypes","styled","FormControl","InputLabel","Select","MenuItem","OutlinedInput","colors","styles","useNSSelectStyle","NSSelect","values","items","label","update","code","value","infoKey","width","maxWidth","outterWidth","outerHeight","padding","disableLabel","selectOverride","placeholderText","required","translate","className","onBlur","classes","labelFormatted","replace","toLowerCase","menuItems","map","item","ComponentStyle","div","STATE","active","INTERFACE","ui4","TEXT","light","size","propTypes","oneOfType","object","string","isRequired","array","func","bool"],"mappings":"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","sourcesContent":["/**\n *\n * NSSelect\n *\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\n\nimport colors from '../../global-styles';\nimport { styles, useNSSelectStyle } from './styles';\n\nfunction NSSelect({\n  values,\n  items,\n  label,\n  update,\n  code = 'value',\n  value = 'value',\n  infoKey,\n  width,\n  maxWidth = '400px',\n  outterWidth,\n  outerHeight,\n  padding,\n  disableLabel,\n  selectOverride,\n  placeholderText,\n  required = false,\n  translate = '14px, 10px',\n  className,\n  onBlur = () => {},\n}) {\n  const classes = styles(width, maxWidth)();\n  const labelFormatted = label.replace(/ /g, '-').toLowerCase();\n\n  const menuItems = items.map(item => {\n    if (item[infoKey]) {\n      return (\n        <MenuItem key={item[code]} value={item[code]}>\n          {item[value]}\n          <strong className={classes.infoKey}>({item[infoKey]})</strong>\n        </MenuItem>\n      );\n    }\n    return (\n      <MenuItem key={item[code]} value={item[code]}>\n        {item[value]}\n      </MenuItem>\n    );\n  });\n\n  const ComponentStyle = styled.div`\n    .MuiInputLabel-outlined.MuiInputLabel-shrink {\n      transform: translate(${translate}) scale(0.75);\n    }\n    .MuiOutlinedInput-root:hover .MuiOutlinedInput-notchedOutline {\n      border-color: ${colors.STATE.active};\n    }\n    .MuiOutlinedInput-notchedOutline {\n      border-color: ${colors.INTERFACE.ui4};\n    }\n    .MuiSvgIcon-root {\n      color: ${colors.TEXT.light};\n    }\n    .MuiInputLabel-outlined {\n      color: ${colors.TEXT.light};\n      width: 77%;\n    }\n    .MuiOutlinedInput-root {\n      padding: 1px;\n    }\n    .MuiInputLabel-outlined {\n      ${disableLabel ? 'display: none;' : ''}\n    }\n  `;\n\n  return (\n    <ComponentStyle>\n      <FormControl\n        variant=\"outlined\"\n        className={classes.size}\n        required={required}\n      >\n        {!placeholderText && (\n          <InputLabel htmlFor={`${labelFormatted}-selector`}>\n            {label}\n          </InputLabel>\n        )}\n        <Select\n          value={values.item || values}\n          onChange={update}\n          onBlur={onBlur}\n          classes={selectOverride}\n          className={className}\n          displayEmpty={placeholderText}\n          inputProps={{\n            classes: useNSSelectStyle(outterWidth, outerHeight, padding)(),\n          }}\n          input={\n            <OutlinedInput\n              name={labelFormatted}\n              id={`${labelFormatted}-selector`}\n            />\n          }\n        >\n          {placeholderText && <MenuItem value=\"\">{label}</MenuItem>}\n          {menuItems}\n        </Select>\n      </FormControl>\n    </ComponentStyle>\n  );\n}\n\nNSSelect.propTypes = {\n  values: PropTypes.oneOfType([PropTypes.object, PropTypes.string]).isRequired,\n  items: PropTypes.array.isRequired,\n  update: PropTypes.func.isRequired,\n  label: PropTypes.string.isRequired,\n  className: PropTypes.string,\n  onBlur: PropTypes.func,\n  required: PropTypes.bool,\n  code: PropTypes.string,\n  value: PropTypes.string,\n  placeholderText: PropTypes.bool,\n  disableLabel: PropTypes.bool,\n  infoKey: PropTypes.string,\n  width: PropTypes.string,\n  maxWidth: PropTypes.string,\n  outterWidth: PropTypes.string,\n  outerHeight: PropTypes.string,\n  padding: PropTypes.string,\n  translate: PropTypes.string,\n  selectOverride: PropTypes.object,\n};\n\nexport default NSSelect;\n"]},"metadata":{},"sourceType":"module"}