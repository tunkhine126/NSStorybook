{"ast":null,"code":"import _objectWithoutProperties from \"/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/src/components/TextLink/index.js\";\n\n/**\n *\n * TextLink\n *\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport { textLinkStyles, btnStyles } from './styles';\n\nfunction TextLink(_ref) {\n  let {\n    content,\n    className,\n    disable,\n    bold = true\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"content\", \"className\", \"disable\", \"bold\"]);\n\n  const classes = textLinkStyles();\n  return React.createElement(Button, Object.assign({\n    classes: btnStyles(bold)(),\n    disabled: disable,\n    color: \"primary\",\n    className: className || classes.btn\n  }, rest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), content);\n}\n\nTextLink.displayName = \"TextLink\";\nTextLink.propTypes = {\n  content: PropTypes.oneOfType([PropTypes.string, PropTypes.element]).isRequired,\n  bold: PropTypes.bool,\n  disable: PropTypes.bool,\n  className: PropTypes.any\n};\nTextLink.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"TextLink\",\n  \"props\": {\n    \"bold\": {\n      \"defaultValue\": {\n        \"value\": \"true\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"content\": {\n      \"type\": {\n        \"name\": \"union\",\n        \"value\": [{\n          \"name\": \"string\"\n        }, {\n          \"name\": \"element\"\n        }]\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"disable\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"className\": {\n      \"type\": {\n        \"name\": \"any\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\nexport default TextLink;\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/components/TextLink/index.js\"] = {\n    name: \"TextLink\",\n    docgenInfo: TextLink.__docgenInfo,\n    path: \"src/components/TextLink/index.js\"\n  };\n}","map":{"version":3,"sources":["/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/src/components/TextLink/index.js"],"names":["React","PropTypes","Button","textLinkStyles","btnStyles","TextLink","content","className","disable","bold","rest","classes","btn","propTypes","oneOfType","string","element","isRequired","bool","any"],"mappings":";;;AAAA;;;;;AAMA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,SAASC,cAAT,EAAyBC,SAAzB,QAA0C,UAA1C;;AAEA,SAASC,QAAT,OAAyE;AAAA,MAAvD;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,SAAX;AAAsBC,IAAAA,OAAtB;AAA+BC,IAAAA,IAAI,GAAG;AAAtC,GAAuD;AAAA,MAARC,IAAQ;;AACvE,QAAMC,OAAO,GAAGR,cAAc,EAA9B;AACA,SACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAEC,SAAS,CAACK,IAAD,CAAT,EADX;AAEE,IAAA,QAAQ,EAAED,OAFZ;AAGE,IAAA,KAAK,EAAC,SAHR;AAIE,IAAA,SAAS,EAAED,SAAS,IAAII,OAAO,CAACC;AAJlC,KAKMF,IALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOGJ,OAPH,CADF;AAWD;;AAbQD,Q;AAeTA,QAAQ,CAACQ,SAAT,GAAqB;AACnBP,EAAAA,OAAO,EAAEL,SAAS,CAACa,SAAV,CAAoB,CAACb,SAAS,CAACc,MAAX,EAAmBd,SAAS,CAACe,OAA7B,CAApB,EACNC,UAFgB;AAGnBR,EAAAA,IAAI,EAAER,SAAS,CAACiB,IAHG;AAInBV,EAAAA,OAAO,EAAEP,SAAS,CAACiB,IAJA;AAKnBX,EAAAA,SAAS,EAAEN,SAAS,CAACkB;AALF,CAArB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQA,eAAed,QAAf","sourcesContent":["/**\n *\n * TextLink\n *\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from '@material-ui/core/Button';\n\nimport { textLinkStyles, btnStyles } from './styles';\n\nfunction TextLink({ content, className, disable, bold = true, ...rest }) {\n  const classes = textLinkStyles();\n  return (\n    <Button\n      classes={btnStyles(bold)()}\n      disabled={disable}\n      color=\"primary\"\n      className={className || classes.btn}\n      {...rest}\n    >\n      {content}\n    </Button>\n  );\n}\n\nTextLink.propTypes = {\n  content: PropTypes.oneOfType([PropTypes.string, PropTypes.element])\n    .isRequired,\n  bold: PropTypes.bool,\n  disable: PropTypes.bool,\n  className: PropTypes.any,\n};\n\nexport default TextLink;\n"]},"metadata":{},"sourceType":"module"}