{"ast":null,"code":"var _jsxFileName = \"/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/src/components/ViewHeader/index.js\";\n\n/**\n *\n * ViewHeader\n *\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet';\nimport Typography from '@material-ui/core/Typography';\nimport { viewHeaderStyles } from './styles';\n\nfunction ViewHeader({\n  component,\n  body\n}) {\n  const classes = viewHeaderStyles();\n  return React.createElement(React.Fragment, null, React.createElement(Helmet, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, `New Story - ${component}`), React.createElement(\"meta\", {\n    name: \"description\",\n    content: component,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  })), React.createElement(Typography, {\n    variant: \"h1\",\n    className: classes.header,\n    component: \"h2\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, body));\n}\n\nViewHeader.propTypes = {\n  component: PropTypes.string.isRequired,\n  body: PropTypes.oneOfType([PropTypes.element, PropTypes.string]).isRequired\n};\nViewHeader.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"ViewHeader\",\n  \"props\": {\n    \"component\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"body\": {\n      \"type\": {\n        \"name\": \"union\",\n        \"value\": [{\n          \"name\": \"element\"\n        }, {\n          \"name\": \"string\"\n        }]\n      },\n      \"required\": true,\n      \"description\": \"\"\n    }\n  }\n};\nexport default ViewHeader;\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/components/ViewHeader/index.js\"] = {\n    name: \"ViewHeader\",\n    docgenInfo: ViewHeader.__docgenInfo,\n    path: \"src/components/ViewHeader/index.js\"\n  };\n}","map":{"version":3,"sources":["/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/src/components/ViewHeader/index.js"],"names":["React","PropTypes","Helmet","Typography","viewHeaderStyles","ViewHeader","component","body","classes","header","propTypes","string","isRequired","oneOfType","element"],"mappings":";;AAAA;;;;;AAMA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,QAAuB,cAAvB;AAEA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,gBAAT,QAAiC,UAAjC;;AAEA,SAASC,UAAT,CAAoB;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAApB,EAAyC;AACvC,QAAMC,OAAO,GAAGJ,gBAAgB,EAAhC;AAEA,SACE,0CACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAS,eAAcE,SAAU,EAAjC,CADF,EAEE;AAAM,IAAA,IAAI,EAAC,aAAX;AAAyB,IAAA,OAAO,EAAEA,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAKE,oBAAC,UAAD;AACE,IAAA,OAAO,EAAC,IADV;AAEE,IAAA,SAAS,EAAEE,OAAO,CAACC,MAFrB;AAGE,IAAA,SAAS,EAAC,IAHZ;AAIE,IAAA,YAAY,MAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGF,IANH,CALF,CADF;AAgBD;;AAEDF,UAAU,CAACK,SAAX,GAAuB;AACrBJ,EAAAA,SAAS,EAAEL,SAAS,CAACU,MAAV,CAAiBC,UADP;AAErBL,EAAAA,IAAI,EAAEN,SAAS,CAACY,SAAV,CAAoB,CAACZ,SAAS,CAACa,OAAX,EAAoBb,SAAS,CAACU,MAA9B,CAApB,EAA2DC;AAF5C,CAAvB;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,eAAeP,UAAf","sourcesContent":["/**\n *\n * ViewHeader\n *\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet';\n\nimport Typography from '@material-ui/core/Typography';\nimport { viewHeaderStyles } from './styles';\n\nfunction ViewHeader({ component, body }) {\n  const classes = viewHeaderStyles();\n\n  return (\n    <>\n      <Helmet>\n        <title>{`New Story - ${component}`}</title>\n        <meta name=\"description\" content={component} />\n      </Helmet>\n      <Typography\n        variant=\"h1\"\n        className={classes.header}\n        component=\"h2\"\n        gutterBottom\n      >\n        {body}\n      </Typography>\n    </>\n  );\n}\n\nViewHeader.propTypes = {\n  component: PropTypes.string.isRequired,\n  body: PropTypes.oneOfType([PropTypes.element, PropTypes.string]).isRequired,\n};\n\nexport default ViewHeader;\n"]},"metadata":{},"sourceType":"module"}