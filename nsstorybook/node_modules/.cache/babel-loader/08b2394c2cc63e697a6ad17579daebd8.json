{"ast":null,"code":"import _objectWithoutProperties from \"/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/src/stories/1-Button.stories.js\";\nimport React, { Component } from 'react';\nimport { action } from '@storybook/addon-actions';\nimport { BrowserRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport NSButton from '../components/NSButton/index';\nimport HeaderButton from '../components/HeaderButton/index';\nimport { headerButtonStyles, SelectBtnStyle } from '../components/HeaderButton/styles';\nimport colors from '../../src/global-styles';\nimport { button, Typography, Collapse, IconButton, SnackbarContent, Checkbox, Input } from '@material-ui/core';\nimport { Edit, MoreHoriz, CheckCircleIcon, ErrorIcon, InfoIcon, WarningIcon, CheckBox } from '@material-ui/icons';\nimport { NSButtonStyles, btnLinkStyles } from '../components/NSButton/styles';\nimport { createMuiTheme, makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx'; // import { FormattedMessage } from 'react-intl';\n// import TextLink from '../components/TextLink';\n// import globalMessages from 'messages';\n\nexport default {\n  title: 'Buttons',\n  component: NSButton,\n  button\n};\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"h3\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56\n  },\n  __self: this\n}, \"Material-UI Buttons\");\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 65\n  },\n  __self: this\n}, \"Contained\");\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"span\", {\n  class: \"MuiButton-label\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 71\n  },\n  __self: this\n}, \"Smol\");\n\nvar _ref5 =\n/*#__PURE__*/\nReact.createElement(\"span\", {\n  class: \"MuiButton-label\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 77\n  },\n  __self: this\n}, \"Med\");\n\nvar _ref6 =\n/*#__PURE__*/\nReact.createElement(\"span\", {\n  class: \"MuiButton-label\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 83\n  },\n  __self: this\n}, \"Thicc\");\n\nvar _ref7 =\n/*#__PURE__*/\nReact.createElement(\"h3\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 86\n  },\n  __self: this\n}, \"NS Base Buttons\");\n\nvar _ref8 =\n/*#__PURE__*/\nReact.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 93\n  },\n  __self: this\n}, \"NS Btn V1\");\n\nvar _ref9 =\n/*#__PURE__*/\nReact.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 101\n  },\n  __self: this\n}, \"NS Btn V2\");\n\nvar _ref10 =\n/*#__PURE__*/\nReact.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 109\n  },\n  __self: this\n}, \"NS BTN V3\");\n\nvar _ref11 =\n/*#__PURE__*/\nReact.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 115\n  },\n  __self: this\n}, \"Disabled\");\n\nvar _ref12 =\n/*#__PURE__*/\nReact.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 124\n  },\n  __self: this\n}, \"Txt Link Btn\");\n\nvar _ref13 =\n/*#__PURE__*/\nReact.createElement(\"h3\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 128\n  },\n  __self: this\n}, \"Buttons with Icons\");\n\nvar _ref14 =\n/*#__PURE__*/\nReact.createElement(\"h3\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 158\n  },\n  __self: this\n}, \"Header Button\");\n\nexport function ButtonContainer(_ref) {\n  let {\n    children,\n    componentClasses,\n    version,\n    textBtn,\n    deleteLink,\n    formId,\n    disabled,\n    variant,\n    className,\n    showUndo = false,\n    bgColor,\n    padding,\n    menu,\n    click\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"children\", \"componentClasses\", \"version\", \"textBtn\", \"deleteLink\", \"formId\", \"disabled\", \"variant\", \"className\", \"showUndo\", \"bgColor\", \"padding\", \"menu\", \"click\"]);\n\n  const classes = NSButtonStyles();\n  headerButtonStyles(bgColor, padding)();\n  const danger = version === 3 ? classes.negative : classes.primary;\n  const type = version === 2 ? classes.secondary : danger;\n  let element;\n  const variantIcon = {\n    success: CheckCircleIcon,\n    warning: WarningIcon,\n    error: ErrorIcon,\n    info: InfoIcon\n  };\n  return React.createElement(BrowserRouter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, _ref2, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"MuiButton\",\n    onClick: action(\"I've been clicked\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Base\"), \"\\xA0\", React.createElement(\"button\", {\n    className: \"MuiButton-contained\",\n    onClick: action(\"I've been clicked!\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, _ref3), \"\\xA0\", React.createElement(\"button\", {\n    className: \"MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-containedSizeSmall MuiButton-sizeSmall\",\n    onClick: action(\"I've been clicked\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, _ref4), \"\\xA0\", React.createElement(\"button\", {\n    className: \"MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-containedSizeMedium MuiButton-sizeMedium MuiButton-containedSecondary\",\n    onClick: action(\"I've been clicked\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, _ref5), \"\\xA0\", React.createElement(\"button\", {\n    className: \"MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-containedSizeLarge MuiButton-sizeLarge MuiButton-containedPrimary\",\n    onClick: action(\"I've been clicked\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, _ref6)), _ref7, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(NSButton, {\n    id: \"Base\",\n    version: 1,\n    componentClasses: clsx(classes.btns, classes.margin),\n    onClick: action(\"I've been clicked\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, _ref8), \"\\xA0\", React.createElement(NSButton, {\n    id: \"Forward\",\n    version: 2,\n    componentClasses: clsx(classes.btns, classes.margin),\n    onClick: action(\"I've been clicked\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, _ref9), \"\\xA0\", React.createElement(NSButton, {\n    id: \"Danger\",\n    version: 3,\n    componentClasses: clsx(classes.btns, classes.margin),\n    onClick: action(\"I've been clicked\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, _ref10), \"\\xA0\", React.createElement(NSButton, {\n    componentClasses: classes.tsReorder,\n    variant: \"disabled\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, _ref11), \"\\xA0\", React.createElement(NSButton, {\n    textBtn: true,\n    variant: \"contained\",\n    size: \"small\",\n    onClick: action(\"I've been clicked\"),\n    componentClasses: classes.tsDragNDropCancelBtn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, _ref12), \"\\xA0\"), _ref13, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(NSButton, {\n    version: 2,\n    onClick: action(\"I've been clicked\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(React.Fragment, null, React.createElement(Edit, {\n    fontSize: \"small\",\n    className: classes.editBtn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    className: classes.editText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }), \"\\xA0 Edit\")), \"\\xA0\", React.createElement(IconButton, {\n    size: \"medium\",\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: action(\"I've been clicked\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(MoreHoriz, {\n    className: classes.horiz,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  })), \"\\xA0\", React.createElement(IconButton, {\n    size: \"small\",\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: action(\"I've been checked\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(Checkbox, {\n    className: classes.listItemChkbox,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }))), _ref14, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(HeaderButton, {\n    version: 1,\n    className: clsx(classes.customInput, 'header-button'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, \"Header V1\"), React.createElement(HeaderButton, {\n    version: 2,\n    className: clsx(classes.customInput, 'header-button'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, \"Header V2\"), React.createElement(HeaderButton, {\n    version: 3,\n    bgColor: colors.TEXT.medium,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, \"Header V3\"), React.createElement(HeaderButton, {\n    version: 4,\n    bgColor: colors.TEXT.small,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, \"Header V4\")));\n}\nButtonContainer.displayName = \"ButtonContainer\";\nButtonContainer.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"ButtonContainer\",\n  \"props\": {\n    \"showUndo\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"required\": false\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/stories/1-Button.stories.js\"] = {\n    name: \"ButtonContainer\",\n    docgenInfo: ButtonContainer.__docgenInfo,\n    path: \"src/stories/1-Button.stories.js\"\n  };\n}","map":{"version":3,"sources":["/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/src/stories/1-Button.stories.js"],"names":["React","Component","action","BrowserRouter","PropTypes","NSButton","HeaderButton","headerButtonStyles","SelectBtnStyle","colors","button","Typography","Collapse","IconButton","SnackbarContent","Checkbox","Input","Edit","MoreHoriz","CheckCircleIcon","ErrorIcon","InfoIcon","WarningIcon","CheckBox","NSButtonStyles","btnLinkStyles","createMuiTheme","makeStyles","clsx","title","component","ButtonContainer","children","componentClasses","version","textBtn","deleteLink","formId","disabled","variant","className","showUndo","bgColor","padding","menu","click","rest","classes","danger","negative","primary","type","secondary","element","variantIcon","success","warning","error","info","btns","margin","tsReorder","tsDragNDropCancelBtn","editBtn","editText","horiz","listItemChkbox","customInput","TEXT","medium","small"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { action } from '@storybook/addon-actions';\nimport { BrowserRouter } from 'react-router-dom'\nimport PropTypes from 'prop-types';\nimport NSButton from '../components/NSButton/index'\nimport HeaderButton from '../components/HeaderButton/index'\nimport { headerButtonStyles, SelectBtnStyle } from '../components/HeaderButton/styles'\nimport colors from '../../src/global-styles';\nimport { button, Typography, Collapse, IconButton, SnackbarContent, Checkbox, Input } from '@material-ui/core';\nimport { Edit, MoreHoriz, CheckCircleIcon, ErrorIcon, InfoIcon, WarningIcon, CheckBox } from '@material-ui/icons';\nimport { NSButtonStyles, btnLinkStyles } from '../components/NSButton/styles'\nimport { createMuiTheme, makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\n// import { FormattedMessage } from 'react-intl';\n// import TextLink from '../components/TextLink';\n// import globalMessages from 'messages';\n\n\n\nexport default {\n  title: 'Buttons',\n  component: NSButton, button, \n};\n\nexport function ButtonContainer({\n  children,\n  componentClasses,\n  version,\n  textBtn,\n  deleteLink,\n  formId,\n  disabled,\n  variant,\n  className,\n  showUndo = false,\n  bgColor,\n  padding,\n  menu,\n  click,\n  ...rest\n}) {\n  const classes = NSButtonStyles(); headerButtonStyles(bgColor, padding)();\n  const danger = version === 3 ? classes.negative : classes.primary;\n  const type = version === 2 ? classes.secondary : danger;\n  let element;\n  \n  const variantIcon = {\n    success: CheckCircleIcon,\n    warning: WarningIcon,\n    error: ErrorIcon,\n    info: InfoIcon,\n  };\n\n  return (\n    <BrowserRouter>\n    <h3>Material-UI Buttons</h3>\n      <p>\n        <button \n          className=\"MuiButton\" \n          onClick={action(\"I've been clicked\")}>\n          Base\n        </button>\n      &nbsp;\n        <button className=\"MuiButton-contained\" onClick={action(\"I've been clicked!\")}>\n          <span>Contained</span>\n        </button>\n      &nbsp;\n        <button \n          className=\"MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-containedSizeSmall MuiButton-sizeSmall\" \n          onClick={action(\"I've been clicked\")}>\n            <span class=\"MuiButton-label\">Smol</span>\n        </button>  \n      &nbsp;\n        <button \n          className=\"MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-containedSizeMedium MuiButton-sizeMedium MuiButton-containedSecondary\" \n          onClick={action(\"I've been clicked\")}>\n            <span class=\"MuiButton-label\">Med</span>\n        </button>\n      &nbsp;\n        <button \n          className=\"MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-containedSizeLarge MuiButton-sizeLarge MuiButton-containedPrimary\" \n          onClick={action(\"I've been clicked\")}>\n            <span class=\"MuiButton-label\">Thicc</span>\n        </button>  \n      </p>\n    <h3>NS Base Buttons</h3>\n      <p>\n        <NSButton\n          id=\"Base\"\n          version={1}\n          componentClasses={clsx(classes.btns, classes.margin)}\n          onClick={action(\"I've been clicked\")}>\n          <span>NS Btn V1</span>\n        </NSButton>\n      &nbsp;\n        <NSButton\n          id=\"Forward\"\n          version={2}\n          componentClasses={clsx(classes.btns, classes.margin)}\n          onClick={action(\"I've been clicked\")}>\n          <span>NS Btn V2</span>\n        </NSButton>\n      &nbsp;\n        <NSButton\n          id=\"Danger\"\n          version={3}\n          componentClasses={clsx(classes.btns, classes.margin)}\n          onClick={action(\"I've been clicked\")}>\n          <span>NS BTN V3</span>\n        </NSButton>\n      &nbsp;\n        <NSButton                 \n          componentClasses={classes.tsReorder}\n          variant=\"disabled\">\n          <span>Disabled</span>\n        </NSButton>\n      &nbsp;\n      <NSButton\n          textBtn\n          variant=\"contained\"\n          size=\"small\"\n          onClick={action(\"I've been clicked\")}\n          componentClasses={classes.tsDragNDropCancelBtn}>\n        <span>Txt Link Btn</span>\n        </NSButton>\n      &nbsp;\n    </p>\n    <h3>Buttons with Icons</h3>\n      <p>\n      <NSButton \n        version={2}\n        onClick={action(\"I've been clicked\")}>\n        <>\n          <Edit fontSize=\"small\" className={classes.editBtn} />\n          <Typography className={classes.editText}/>\n          &nbsp; Edit\n        </>\n      </NSButton>\n    &nbsp;\n      <IconButton\n        size=\"medium\"\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={action(\"I've been clicked\")}\n        >\n          <MoreHoriz className={classes.horiz} />\n      </IconButton>\n    &nbsp;\n    <IconButton\n        size=\"small\"\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={action(\"I've been checked\")}\n        >\n          <Checkbox className={classes.listItemChkbox} />\n      </IconButton>\n    </p>\n    <h3>Header Button</h3>\n      <p>\n        <HeaderButton version={1} className={clsx(classes.customInput, 'header-button')}>\n          Header V1\n        </HeaderButton>\n        <HeaderButton version={2} className={clsx(classes.customInput, 'header-button')}>Header V2</HeaderButton>\n        <HeaderButton version={3} bgColor={colors.TEXT.medium}>Header V3</HeaderButton>\n        <HeaderButton version={4} bgColor={colors.TEXT.small}>Header V4</HeaderButton>\n      </p>\n    </BrowserRouter>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}