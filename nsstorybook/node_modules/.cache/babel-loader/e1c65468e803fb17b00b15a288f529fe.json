{"ast":null,"code":"import _objectWithoutProperties from \"/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/src/stories/1-Button.stories.js\";\nimport React from 'react';\nimport { action } from '@storybook/addon-actions';\nimport NSButton from '../components/NSButton/index';\nimport HeaderButton from '../components/HeaderButton/index';\nimport { headerButtonStyles } from '../components/HeaderButton/styles';\nimport { button, Typography, IconButton, Checkbox } from '@material-ui/core';\nimport { Edit, MoreHoriz } from '@material-ui/icons';\nimport { NSButtonStyles } from '../components/NSButton/styles';\nimport clsx from 'clsx'; // import { FormattedMessage } from 'react-intl';\n// import globalMessages from 'messages';\n\nexport default {\n  title: 'Buttons',\n  component: NSButton,\n  button\n};\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"h3\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31\n  },\n  __self: this\n}, \"Material-UI Buttons\");\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41\n  },\n  __self: this\n}, \"Contained\");\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"span\", {\n  class: \"MuiButton-label\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47\n  },\n  __self: this\n}, \"Smol\");\n\nvar _ref5 =\n/*#__PURE__*/\nReact.createElement(\"span\", {\n  class: \"MuiButton-label\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53\n  },\n  __self: this\n}, \"Med\");\n\nvar _ref6 =\n/*#__PURE__*/\nReact.createElement(\"span\", {\n  class: \"MuiButton-label\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59\n  },\n  __self: this\n}, \"Thicc\");\n\nvar _ref7 =\n/*#__PURE__*/\nReact.createElement(\"h3\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 62\n  },\n  __self: this\n}, \"NS Base Buttons\");\n\nvar _ref8 =\n/*#__PURE__*/\nReact.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 69\n  },\n  __self: this\n}, \"NS Btn V1\");\n\nvar _ref9 =\n/*#__PURE__*/\nReact.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 77\n  },\n  __self: this\n}, \"NS Btn V2\");\n\nvar _ref10 =\n/*#__PURE__*/\nReact.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 85\n  },\n  __self: this\n}, \"NS BTN V3\");\n\nvar _ref11 =\n/*#__PURE__*/\nReact.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 91\n  },\n  __self: this\n}, \"Disabled\");\n\nvar _ref12 =\n/*#__PURE__*/\nReact.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 100\n  },\n  __self: this\n}, \"Txt Link Btn\");\n\nvar _ref13 =\n/*#__PURE__*/\nReact.createElement(\"h3\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 104\n  },\n  __self: this\n}, \"Buttons with Icons\");\n\nvar _ref14 =\n/*#__PURE__*/\nReact.createElement(\"h3\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 133\n  },\n  __self: this\n}, \"Header Button\");\n\nexport function ButtonContainer(_ref) {\n  let {\n    version,\n    textBtn,\n    disabled,\n    variant,\n    bgColor,\n    padding\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"version\", \"textBtn\", \"disabled\", \"variant\", \"bgColor\", \"padding\"]);\n\n  const classes = NSButtonStyles();\n  headerButtonStyles(bgColor, padding)();\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, _ref2, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"MuiButton\",\n    onClick: action(\"I've been clicked\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Base\"), \"\\xA0\", React.createElement(\"button\", {\n    className: \"MuiButton-contained\",\n    onClick: action(\"I've been clicked!\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, _ref3), \"\\xA0\", React.createElement(\"button\", {\n    className: \"MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-containedSizeSmall MuiButton-sizeSmall\",\n    onClick: action(\"I've been clicked\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, _ref4), \"\\xA0\", React.createElement(\"button\", {\n    className: \"MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-containedSizeMedium MuiButton-sizeMedium MuiButton-containedSecondary\",\n    onClick: action(\"I've been clicked\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, _ref5), \"\\xA0\", React.createElement(\"button\", {\n    className: \"MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-containedSizeLarge MuiButton-sizeLarge MuiButton-containedPrimary\",\n    onClick: action(\"I've been clicked\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, _ref6)), _ref7, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(NSButton, {\n    id: \"Base\",\n    version: 1,\n    componentClasses: clsx(classes.btns, classes.margin),\n    onClick: action(\"I've been clicked\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, _ref8), \"\\xA0\", React.createElement(NSButton, {\n    id: \"Forward\",\n    version: 2,\n    componentClasses: clsx(classes.btns, classes.margin),\n    onClick: action(\"I've been clicked\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, _ref9), \"\\xA0\", React.createElement(NSButton, {\n    id: \"Danger\",\n    version: 3,\n    componentClasses: clsx(classes.btns, classes.margin),\n    onClick: action(\"I've been clicked\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, _ref10), \"\\xA0\", React.createElement(NSButton, {\n    componentClasses: classes.tsReorder,\n    variant: \"disabled\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, _ref11), \"\\xA0\", React.createElement(NSButton, {\n    textBtn: true,\n    variant: \"contained\",\n    size: \"small\",\n    onClick: action(\"I've been clicked\"),\n    componentClasses: classes.tsDragNDropCancelBtn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, _ref12), \"\\xA0\"), _ref13, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(NSButton, {\n    version: 2,\n    onClick: action(\"I've been clicked\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(React.Fragment, null, React.createElement(Edit, {\n    fontSize: \"small\",\n    className: classes.editBtn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    className: classes.editText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }), \"\\xA0 Edit\")), \"\\xA0\", React.createElement(IconButton, {\n    size: \"medium\",\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: action(\"I've been clicked\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(MoreHoriz, {\n    className: classes.horiz,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  })), \"\\xA0\", React.createElement(IconButton, {\n    size: \"small\",\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: action(\"I've been checked\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(Checkbox, {\n    className: classes.listItemChkbox,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }))), _ref14, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(HeaderButton, {\n    version: 1,\n    className: clsx(classes.customInput, 'header-button'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, \"Header V1\"), React.createElement(HeaderButton, {\n    version: 2,\n    className: clsx(classes.customInput),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, \"Header V2\"), React.createElement(HeaderButton, {\n    version: 3,\n    className: clsx(classes.btn),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, \"Header V3\"), React.createElement(HeaderButton, {\n    version: 4,\n    className: clsx(classes.btn),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, \"Header V4\")));\n}\nButtonContainer.displayName = \"ButtonContainer\";\nButtonContainer.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"ButtonContainer\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/stories/1-Button.stories.js\"] = {\n    name: \"ButtonContainer\",\n    docgenInfo: ButtonContainer.__docgenInfo,\n    path: \"src/stories/1-Button.stories.js\"\n  };\n}","map":{"version":3,"sources":["/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/src/stories/1-Button.stories.js"],"names":["React","action","NSButton","HeaderButton","headerButtonStyles","button","Typography","IconButton","Checkbox","Edit","MoreHoriz","NSButtonStyles","clsx","title","component","ButtonContainer","version","textBtn","disabled","variant","bgColor","padding","rest","classes","btns","margin","tsReorder","tsDragNDropCancelBtn","editBtn","editText","horiz","listItemChkbox","customInput","btn"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { action } from '@storybook/addon-actions';\nimport NSButton from '../components/NSButton/index'\nimport HeaderButton from '../components/HeaderButton/index'\nimport { headerButtonStyles } from '../components/HeaderButton/styles'\nimport { button, Typography, IconButton, Checkbox } from '@material-ui/core';\nimport { Edit, MoreHoriz } from '@material-ui/icons';\nimport { NSButtonStyles } from '../components/NSButton/styles'\nimport clsx from 'clsx';\n// import { FormattedMessage } from 'react-intl';\n// import globalMessages from 'messages';\n\nexport default {\n  title: 'Buttons',\n  component: NSButton, button, \n};\n\nexport function ButtonContainer({\n  version,\n  textBtn,\n  disabled,\n  variant,\n  bgColor,\n  padding,\n  ...rest\n}) {\n  const classes = NSButtonStyles(); headerButtonStyles(bgColor, padding)();\n\n  return (\n    <div>\n    <h3>Material-UI Buttons</h3>\n      <p>\n        <button \n          className=\"MuiButton\" \n          onClick={action(\"I've been clicked\")}>\n          Base\n          {/* <FormattedMessage {...appMessages.cancel}/> */}\n        </button>\n      &nbsp;\n        <button className=\"MuiButton-contained\" onClick={action(\"I've been clicked!\")}>\n          <span>Contained</span>\n        </button>\n      &nbsp;\n        <button \n          className=\"MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-containedSizeSmall MuiButton-sizeSmall\" \n          onClick={action(\"I've been clicked\")}>\n            <span class=\"MuiButton-label\">Smol</span>\n        </button>  \n      &nbsp;\n        <button \n          className=\"MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-containedSizeMedium MuiButton-sizeMedium MuiButton-containedSecondary\" \n          onClick={action(\"I've been clicked\")}>\n            <span class=\"MuiButton-label\">Med</span>\n        </button>\n      &nbsp;\n        <button \n          className=\"MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-containedSizeLarge MuiButton-sizeLarge MuiButton-containedPrimary\" \n          onClick={action(\"I've been clicked\")}>\n            <span class=\"MuiButton-label\">Thicc</span>\n        </button>  \n      </p>\n    <h3>NS Base Buttons</h3>\n      <p>\n        <NSButton\n          id=\"Base\"\n          version={1}\n          componentClasses={clsx(classes.btns, classes.margin)}\n          onClick={action(\"I've been clicked\")}>\n          <span>NS Btn V1</span>\n        </NSButton>\n      &nbsp;\n        <NSButton\n          id=\"Forward\"\n          version={2}\n          componentClasses={clsx(classes.btns, classes.margin)}\n          onClick={action(\"I've been clicked\")}>\n          <span>NS Btn V2</span>\n        </NSButton>\n      &nbsp;\n        <NSButton\n          id=\"Danger\"\n          version={3}\n          componentClasses={clsx(classes.btns, classes.margin)}\n          onClick={action(\"I've been clicked\")}>\n          <span>NS BTN V3</span>\n        </NSButton>\n      &nbsp;\n        <NSButton                 \n          componentClasses={classes.tsReorder}\n          variant=\"disabled\">\n          <span>Disabled</span>\n        </NSButton>\n      &nbsp;\n      <NSButton\n          textBtn\n          variant=\"contained\"\n          size=\"small\"\n          onClick={action(\"I've been clicked\")}\n          componentClasses={classes.tsDragNDropCancelBtn}>\n        <span>Txt Link Btn</span>\n        </NSButton>\n      &nbsp;\n    </p>\n    <h3>Buttons with Icons</h3>\n      <p>\n      <NSButton \n        version={2}\n        onClick={action(\"I've been clicked\")}>\n        <>\n          <Edit fontSize=\"small\" className={classes.editBtn} />\n          <Typography className={classes.editText}/>\n          &nbsp; Edit\n        </>\n      </NSButton>\n    &nbsp;\n      <IconButton\n        size=\"medium\"\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={action(\"I've been clicked\")}\n        >\n          <MoreHoriz className={classes.horiz} />\n      </IconButton>\n    &nbsp;\n    <IconButton\n        size=\"small\"\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={action(\"I've been checked\")}>\n          <Checkbox className={classes.listItemChkbox} />\n      </IconButton>\n    </p>\n    <h3>Header Button</h3>\n      <p>\n        <HeaderButton version={1} className={clsx(classes.customInput, 'header-button')}>\n          Header V1\n        </HeaderButton>\n        <HeaderButton version={2} className={clsx(classes.customInput)}>Header V2</HeaderButton>\n        <HeaderButton version={3} className={clsx(classes.btn)}>Header V3</HeaderButton>\n        <HeaderButton version={4} className={clsx(classes.btn)}>Header V4</HeaderButton>\n      </p>\n    </div>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}