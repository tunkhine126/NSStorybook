{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator\";\nimport _objectSpread from \"/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/src/stories/9-InlineToaster.stories.js\";\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport InlineToaster from '../components/InlineToaster/styles';\nimport { IntlProvider } from 'react-intl';\nimport { DEFAULT_LOCALE } from '../i18n';\nimport { action } from '@storybook/addon-actions'; // import { RecipientViewContext } from '../components/RecipientList/RecipientView/index';\n\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { InlineToasterWrapper, inlineToasterStyle } from '../components/InlineToaster/styles';\nexport default {\n  title: 'Inline Toaster',\n  component: 'InlineToaster'\n};\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"h3\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59\n  },\n  __self: this\n}, \"Inline Toaster\");\n\nexport function Toaster(_ref) {\n  let {\n    intl,\n    className,\n    message,\n    handleUndo,\n    variant,\n    timer = 4500,\n    clearToaster,\n    showUndo = false\n  } = _ref,\n      other = _objectWithoutProperties(_ref, [\"intl\", \"className\", \"message\", \"handleUndo\", \"variant\", \"timer\", \"clearToaster\", \"showUndo\"]);\n\n  const variantIcon = {\n    success: CheckCircleIcon,\n    warning: WarningIcon,\n    error: ErrorIcon,\n    info: InfoIcon\n  };\n  const classes = inlineToasterStyle();\n  const Icon = variantIcon[variant];\n  const [show, setShow] = useState(true);\n\n  const toasterDefault = state => _objectSpread({}, state, {\n    show: false\n  });\n\n  const timeout = setTimeout(() => {\n    setShow(false);\n    clearToaster(toasterDefault);\n  }, timer);\n  useEffect(() => () => {\n    // Prevents memory leak\n    setShow(false);\n    clearTimeout(timeout);\n    clearToaster(toasterDefault);\n  });\n  return React.createElement(BrowserRouter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, _ref2, show & React.createElement(InlineToaster, {\n    clearToaster: () => {},\n    variant: \"warning\",\n    timer: 0,\n    message: \"test\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })));\n}\nToaster.displayName = \"Toaster\";\nToaster.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Toaster\",\n  \"props\": {\n    \"timer\": {\n      \"defaultValue\": {\n        \"value\": \"4500\",\n        \"computed\": false\n      },\n      \"required\": false\n    },\n    \"showUndo\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"required\": false\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/stories/9-InlineToaster.stories.js\"] = {\n    name: \"Toaster\",\n    docgenInfo: Toaster.__docgenInfo,\n    path: \"src/stories/9-InlineToaster.stories.js\"\n  };\n}","map":{"version":3,"sources":["/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/src/stories/9-InlineToaster.stories.js"],"names":["React","useState","useEffect","BrowserRouter","InlineToaster","IntlProvider","DEFAULT_LOCALE","action","CheckCircleIcon","ErrorIcon","InfoIcon","SnackbarContent","WarningIcon","InlineToasterWrapper","inlineToasterStyle","title","component","Toaster","intl","className","message","handleUndo","variant","timer","clearToaster","showUndo","other","variantIcon","success","warning","error","info","classes","Icon","show","setShow","toasterDefault","state","timeout","setTimeout","clearTimeout"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAOC,aAAP,MAA0B,oCAA1B;AACA,SAASC,YAAT,QAA6B,YAA7B;AACA,SAASC,cAAT,QAA+B,SAA/B;AACA,SAASC,MAAT,QAAuB,0BAAvB,C,CACA;;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,SAASC,oBAAT,EAA+BC,kBAA/B,QAAyD,oCAAzD;AAEA,eAAe;AACbC,EAAAA,KAAK,EAAE,gBADM;AAEbC,EAAAA,SAAS,EAAE;AAFE,CAAf;;;;AA4CQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oB;;AAvCR,OAAO,SAASC,OAAT,OAUJ;AAAA,MAVqB;AACtBC,IAAAA,IADsB;AAEtBC,IAAAA,SAFsB;AAGtBC,IAAAA,OAHsB;AAItBC,IAAAA,UAJsB;AAKtBC,IAAAA,OALsB;AAMtBC,IAAAA,KAAK,GAAG,IANc;AAOtBC,IAAAA,YAPsB;AAQtBC,IAAAA,QAAQ,GAAG;AARW,GAUrB;AAAA,MADEC,KACF;;AAED,QAAMC,WAAW,GAAG;AAClBC,IAAAA,OAAO,EAAEpB,eADS;AAElBqB,IAAAA,OAAO,EAAEjB,WAFS;AAGlBkB,IAAAA,KAAK,EAAErB,SAHW;AAIlBsB,IAAAA,IAAI,EAAErB;AAJY,GAApB;AAOA,QAAMsB,OAAO,GAAGlB,kBAAkB,EAAlC;AACA,QAAMmB,IAAI,GAAGN,WAAW,CAACL,OAAD,CAAxB;AACA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBlC,QAAQ,CAAC,IAAD,CAAhC;;AACA,QAAMmC,cAAc,GAAGC,KAAK,sBAAUA,KAAV;AAAiBH,IAAAA,IAAI,EAAE;AAAvB,IAA5B;;AAEA,QAAMI,OAAO,GAAGC,UAAU,CAAC,MAAM;AAC/BJ,IAAAA,OAAO,CAAC,KAAD,CAAP;AACAX,IAAAA,YAAY,CAACY,cAAD,CAAZ;AACD,GAHyB,EAGvBb,KAHuB,CAA1B;AAKArB,EAAAA,SAAS,CAAC,MAAM,MAAM;AACpB;AACAiC,IAAAA,OAAO,CAAC,KAAD,CAAP;AACAK,IAAAA,YAAY,CAACF,OAAD,CAAZ;AACAd,IAAAA,YAAY,CAACY,cAAD,CAAZ;AACD,GALQ,CAAT;AAOA,SACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAEKF,IAAI,GACH,oBAAC,aAAD;AACE,IAAA,YAAY,EAAE,MAAM,CAAE,CADxB;AAEE,IAAA,OAAO,EAAC,SAFV;AAGE,IAAA,KAAK,EAAE,CAHT;AAIE,IAAA,OAAO,EAAC,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHN,CADF,CADF;AAeD;AAnDejB,O","sourcesContent":["import React, { useState, useEffect} from 'react';\nimport { BrowserRouter } from 'react-router-dom'\nimport InlineToaster from '../components/InlineToaster/styles'\nimport { IntlProvider } from 'react-intl';\nimport { DEFAULT_LOCALE } from '../i18n';\nimport { action } from '@storybook/addon-actions';\n// import { RecipientViewContext } from '../components/RecipientList/RecipientView/index';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { InlineToasterWrapper, inlineToasterStyle } from '../components/InlineToaster/styles';\n\nexport default {\n  title: 'Inline Toaster',\n  component: 'InlineToaster'\n}\n\nexport function Toaster({\n  intl,\n  className,\n  message,\n  handleUndo,\n  variant,\n  timer = 4500,\n  clearToaster,\n  showUndo = false,\n  ...other\n}) {\n\n  const variantIcon = {\n    success: CheckCircleIcon,\n    warning: WarningIcon,\n    error: ErrorIcon,\n    info: InfoIcon,\n  };\n\n  const classes = inlineToasterStyle();\n  const Icon = variantIcon[variant];\n  const [show, setShow] = useState(true);\n  const toasterDefault = state => ({ ...state, show: false });\n\n  const timeout = setTimeout(() => {\n    setShow(false);\n    clearToaster(toasterDefault);\n  }, timer);\n\n  useEffect(() => () => {\n    // Prevents memory leak\n    setShow(false);\n    clearTimeout(timeout);\n    clearToaster(toasterDefault);\n  });\n\n  return (\n    <BrowserRouter>\n      <div>\n        <h3>Inline Toaster</h3>\n          {show &\n            <InlineToaster\n              clearToaster={() => {}}\n              variant=\"warning\"\n              timer={0}\n              message=\"test\"\n            />\n          }\n      </div>\n    </BrowserRouter>\n  );\n}\n\n// className=\"success-toaster\"\n// message=\"Testing\"\n// showUndo\n// clearToaster=\"testing\"\n// handleUndo=\"testing\""]},"metadata":{},"sourceType":"module"}