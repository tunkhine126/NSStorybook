{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator\";\nimport _objectWithoutProperties from \"/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/src/components/RecipientList/RecipientView/Widget/columnContent.js\";\n\n/**\n *\n * ColumnContent\n *\n */\nimport React, { useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { injectIntl, intlShape } from 'react-intl';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport EditIcon from '@material-ui/icons/Edit';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport NSButton from 'components/shared/NSButton';\nimport InlineToaster from 'components/shared/InlineToaster';\nimport moment from 'moment';\nimport globalMessage from 'messages';\nimport Widget from './widget';\nimport { recipientListStyles } from '../../styles';\nimport { RecipientViewContext } from '../context';\nimport FieldHistory from './fieldHistory';\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(Grid, {\n  item: true,\n  container: true,\n  direction: \"column\",\n  justify: \"center\",\n  alignItems: \"center\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 111\n  },\n  __self: this\n}, React.createElement(CircularProgress, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 118\n  },\n  __self: this\n}));\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(EditIcon, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 163\n  },\n  __self: this\n});\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(AccessTimeIcon, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 174\n  },\n  __self: this\n});\n\nfunction ColumnContent(_ref) {\n  let {\n    intl,\n    header,\n    data,\n    customClasses,\n    dynamic,\n    handleEditMode,\n    recipientUuid,\n    field\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"intl\", \"header\", \"data\", \"customClasses\", \"dynamic\", \"handleEditMode\", \"recipientUuid\", \"field\"]);\n\n  const classes = recipientListStyles();\n  const {\n    toasterProps: {\n      toaster,\n      setToaster\n    },\n    saveProps: {\n      saveState\n    }\n  } = useContext(RecipientViewContext);\n  const showToaster = toaster.show && toaster.field === field && toaster.recipientUuid === recipientUuid;\n  const loading = saveState.isLoading && saveState.recipientUuid === recipientUuid && saveState.field === field;\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  }; // TODO: Finish this feature\n\n\n  const fieldHistory = [{\n    timestamp: '2019-10-01T14:55:06.789Z',\n    value: 'Eddie Dozier',\n    user_uuid: '77c7702c-a4bc-11e9-bb06-22000a96ad48',\n    user_name: 'Eddie Dozier'\n  }, {\n    timestamp: '2019-10-02T14:28:19.535Z',\n    value: 'Jimmy Hindrix',\n    user_uuid: '77c7702c-a4bc-11e9-bb06-22000a96ad48',\n    user_name: 'Eddie Dozier'\n  }, {\n    timestamp: '2019-10-03T14:28:03.317Z',\n    value: 'Maxwell',\n    user_uuid: '77c7702c-a4bc-11e9-bb06-22000a96ad48',\n    user_name: 'Eddie Dozier'\n  }].map(({\n    timestamp,\n    value,\n    user_name: userName\n  }, idx, arr) => React.createElement(FieldHistory, {\n    key: idx,\n    date: moment(timestamp).format('MMM DD, YYYY hh:mm:ss').toLocaleString(),\n    value: value,\n    user: userName,\n    currentVersion: idx === 0,\n    lastItem: arr.length - 1 === idx,\n    field: header,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }));\n  return React.createElement(Grid, Object.assign({}, rest, {\n    container: true,\n    className: customClasses,\n    direction: \"row\",\n    justify: \"space-between\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }), loading ? _ref2 : React.createElement(React.Fragment, null, React.createElement(Grid, {\n    item: true,\n    xs: 9,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    className: clsx(classes.captionSpacing),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"caption\",\n    className: classes.caption,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, header)), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, typeof data === 'string' ? React.createElement(Typography, {\n    variant: \"body2\",\n    className: classes.contentBody,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, data) : data)), dynamic && React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    container: true,\n    direction: \"row\",\n    justify: \"flex-end\",\n    alignItems: \"center\",\n    className: clsx('column-action-btns', classes.columnActionBtns),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, !toaster.show && React.createElement(Grid, {\n    item: true,\n    container: true,\n    direction: \"column\",\n    justify: \"flex-end\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    component: \"span\",\n    className: clsx(classes.editBtn),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"edit-recipient\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(NSButton, {\n    version: 2,\n    onClick: () => handleEditMode(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, _ref3))), React.createElement(Grid, {\n    item: true,\n    component: \"span\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"access-time\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, React.createElement(NSButton, {\n    onClick: handleOpen,\n    id: `${field}_${recipientUuid}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, _ref4))), React.createElement(Modal, {\n    \"aria-labelledby\": `${field}_${recipientUuid}`,\n    \"aria-describedby\": `${field}_${recipientUuid}`,\n    open: open,\n    className: classes.modal,\n    onClose: handleClose,\n    closeAfterTransition: true,\n    BackdropComponent: Backdrop,\n    BackdropProps: {\n      timeout: 400\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, React.createElement(Fade, {\n    in: open,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.columnPaper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, React.createElement(Widget, {\n    header: `${intl.formatMessage(globalMessage.fieldHistory)}: ${header}`,\n    body: React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"center\",\n      alignItems: \"flex-start\",\n      className: classes.fieldHistory,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, fieldHistory),\n    message: \"closeWindow\",\n    buttonPosition: \"end\",\n    btnHandler: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }))))), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, showToaster && React.createElement(InlineToaster, {\n    variant: \"success\",\n    className: \"success-toaster\",\n    message: intl.formatMessage(globalMessage.saved),\n    showUndo: true,\n    clearToaster: setToaster,\n    handleUndo: toaster.undoHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  })))));\n}\n\nColumnContent.displayName = \"ColumnContent\";\nColumnContent.propTypes = {\n  intl: intlShape.isRequired,\n  header: PropTypes.oneOfType([PropTypes.string, PropTypes.element]).isRequired,\n  data: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.element]).isRequired,\n  customClasses: PropTypes.string,\n  field: PropTypes.string,\n  recipientUuid: PropTypes.string,\n  handleEditMode: PropTypes.func,\n  dynamic: PropTypes.bool\n};\nconst intlColumnContent = injectIntl(ColumnContent);\nexport default intlColumnContent;\nColumnContent.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"ColumnContent\",\n  \"props\": {\n    \"intl\": {\n      \"type\": {\n        \"name\": \"custom\",\n        \"raw\": \"intlShape.isRequired\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"header\": {\n      \"type\": {\n        \"name\": \"union\",\n        \"value\": [{\n          \"name\": \"string\"\n        }, {\n          \"name\": \"element\"\n        }]\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"data\": {\n      \"type\": {\n        \"name\": \"union\",\n        \"value\": [{\n          \"name\": \"string\"\n        }, {\n          \"name\": \"number\"\n        }, {\n          \"name\": \"element\"\n        }]\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"customClasses\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"field\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"recipientUuid\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"handleEditMode\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"dynamic\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/components/RecipientList/RecipientView/Widget/columnContent.js\"] = {\n    name: \"ColumnContent\",\n    docgenInfo: ColumnContent.__docgenInfo,\n    path: \"src/components/RecipientList/RecipientView/Widget/columnContent.js\"\n  };\n}","map":{"version":3,"sources":["/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/src/components/RecipientList/RecipientView/Widget/columnContent.js"],"names":["React","useContext","useState","PropTypes","clsx","injectIntl","intlShape","Grid","Typography","EditIcon","AccessTimeIcon","CircularProgress","Modal","Backdrop","Fade","NSButton","InlineToaster","moment","globalMessage","Widget","recipientListStyles","RecipientViewContext","FieldHistory","ColumnContent","intl","header","data","customClasses","dynamic","handleEditMode","recipientUuid","field","rest","classes","toasterProps","toaster","setToaster","saveProps","saveState","showToaster","show","loading","isLoading","open","setOpen","handleOpen","handleClose","fieldHistory","timestamp","value","user_uuid","user_name","map","userName","idx","arr","format","toLocaleString","length","captionSpacing","caption","contentBody","columnActionBtns","editBtn","modal","timeout","columnPaper","formatMessage","saved","undoHandler","propTypes","isRequired","oneOfType","string","element","number","func","bool","intlColumnContent"],"mappings":"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","sourcesContent":["/**\n *\n * ColumnContent\n *\n */\n\nimport React, { useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { injectIntl, intlShape } from 'react-intl';\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport EditIcon from '@material-ui/icons/Edit';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\n\nimport NSButton from 'components/shared/NSButton';\nimport InlineToaster from 'components/shared/InlineToaster';\nimport moment from 'moment';\nimport globalMessage from 'messages';\nimport Widget from './widget';\nimport { recipientListStyles } from '../../styles';\nimport { RecipientViewContext } from '../context';\nimport FieldHistory from './fieldHistory';\n\nfunction ColumnContent({\n  intl,\n  header,\n  data,\n  customClasses,\n  dynamic,\n  handleEditMode,\n  recipientUuid,\n  field,\n  ...rest\n}) {\n  const classes = recipientListStyles();\n  const {\n    toasterProps: { toaster, setToaster },\n    saveProps: { saveState },\n  } = useContext(RecipientViewContext);\n\n  const showToaster =\n    toaster.show &&\n    toaster.field === field &&\n    toaster.recipientUuid === recipientUuid;\n\n  const loading =\n    saveState.isLoading &&\n    saveState.recipientUuid === recipientUuid &&\n    saveState.field === field;\n\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  // TODO: Finish this feature\n  const fieldHistory = [\n    {\n      timestamp: '2019-10-01T14:55:06.789Z',\n      value: 'Eddie Dozier',\n      user_uuid: '77c7702c-a4bc-11e9-bb06-22000a96ad48',\n      user_name: 'Eddie Dozier',\n    },\n    {\n      timestamp: '2019-10-02T14:28:19.535Z',\n      value: 'Jimmy Hindrix',\n      user_uuid: '77c7702c-a4bc-11e9-bb06-22000a96ad48',\n      user_name: 'Eddie Dozier',\n    },\n    {\n      timestamp: '2019-10-03T14:28:03.317Z',\n      value: 'Maxwell',\n      user_uuid: '77c7702c-a4bc-11e9-bb06-22000a96ad48',\n      user_name: 'Eddie Dozier',\n    },\n  ].map(({ timestamp, value, user_name: userName }, idx, arr) => (\n    <FieldHistory\n      key={idx}\n      date={moment(timestamp)\n        .format('MMM DD, YYYY hh:mm:ss')\n        .toLocaleString()}\n      value={value}\n      user={userName}\n      currentVersion={idx === 0}\n      lastItem={arr.length - 1 === idx}\n      field={header}\n    />\n  ));\n\n  return (\n    <Grid\n      {...rest}\n      container\n      className={customClasses}\n      direction=\"row\"\n      justify=\"space-between\"\n      alignItems=\"center\"\n    >\n      {loading ? (\n        <Grid\n          item\n          container\n          direction=\"column\"\n          justify=\"center\"\n          alignItems=\"center\"\n        >\n          <CircularProgress />\n        </Grid>\n      ) : (\n        <>\n          <Grid item xs={9}>\n            <Grid item className={clsx(classes.captionSpacing)}>\n              <Typography variant=\"caption\" className={classes.caption}>\n                {header}\n              </Typography>\n            </Grid>\n\n            <Grid item>\n              {typeof data === 'string' ? (\n                <Typography variant=\"body2\" className={classes.contentBody}>\n                  {data}\n                </Typography>\n              ) : (\n                data\n              )}\n            </Grid>\n          </Grid>\n          {dynamic && (\n            <Grid\n              item\n              xs={3}\n              container\n              direction=\"row\"\n              justify=\"flex-end\"\n              alignItems=\"center\"\n              className={clsx('column-action-btns', classes.columnActionBtns)}\n            >\n              {!toaster.show && (\n                <Grid\n                  item\n                  container\n                  direction=\"column\"\n                  justify=\"flex-end\"\n                  alignItems=\"center\"\n                >\n                  <Grid item component=\"span\" className={clsx(classes.editBtn)}>\n                    <span className=\"edit-recipient\">\n                      <NSButton\n                        version={2}\n                        onClick={() => handleEditMode(true)}\n                      >\n                        <EditIcon />\n                      </NSButton>\n                    </span>\n                  </Grid>\n\n                  <Grid item component=\"span\">\n                    <span className=\"access-time\">\n                      <NSButton\n                        onClick={handleOpen}\n                        id={`${field}_${recipientUuid}`}\n                      >\n                        <AccessTimeIcon />\n                      </NSButton>\n                    </span>\n                  </Grid>\n\n                  <Modal\n                    aria-labelledby={`${field}_${recipientUuid}`}\n                    aria-describedby={`${field}_${recipientUuid}`}\n                    open={open}\n                    className={classes.modal}\n                    onClose={handleClose}\n                    closeAfterTransition\n                    BackdropComponent={Backdrop}\n                    BackdropProps={{\n                      timeout: 400,\n                    }}\n                  >\n                    <Fade in={open}>\n                      <div className={classes.columnPaper}>\n                        <Widget\n                          header={`${intl.formatMessage(\n                            globalMessage.fieldHistory\n                          )}: ${header}`}\n                          body={\n                            <Grid\n                              container\n                              direction=\"row\"\n                              justify=\"center\"\n                              alignItems=\"flex-start\"\n                              className={classes.fieldHistory}\n                            >\n                              {fieldHistory}\n                            </Grid>\n                          }\n                          message=\"closeWindow\"\n                          buttonPosition=\"end\"\n                          btnHandler={handleClose}\n                        />\n                      </div>\n                    </Fade>\n                  </Modal>\n                </Grid>\n              )}\n\n              <Grid item>\n                {showToaster && (\n                  <InlineToaster\n                    variant=\"success\"\n                    className=\"success-toaster\"\n                    message={intl.formatMessage(globalMessage.saved)}\n                    showUndo\n                    clearToaster={setToaster}\n                    handleUndo={toaster.undoHandler}\n                  />\n                )}\n              </Grid>\n            </Grid>\n          )}\n        </>\n      )}\n    </Grid>\n  );\n}\n\nColumnContent.propTypes = {\n  intl: intlShape.isRequired,\n  header: PropTypes.oneOfType([PropTypes.string, PropTypes.element]).isRequired,\n  data: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.element,\n  ]).isRequired,\n  customClasses: PropTypes.string,\n  field: PropTypes.string,\n  recipientUuid: PropTypes.string,\n  handleEditMode: PropTypes.func,\n  dynamic: PropTypes.bool,\n};\n\nconst intlColumnContent = injectIntl(ColumnContent);\n\nexport default intlColumnContent;\n"]},"metadata":{},"sourceType":"module"}