{"ast":null,"code":"var _jsxFileName = \"/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/src/stories/18-NSFilters.stories.js\";\nimport React from 'react';\nimport NSFilters from '../components/NSFilters';\nimport { defineMessages, IntlProvider } from 'react-intl';\nimport { NSFiltersProvider } from '../components/NSFilters/context/filters';\nimport Wrapper from '../components/NSFilters/index';\nimport { action } from '@storybook/addon-actions';\nimport MultiSelect from '../components/NSFilters/multi';\nimport LevelSelect from '../components/NSFilters/levels';\nimport Single from '../components/NSFilters/single';\nexport default {\n  title: 'New Story Filters',\n  component: NSFilters\n}; // Multi-select boilerplate\n\nconst label = 'Completed Surveys';\nconst data = [{\n  id: 'fef3f-2r223-vrb423',\n  label: 'New Story Storybook',\n  count: 1,\n  selected: true\n}, {\n  id: 'fef3f-2r223-vrb424',\n  label: 'Storybook',\n  count: 2,\n  selected: false\n}, {\n  id: 'fef3f-2r223-vrb425',\n  label: 'Mexico',\n  count: 5,\n  selected: false\n}, {\n  id: 'fef3f-2r223-vrb426',\n  label: 'El Salvador',\n  count: 3,\n  selected: false\n}]; // NS Filters boilerplate \n\nconst defaultState = {\n  query: null,\n  chips: []\n};\nconst columns = [{\n  id: 'recipientName',\n  defaultWidth: '380px',\n  label: 'Family',\n  align: 'left',\n  type: 'single',\n  columnData: null,\n  noData: false,\n  disablePadding: true,\n  show: true,\n  sortable: true,\n  defaultFilter: false,\n  filter: false,\n  custom: false\n}, {\n  id: 'id',\n  defaultWidth: '450px',\n  label: 'Family ID',\n  align: 'left',\n  type: 'single',\n  columnData: null,\n  noData: false,\n  disablePadding: false,\n  show: true,\n  sortable: true,\n  filter: false,\n  defaultFilter: false,\n  custom: false\n}, {\n  id: 'completedSurveys',\n  defaultWidth: '123px',\n  type: 'multi',\n  label: 'Completed Surveys',\n  filterWidth: 170,\n  align: 'center',\n  columnData: null,\n  disablePadding: true,\n  noData: false,\n  show: true,\n  sortable: false,\n  filter: true,\n  defaultFilter: true,\n  custom: false\n}, {\n  id: 'childRecipients',\n  defaultWidth: '100px',\n  type: 'multi',\n  label: 'Family Members',\n  align: 'center',\n  columnData: null,\n  noData: false,\n  disablePadding: true,\n  show: true,\n  sortable: false,\n  filter: false,\n  defaultFilter: false,\n  custom: false\n}, {\n  id: 'parentRecipients',\n  type: 'levels',\n  label: 'Community',\n  filterWidth: 150,\n  align: 'center',\n  noData: false,\n  columnData: null,\n  disablePadding: true,\n  sortable: false,\n  show: true,\n  filter: true,\n  noColumn: true,\n  defaultFilter: true,\n  custom: false\n}, {\n  id: 'lastUpdate',\n  defaultWidth: '180px',\n  type: 'date',\n  label: 'Last Update',\n  filterWidth: 150,\n  align: 'center',\n  columnData: null,\n  noData: true,\n  disablePadding: true,\n  show: true,\n  sortable: true,\n  filter: true,\n  defaultFilter: true,\n  custom: false\n}];\nconst filterQueryTriggers = {\n  completedSurveys: () => {}\n};\nconst multiSelectProps = {\n  label,\n  id: 'completedSurveys',\n  data,\n  filterQueryTriggers\n};\n\nconst handleSelected = () => {};\n\nconst dateRangeProps = {\n  dateRange: {\n    before: null,\n    after: null\n  },\n  setDateRange: () => {}\n};\nconst lastUpdateProps = {\n  lastUpdate: defaultState,\n  setLastUpdate: () => {}\n};\nconst lastUpdatePropsCalendar = {\n  lastUpdate: {\n    query: 'custom',\n    chips: []\n  },\n  setLastUpdate: () => {}\n};\nconst commonProps = {\n  filterCategories: columns,\n  dateRangeProps,\n  lastUpdateProps: lastUpdatePropsCalendar\n};\nconst wrapperProps = {\n  filterQueryTriggers: {\n    completedSurveys: () => {},\n    lastUpdate: () => {}\n  },\n  setSelected: () => {},\n  messages: defineMessages({\n    completedSurveys: {\n      id: `completedSurveys`,\n      defaultMessage: 'Completed Surveys'\n    },\n    lastUpdate: {\n      id: `lastUpdate`,\n      defaultMessage: 'Last Update'\n    },\n    parentRecipients: {\n      id: `parentRecipients`,\n      defaultMessage: 'Community'\n    }\n  })\n};\n\nconst NSFiltersProviders = ({\n  children\n}) => React.createElement(NSFiltersProvider, Object.assign({\n  handleSelected: handleSelected\n}, commonProps, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 204\n  },\n  __self: this\n}), children);\n\nNSFiltersProviders.displayName = \"NSFiltersProviders\";\n// Level select boilerplate\nconst levelSelectData = [{\n  id: '60786f62-5641-11e9-9966-22000bd4493b',\n  name: 'Country',\n  toggled: true,\n  checked: false,\n  children: [{\n    id: '40786f62-3641-11e9-9916-22000bd4493b',\n    name: 'City',\n    toggled: true,\n    checked: false,\n    children: [, {\n      id: '40786f62-3641-11e9-9916-22000bd4493c',\n      name: 'Community',\n      toggled: true,\n      checked: false,\n      children: [{\n        id: '40786f62-3641-11e9-9916-22000bd4493d',\n        name: 'Family',\n        toggled: true,\n        checked: false,\n        children: [{\n          id: '40786f62-3641-11e9-9916-22000bd4493e',\n          name: 'Family Member',\n          toggled: true,\n          checked: false,\n          children: []\n        }]\n      }]\n    }]\n  }]\n}];\nconst levelSelectFilterQueryTriggers = {\n  parentRecipients: {\n    data: [],\n    set: () => {}\n  }\n};\nconst levelFilterProps = {\n  id: 'parentRecipients',\n  filterData: levelSelectData,\n  levelSelectFilterQueryTriggers\n};\nconst singleLabel = 'Community';\nconst singleSelected = 'all-time';\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"h3\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 273\n  },\n  __self: this\n}, \"New Story Filters View\");\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"h3\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 276\n  },\n  __self: this\n}, \"Multi-select\");\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"h3\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 278\n  },\n  __self: this\n}, \"Level select\");\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"h3\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 280\n  },\n  __self: this\n}, \"Select Filters\");\n\nexport function NSFilterContainer() {\n  return React.createElement(IntlProvider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    onClick: action('Component handler'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272\n    },\n    __self: this\n  }, _ref, React.createElement(NSFiltersProviders, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274\n    },\n    __self: this\n  }, React.createElement(Wrapper, Object.assign({}, commonProps, wrapperProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275\n    },\n    __self: this\n  })), _ref2, React.createElement(MultiSelect, Object.assign({}, multiSelectProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277\n    },\n    __self: this\n  })), _ref3, React.createElement(LevelSelect, Object.assign({}, levelFilterProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279\n    },\n    __self: this\n  })), _ref4, React.createElement(Single, {\n    label: singleLabel,\n    selected: singleSelected,\n    handleChange: () => {},\n    singleOptions: [],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281\n    },\n    __self: this\n  }))));\n}\nNSFilterContainer.displayName = \"NSFilterContainer\";\nNSFilterContainer.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"NSFilterContainer\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/stories/18-NSFilters.stories.js\"] = {\n    name: \"NSFilterContainer\",\n    docgenInfo: NSFilterContainer.__docgenInfo,\n    path: \"src/stories/18-NSFilters.stories.js\"\n  };\n}","map":{"version":3,"sources":["/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/src/stories/18-NSFilters.stories.js"],"names":["React","NSFilters","defineMessages","IntlProvider","NSFiltersProvider","Wrapper","action","MultiSelect","LevelSelect","Single","title","component","label","data","id","count","selected","defaultState","query","chips","columns","defaultWidth","align","type","columnData","noData","disablePadding","show","sortable","defaultFilter","filter","custom","filterWidth","noColumn","filterQueryTriggers","completedSurveys","multiSelectProps","handleSelected","dateRangeProps","dateRange","before","after","setDateRange","lastUpdateProps","lastUpdate","setLastUpdate","lastUpdatePropsCalendar","commonProps","filterCategories","wrapperProps","setSelected","messages","defaultMessage","parentRecipients","NSFiltersProviders","children","levelSelectData","name","toggled","checked","levelSelectFilterQueryTriggers","set","levelFilterProps","filterData","singleLabel","singleSelected","NSFilterContainer"],"mappings":"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","sourcesContent":["import React from 'react'\nimport NSFilters from '../components/NSFilters'\nimport { defineMessages, IntlProvider } from 'react-intl';\nimport { NSFiltersProvider } from '../components/NSFilters/context/filters';\nimport Wrapper from '../components/NSFilters/index';\nimport { action } from '@storybook/addon-actions';\nimport MultiSelect from '../components/NSFilters/multi';\nimport LevelSelect from '../components/NSFilters/levels'\nimport Single from '../components/NSFilters/single'\n\nexport default {\n  title: 'New Story Filters',\n  component: NSFilters\n}\n\n// Multi-select boilerplate\nconst label = 'Completed Surveys';\nconst data = [\n  {\n    id: 'fef3f-2r223-vrb423',\n    label: 'New Story Storybook',\n    count: 1,\n    selected: true,\n  },\n  {\n    id: 'fef3f-2r223-vrb424',\n    label: 'Storybook',\n    count: 2,\n    selected: false,\n  },\n  {\n    id: 'fef3f-2r223-vrb425',\n    label: 'Mexico',\n    count: 5,\n    selected: false,\n  },\n  {\n    id: 'fef3f-2r223-vrb426',\n    label: 'El Salvador',\n    count: 3,\n    selected: false,\n  },\n];\n\n// NS Filters boilerplate \nconst defaultState = { query: null, chips: [] };\n\nconst columns = [\n  {\n    id: 'recipientName',\n    defaultWidth: '380px',\n    label: 'Family',\n    align: 'left',\n    type: 'single',\n    columnData: null,\n    noData: false,\n    disablePadding: true,\n    show: true,\n    sortable: true,\n    defaultFilter: false,\n    filter: false,\n    custom: false,\n  },\n  {\n    id: 'id',\n    defaultWidth: '450px',\n    label: 'Family ID',\n    align: 'left',\n    type: 'single',\n    columnData: null,\n    noData: false,\n    disablePadding: false,\n    show: true,\n    sortable: true,\n    filter: false,\n    defaultFilter: false,\n    custom: false,\n  },\n  {\n    id: 'completedSurveys',\n    defaultWidth: '123px',\n    type: 'multi',\n    label: 'Completed Surveys',\n    filterWidth: 170,\n    align: 'center',\n    columnData: null,\n    disablePadding: true,\n    noData: false,\n    show: true,\n    sortable: false,\n    filter: true,\n    defaultFilter: true,\n    custom: false,\n  },\n  {\n    id: 'childRecipients',\n    defaultWidth: '100px',\n    type: 'multi',\n    label: 'Family Members',\n    align: 'center',\n    columnData: null,\n    noData: false,\n    disablePadding: true,\n    show: true,\n    sortable: false,\n    filter: false,\n    defaultFilter: false,\n    custom: false,\n  },\n  {\n    id: 'parentRecipients',\n    type: 'levels',\n    label: 'Community',\n    filterWidth: 150,\n    align: 'center',\n    noData: false,\n    columnData: null,\n    disablePadding: true,\n    sortable: false,\n    show: true,\n    filter: true,\n    noColumn: true,\n    defaultFilter: true,\n    custom: false,\n  },\n  {\n    id: 'lastUpdate',\n    defaultWidth: '180px',\n    type: 'date',\n    label: 'Last Update',\n    filterWidth: 150,\n    align: 'center',\n    columnData: null,\n    noData: true,\n    disablePadding: true,\n    show: true,\n    sortable: true,\n    filter: true,\n    defaultFilter: true,\n    custom: false,\n  },\n];\n\n  const filterQueryTriggers = {\n    completedSurveys: () => {},\n  };\n\n  const multiSelectProps = {\n    label,\n    id: 'completedSurveys',\n    data,\n    filterQueryTriggers,\n  };\n\nconst handleSelected = () => {};\n\nconst dateRangeProps = {\n  dateRange: { before: null, after: null },\n  setDateRange: () => {},\n};\n\nconst lastUpdateProps = {\n  lastUpdate: defaultState,\n  setLastUpdate: () => {},\n};\n\nconst lastUpdatePropsCalendar = {\n  lastUpdate: {\n    query: 'custom',\n    chips: [],\n  },\n  setLastUpdate: () => {},\n};\n\nconst commonProps = {\n  filterCategories: columns,\n  dateRangeProps,\n  lastUpdateProps: lastUpdatePropsCalendar,\n};\n\nconst wrapperProps = {\n  filterQueryTriggers: {\n    completedSurveys: () => {},\n    lastUpdate: () => {},\n  },\n  setSelected: () => {},\n  messages: defineMessages({\n    completedSurveys: {\n      id: `completedSurveys`,\n      defaultMessage: 'Completed Surveys',\n    },\n    lastUpdate: {\n      id: `lastUpdate`,\n      defaultMessage: 'Last Update',\n    },\n    parentRecipients: {\n      id: `parentRecipients`,\n      defaultMessage: 'Community',\n    },\n  }),\n};\n\nconst NSFiltersProviders = ({ children }) => (\n  <NSFiltersProvider handleSelected={handleSelected} {...commonProps}>\n    {children}\n  </NSFiltersProvider>\n);\n\n// Level select boilerplate\nconst levelSelectData = [\n  {\n    id: '60786f62-5641-11e9-9966-22000bd4493b',\n    name: 'Country',\n    toggled: true,\n    checked: false,\n    children: [\n      {\n        id: '40786f62-3641-11e9-9916-22000bd4493b',\n        name: 'City',\n        toggled: true,\n        checked: false,\n        children: [,\n          {\n            id: '40786f62-3641-11e9-9916-22000bd4493c',\n            name: 'Community',\n            toggled: true,\n            checked: false,\n            children: [\n              {\n                id: '40786f62-3641-11e9-9916-22000bd4493d',\n                name: 'Family',\n                toggled: true,\n                checked: false,\n                children: [\n                  {\n                    id: '40786f62-3641-11e9-9916-22000bd4493e',\n                    name: 'Family Member',\n                    toggled: true,\n                    checked: false,\n                    children: [],\n                  }\n                ],\n              }\n            ],\n          }\n        ],   \n      },\n    ],\n  },\n];\n\nconst levelSelectFilterQueryTriggers = {\n  parentRecipients: {\n    data: [],\n    set: () => {},\n  },\n};\n\nconst levelFilterProps = {\n  id: 'parentRecipients',\n  filterData: levelSelectData,\n  levelSelectFilterQueryTriggers,\n};\n\nconst singleLabel = 'Community';\nconst singleSelected = 'all-time';\n\nexport function NSFilterContainer() {\n\n  return(\n    <IntlProvider>\n      <div onClick={action('Component handler')}>\n        <h3>New Story Filters View</h3>\n        <NSFiltersProviders>\n          <Wrapper {...commonProps} {...wrapperProps} />\n        <h3>Multi-select</h3>\n          <MultiSelect {...multiSelectProps} />\n        <h3>Level select</h3>\n          <LevelSelect {...levelFilterProps} />\n        <h3>Select Filters</h3>\n          <Single label={singleLabel}\n            selected={singleSelected}\n            handleChange={() => {}}\n            singleOptions={[]}/>\n        </NSFiltersProviders>\n      </div>\n    </IntlProvider>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}