{"ast":null,"code":"var _jsxFileName = \"/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/src/components/RecipientList/RecipientView/Widget/fieldHistory.js\";\n\n/**\n *\n * FieldHistory\n *\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { injectIntl, intlShape } from 'react-intl';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport globalMessages from 'messages';\nimport { FieldHistoryStyle } from '../../styles';\n\nfunction FieldHistory({\n  intl,\n  date,\n  value,\n  user,\n  currentVersion,\n  lastItem\n}) {\n  const classes = FieldHistoryStyle();\n  return React.createElement(React.Fragment, null, React.createElement(Grid, {\n    item: true,\n    container: true,\n    className: classes.container,\n    direction: \"column\",\n    justify: \"center\",\n    alignItems: \"flex-start\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, currentVersion && React.createElement(Typography, {\n    variant: \"body1\",\n    className: classes.currentVersion,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, intl.formatMessage(globalMessages.currentVersion)), React.createElement(Typography, {\n    variant: \"body1\",\n    className: classes.user,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, date, \" \\u2013 \", user), React.createElement(Typography, {\n    variant: \"body1\",\n    className: classes.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, value)), !lastItem && React.createElement(Grid, {\n    item: true,\n    container: true,\n    direction: \"row\",\n    justify: \"center\",\n    alignItems: \"flex-start\",\n    className: classes.lastItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Divider, {\n    light: true,\n    className: classes.divider,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })));\n}\n\nFieldHistory.propTypes = {\n  intl: intlShape.isRequired,\n  date: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  user: PropTypes.string.isRequired,\n  currentVersion: PropTypes.bool,\n  lastItem: PropTypes.bool\n};\nconst intlFieldHistory = injectIntl(FieldHistory);\nexport default intlFieldHistory;\nFieldHistory.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"FieldHistory\",\n  \"props\": {\n    \"intl\": {\n      \"type\": {\n        \"name\": \"custom\",\n        \"raw\": \"intlShape.isRequired\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"date\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"value\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"user\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"currentVersion\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"lastItem\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/components/RecipientList/RecipientView/Widget/fieldHistory.js\"] = {\n    name: \"FieldHistory\",\n    docgenInfo: FieldHistory.__docgenInfo,\n    path: \"src/components/RecipientList/RecipientView/Widget/fieldHistory.js\"\n  };\n}","map":{"version":3,"sources":["/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/src/components/RecipientList/RecipientView/Widget/fieldHistory.js"],"names":["React","PropTypes","injectIntl","intlShape","Grid","Typography","Divider","globalMessages","FieldHistoryStyle","FieldHistory","intl","date","value","user","currentVersion","lastItem","classes","container","formatMessage","content","divider","propTypes","isRequired","string","bool","intlFieldHistory"],"mappings":";;AAAA;;;;;AAMA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,YAAtC;AAEA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,OAAOC,cAAP,MAA2B,UAA3B;AACA,SAASC,iBAAT,QAAkC,cAAlC;;AAEA,SAASC,YAAT,CAAsB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,IAAR;AAAcC,EAAAA,KAAd;AAAqBC,EAAAA,IAArB;AAA2BC,EAAAA,cAA3B;AAA2CC,EAAAA;AAA3C,CAAtB,EAA6E;AAC3E,QAAMC,OAAO,GAAGR,iBAAiB,EAAjC;AAEA,SACE,0CACE,oBAAC,IAAD;AACE,IAAA,IAAI,MADN;AAEE,IAAA,SAAS,MAFX;AAGE,IAAA,SAAS,EAAEQ,OAAO,CAACC,SAHrB;AAIE,IAAA,SAAS,EAAC,QAJZ;AAKE,IAAA,OAAO,EAAC,QALV;AAME,IAAA,UAAU,EAAC,YANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGH,cAAc,IACb,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAA4B,IAAA,SAAS,EAAEE,OAAO,CAACF,cAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,IAAI,CAACQ,aAAL,CAAmBX,cAAc,CAACO,cAAlC,CADH,CATJ,EAcE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAA4B,IAAA,SAAS,EAAEE,OAAO,CAACH,IAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,IADH,cACYE,IADZ,CAdF,EAiBE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAA4B,IAAA,SAAS,EAAEG,OAAO,CAACG,OAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,KADH,CAjBF,CADF,EAuBG,CAACG,QAAD,IACC,oBAAC,IAAD;AACE,IAAA,IAAI,MADN;AAEE,IAAA,SAAS,MAFX;AAGE,IAAA,SAAS,EAAC,KAHZ;AAIE,IAAA,OAAO,EAAC,QAJV;AAKE,IAAA,UAAU,EAAC,YALb;AAME,IAAA,SAAS,EAAEC,OAAO,CAACD,QANrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE,oBAAC,OAAD;AAAS,IAAA,KAAK,MAAd;AAAe,IAAA,SAAS,EAAEC,OAAO,CAACI,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CAxBJ,CADF;AAsCD;;AAEDX,YAAY,CAACY,SAAb,GAAyB;AACvBX,EAAAA,IAAI,EAAEP,SAAS,CAACmB,UADO;AAEvBX,EAAAA,IAAI,EAAEV,SAAS,CAACsB,MAAV,CAAiBD,UAFA;AAGvBV,EAAAA,KAAK,EAAEX,SAAS,CAACsB,MAAV,CAAiBD,UAHD;AAIvBT,EAAAA,IAAI,EAAEZ,SAAS,CAACsB,MAAV,CAAiBD,UAJA;AAKvBR,EAAAA,cAAc,EAAEb,SAAS,CAACuB,IALH;AAMvBT,EAAAA,QAAQ,EAAEd,SAAS,CAACuB;AANG,CAAzB;AASA,MAAMC,gBAAgB,GAAGvB,UAAU,CAACO,YAAD,CAAnC;AAEA,eAAegB,gBAAf","sourcesContent":["/**\n *\n * FieldHistory\n *\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { injectIntl, intlShape } from 'react-intl';\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\n\nimport globalMessages from 'messages';\nimport { FieldHistoryStyle } from '../../styles';\n\nfunction FieldHistory({ intl, date, value, user, currentVersion, lastItem }) {\n  const classes = FieldHistoryStyle();\n\n  return (\n    <>\n      <Grid\n        item\n        container\n        className={classes.container}\n        direction=\"column\"\n        justify=\"center\"\n        alignItems=\"flex-start\"\n      >\n        {currentVersion && (\n          <Typography variant=\"body1\" className={classes.currentVersion}>\n            {intl.formatMessage(globalMessages.currentVersion)}\n          </Typography>\n        )}\n\n        <Typography variant=\"body1\" className={classes.user}>\n          {date} â€“ {user}\n        </Typography>\n        <Typography variant=\"body1\" className={classes.content}>\n          {value}\n        </Typography>\n      </Grid>\n\n      {!lastItem && (\n        <Grid\n          item\n          container\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"flex-start\"\n          className={classes.lastItem}\n        >\n          <Divider light className={classes.divider} />\n        </Grid>\n      )}\n    </>\n  );\n}\n\nFieldHistory.propTypes = {\n  intl: intlShape.isRequired,\n  date: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  user: PropTypes.string.isRequired,\n  currentVersion: PropTypes.bool,\n  lastItem: PropTypes.bool,\n};\n\nconst intlFieldHistory = injectIntl(FieldHistory);\n\nexport default intlFieldHistory;\n"]},"metadata":{},"sourceType":"module"}