{"ast":null,"code":"import \"core-js/modules/es.string.replace\";\nimport \"core-js/modules/web.dom-collections.iterator\";\nvar _jsxFileName = \"/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/src/components/NSFilters/selectFilters.js\";\n\n/* eslint-disable react/prop-types */\n\n/**\n *\n * SelectFilters\n *\n */\nimport React, { useState, useContext } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport Menu from '@material-ui/core/Menu';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport SolidDownArrow from '../Icons copy/solidDownArrow';\nimport { NSFiltersContext } from './context/filters';\nimport SingleSelect from './single';\nimport MultiSelect from './multi';\nimport LevelSelect from './levels';\nimport { SelectFilterStyles, SelectFilterBtn, CalendarGlobalStyle } from './styles';\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 134\n  },\n  __self: this\n}, \"No Filter Available.\");\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(CalendarGlobalStyle, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 139\n  },\n  __self: this\n});\n\nfunction SelectFilters({\n  label,\n  id,\n  btnWidth,\n  type,\n  data,\n  filterQueryTriggers,\n  noData\n}) {\n  let filterDisplay;\n  const classes = SelectFilterStyles();\n  const [selected, setSelected] = useState('');\n  const [anchorEl, setAnchorEl] = useState(null);\n  const {\n    calendarProps: {\n      setShowCalendar,\n      showCalendar\n    },\n    lastUpdateProps: {\n      setLastUpdate,\n      lastUpdate\n    },\n    dateRangeProps: {\n      setDateRange\n    },\n    handleSelected\n  } = useContext(NSFiltersContext);\n  const menuOpen = Boolean(anchorEl);\n  const btnClasses = SelectFilterBtn(menuOpen)();\n  const PaperProps = {\n    style: {\n      borderRadius: '0px 2px 2px 2px',\n      boxShadow: '0 3px 4px -1px rgba(0, 0, 0, 0.25)',\n      width: type === 'levels' ? 393 : 220\n    }\n  };\n\n  function handleChange(event, chip) {\n    handleSelected([]);\n    const {\n      value\n    } = event.target;\n    const selectedLabel = chip && chip.label ? chip.label : null;\n\n    if (type === 'date') {\n      setShowCalendar(value === 'custom');\n      setDateRange({\n        before: null,\n        after: null\n      });\n\n      if (value === '') {\n        setLastUpdate({\n          query: null,\n          chips: [selectedLabel]\n        });\n        return;\n      }\n\n      setLastUpdate({\n        query: value,\n        chips: [selectedLabel]\n      });\n    } else {\n      setSelected(value);\n    }\n  }\n\n  function handleBtnClick(event) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function handleClose() {\n    setAnchorEl(null);\n  }\n\n  switch (type) {\n    case 'single':\n      filterDisplay = React.createElement(SingleSelect, {\n        selected: selected,\n        handleChange: handleChange,\n        showCalendar: showCalendar,\n        singleOptions: [],\n        data: data.list,\n        type: type,\n        label: label,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      });\n      break;\n\n    case 'date':\n      filterDisplay = React.createElement(SingleSelect, {\n        selected: selected,\n        handleChange: handleChange,\n        showCalendar: showCalendar,\n        singleOptions: [],\n        lastUpdate: lastUpdate.query === null ? '' : lastUpdate.query,\n        data: data.list,\n        type: type,\n        label: label,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      });\n      break;\n\n    case 'multi':\n      filterDisplay = React.createElement(MultiSelect, {\n        label: label,\n        data: data.list,\n        filterQueryTriggers: filterQueryTriggers,\n        id: id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      });\n      break;\n\n    case 'levels':\n      filterDisplay = React.createElement(LevelSelect, {\n        label: label,\n        filterData: data.list,\n        filterQueryTriggers: filterQueryTriggers,\n        id: id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      });\n      break;\n\n    default:\n      filterDisplay = _ref;\n  }\n\n  return React.createElement(React.Fragment, null, _ref2, React.createElement(Button, {\n    variant: \"outlined\",\n    \"aria-controls\": label,\n    \"aria-haspopup\": \"true\",\n    className: btnWidth || null,\n    classes: btnClasses,\n    onClick: handleBtnClick,\n    disabled: data.loading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"space-between\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, label), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, React.createElement(SolidDownArrow, {\n    className: clsx(classes.downArrow, {\n      [classes.rotate]: menuOpen\n    }),\n    \"data-custom\": true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  })))), React.createElement(Menu, {\n    id: label.replace(' ', '-'),\n    PaperProps: PaperProps,\n    anchorEl: anchorEl,\n    keepMounted: true,\n    open: menuOpen,\n    onClose: handleClose,\n    elevation: 0,\n    getContentAnchorEl: null,\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'left'\n    },\n    transformOrigin: {\n      vertical: 'top',\n      horizontal: 'left'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, (data.list && data.list.length > 0 || noData) && filterDisplay));\n}\n\nSelectFilters.propTypes = {\n  label: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  noData: PropTypes.bool.isRequired,\n  data: PropTypes.object.isRequired,\n  btnWidth: PropTypes.string,\n  filterQueryTriggers: PropTypes.object,\n  type: PropTypes.oneOf(['single', 'multi', 'date', 'levels'])\n};\nSelectFilters.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"SelectFilters\",\n  \"props\": {\n    \"label\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"id\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"noData\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"data\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"btnWidth\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"filterQueryTriggers\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"type\": {\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"'single'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'multi'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'date'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'levels'\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\nexport default SelectFilters;\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/components/NSFilters/selectFilters.js\"] = {\n    name: \"SelectFilters\",\n    docgenInfo: SelectFilters.__docgenInfo,\n    path: \"src/components/NSFilters/selectFilters.js\"\n  };\n}","map":{"version":3,"sources":["/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/src/components/NSFilters/selectFilters.js"],"names":["React","useState","useContext","clsx","PropTypes","Menu","Grid","Button","SolidDownArrow","NSFiltersContext","SingleSelect","MultiSelect","LevelSelect","SelectFilterStyles","SelectFilterBtn","CalendarGlobalStyle","SelectFilters","label","id","btnWidth","type","data","filterQueryTriggers","noData","filterDisplay","classes","selected","setSelected","anchorEl","setAnchorEl","calendarProps","setShowCalendar","showCalendar","lastUpdateProps","setLastUpdate","lastUpdate","dateRangeProps","setDateRange","handleSelected","menuOpen","Boolean","btnClasses","PaperProps","style","borderRadius","boxShadow","width","handleChange","event","chip","value","target","selectedLabel","before","after","query","chips","handleBtnClick","currentTarget","handleClose","list","loading","downArrow","rotate","replace","vertical","horizontal","length","propTypes","string","isRequired","bool","object","oneOf"],"mappings":"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","sourcesContent":["/* eslint-disable react/prop-types */\n/**\n *\n * SelectFilters\n *\n */\n\nimport React, { useState, useContext } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\n\nimport Menu from '@material-ui/core/Menu';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\n\nimport SolidDownArrow from '../Icons copy/solidDownArrow';\nimport { NSFiltersContext } from './context/filters';\nimport SingleSelect from './single';\nimport MultiSelect from './multi';\nimport LevelSelect from './levels';\nimport {\n  SelectFilterStyles,\n  SelectFilterBtn,\n  CalendarGlobalStyle,\n} from './styles';\n\nfunction SelectFilters({\n  label,\n  id,\n  btnWidth,\n  type,\n  data,\n  filterQueryTriggers,\n  noData,\n}) {\n  let filterDisplay;\n  const classes = SelectFilterStyles();\n  const [selected, setSelected] = useState('');\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const {\n    calendarProps: { setShowCalendar, showCalendar },\n    lastUpdateProps: { setLastUpdate, lastUpdate },\n    dateRangeProps: { setDateRange },\n    handleSelected,\n  } = useContext(NSFiltersContext);\n\n  const menuOpen = Boolean(anchorEl);\n  const btnClasses = SelectFilterBtn(menuOpen)();\n  const PaperProps = {\n    style: {\n      borderRadius: '0px 2px 2px 2px',\n      boxShadow: '0 3px 4px -1px rgba(0, 0, 0, 0.25)',\n      width: type === 'levels' ? 393 : 220,\n    },\n  };\n\n  function handleChange(event, chip) {\n    handleSelected([]);\n    const { value } = event.target;\n    const selectedLabel = chip && chip.label ? chip.label : null;\n\n    if (type === 'date') {\n      setShowCalendar(value === 'custom');\n      setDateRange({ before: null, after: null });\n\n      if (value === '') {\n        setLastUpdate({ query: null, chips: [selectedLabel] });\n        return;\n      }\n      setLastUpdate({ query: value, chips: [selectedLabel] });\n    } else {\n      setSelected(value);\n    }\n  }\n\n  function handleBtnClick(event) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function handleClose() {\n    setAnchorEl(null);\n  }\n\n  switch (type) {\n    case 'single':\n      filterDisplay = (\n        <SingleSelect\n          selected={selected}\n          handleChange={handleChange}\n          showCalendar={showCalendar}\n          singleOptions={[]}\n          data={data.list}\n          type={type}\n          label={label}\n        />\n      );\n      break;\n    case 'date':\n      filterDisplay = (\n        <SingleSelect\n          selected={selected}\n          handleChange={handleChange}\n          showCalendar={showCalendar}\n          singleOptions={[]}\n          lastUpdate={lastUpdate.query === null ? '' : lastUpdate.query}\n          data={data.list}\n          type={type}\n          label={label}\n        />\n      );\n      break;\n    case 'multi':\n      filterDisplay = (\n        <MultiSelect\n          label={label}\n          data={data.list}\n          filterQueryTriggers={filterQueryTriggers}\n          id={id}\n        />\n      );\n      break;\n    case 'levels':\n      filterDisplay = (\n        <LevelSelect\n          label={label}\n          filterData={data.list}\n          filterQueryTriggers={filterQueryTriggers}\n          id={id}\n        />\n      );\n      break;\n    default:\n      filterDisplay = <p>No Filter Available.</p>;\n  }\n\n  return (\n    <>\n      <CalendarGlobalStyle />\n      <Button\n        variant=\"outlined\"\n        aria-controls={label}\n        aria-haspopup=\"true\"\n        className={btnWidth || null}\n        classes={btnClasses}\n        onClick={handleBtnClick}\n        disabled={data.loading}\n      >\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"space-between\"\n          alignItems=\"center\"\n        >\n          <Grid item>{label}</Grid>\n          <Grid item>\n            <SolidDownArrow\n              className={clsx(classes.downArrow, {\n                [classes.rotate]: menuOpen,\n              })}\n              data-custom\n            />\n          </Grid>\n        </Grid>\n      </Button>\n      <Menu\n        id={label.replace(' ', '-')}\n        PaperProps={PaperProps}\n        anchorEl={anchorEl}\n        keepMounted\n        open={menuOpen}\n        onClose={handleClose}\n        elevation={0}\n        getContentAnchorEl={null}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'left',\n        }}\n      >\n        {((data.list && data.list.length > 0) || noData) && filterDisplay}\n      </Menu>\n    </>\n  );\n}\n\nSelectFilters.propTypes = {\n  label: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  noData: PropTypes.bool.isRequired,\n  data: PropTypes.object.isRequired,\n  btnWidth: PropTypes.string,\n  filterQueryTriggers: PropTypes.object,\n  type: PropTypes.oneOf(['single', 'multi', 'date', 'levels']),\n};\n\nexport default SelectFilters;\n"]},"metadata":{},"sourceType":"module"}