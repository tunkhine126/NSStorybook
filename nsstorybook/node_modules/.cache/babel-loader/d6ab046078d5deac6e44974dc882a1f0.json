{"ast":null,"code":"import _objectWithoutProperties from \"/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/src/stories/1-Button.stories.js\";\nimport React, { Component } from 'react';\nimport { action } from '@storybook/addon-actions';\nimport { BrowserRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport NSButton from '../components/NSButton/index';\nimport button from '@material-ui/core/';\nimport { Typography, Collapse, IconButton, SnackbarContent } from '@material-ui/core';\nimport { Edit, CloseIcon, MoreHoriz, CheckCircleIcon, ErrorIcon, InfoIcon, WarningIcon } from '@material-ui/icons';\nimport { NSButtonStyles, btnLinkStyles } from '../components/NSButton/styles';\nimport { createMuiTheme, makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx'; // import { FormattedMessage } from 'react-intl';\n// import TextLink from '../components/TextLink';\n// import globalMessages from 'messages';\n\nexport default {\n  title: 'Buttons',\n  component: NSButton,\n  button,\n  createMuiTheme,\n  makeStyles\n};\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"h3\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48\n  },\n  __self: this\n}, \"Material-UI Buttons\");\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51\n  },\n  __self: this\n}, \"MUI Btn\");\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"span\", {\n  class: \"MuiButton-label\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57\n  },\n  __self: this\n}, \"MUI Btn\");\n\nvar _ref5 =\n/*#__PURE__*/\nReact.createElement(\"h3\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 60\n  },\n  __self: this\n}, \"NS Base Buttons\");\n\nvar _ref6 =\n/*#__PURE__*/\nReact.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 67\n  },\n  __self: this\n}, \"NS Btn V1\");\n\nvar _ref7 =\n/*#__PURE__*/\nReact.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 75\n  },\n  __self: this\n}, \"NS Btn V2\");\n\nvar _ref8 =\n/*#__PURE__*/\nReact.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 83\n  },\n  __self: this\n}, \"NS BTN V3\");\n\nvar _ref9 =\n/*#__PURE__*/\nReact.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 89\n  },\n  __self: this\n}, \"Disabled\");\n\nvar _ref10 =\n/*#__PURE__*/\nReact.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 98\n  },\n  __self: this\n}, \"Text Btn\");\n\nvar _ref11 =\n/*#__PURE__*/\nReact.createElement(\"h3\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 102\n  },\n  __self: this\n}, \"Buttons with Icons\");\n\nexport function ButtonContainer(_ref) {\n  let {\n    children,\n    componentClasses,\n    version,\n    textBtn,\n    deleteLink,\n    formId,\n    disabled,\n    variant,\n    className\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"children\", \"componentClasses\", \"version\", \"textBtn\", \"deleteLink\", \"formId\", \"disabled\", \"variant\", \"className\"]);\n\n  const classes = NSButtonStyles();\n  const danger = version === 3 ? classes.negative : classes.primary;\n  const type = version === 2 ? classes.secondary : danger;\n  const variantIcon = {\n    success: CheckCircleIcon,\n    warning: WarningIcon,\n    error: ErrorIcon,\n    info: InfoIcon\n  };\n  const Icon = variantIcon[variant];\n  return React.createElement(BrowserRouter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, _ref2, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"MuiButtonBase-root MuiButton-root MuiButton-contained\",\n    onClick: action(\"I've been clicked!\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, _ref3), \"\\xA0\", React.createElement(\"button\", {\n    className: \"MuiButtonBase-root MuiButton-root MuiButton-contained makeStyles-button-1807 makeStyles-bottomMargin-1809 makeStyles-topMargin-1810 MuiButton-containedPrimary MuiButton-containedSizeLarge MuiButton-sizeLarge\",\n    onClick: action(\"I've been clicked\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, _ref4)), _ref5, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(NSButton, {\n    id: \"Base\",\n    version: 1,\n    componentClasses: clsx(classes.btns, classes.margin),\n    onClick: action(\"I've been clicked\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, _ref6), \"\\xA0\", React.createElement(NSButton, {\n    id: \"Forward\",\n    version: 2,\n    componentClasses: clsx(classes.btns, classes.margin),\n    onClick: action(\"I've been clicked\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, _ref7), \"\\xA0\", React.createElement(NSButton, {\n    id: \"Danger\",\n    version: 3,\n    componentClasses: clsx(classes.btns, classes.margin),\n    onClick: action(\"I've been clicked\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, _ref8), \"\\xA0\", React.createElement(NSButton, {\n    componentClasses: classes.tsReorder,\n    variant: \"disabled\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, _ref9), \"\\xA0\", React.createElement(NSButton, {\n    textBtn: true,\n    variant: \"contained\",\n    size: \"small\",\n    onClick: action(\"I've been clicked\"),\n    componentClasses: classes.tsDragNDropCancelBtn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, _ref10), \"\\xA0\"), _ref11, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(NSButton, {\n    version: 2,\n    onClick: action(\"I've been clicked\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(React.Fragment, null, React.createElement(Edit, {\n    fontSize: \"small\",\n    className: classes.editBtn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    className: classes.editText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }), \"\\xA0 Edit\")), \"\\xA0\", React.createElement(IconButton, {\n    size: \"small\",\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: action(\"I've been clicked\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(MoreHoriz, {\n    className: classes.horiz,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  })), \"\\xA0\", React.createElement(SnackbarContent, Object.assign({\n    className: clsx(classes[variant], className),\n    \"aria-describedby\": \"toaster\",\n    message: React.createElement(\"span\", {\n      id: \"toaster\",\n      className: classes.message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      className: clsx(classes.icon, classes.iconVariant),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), message),\n    action: showUndo && React.createElement(TextLink, {\n      content: intl.formatMessage(globalMessage.undo),\n      onClick: handleUndo,\n      className: classes.undoBtn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    })\n  }, other, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }))));\n}\nButtonContainer.displayName = \"ButtonContainer\";\nButtonContainer.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"ButtonContainer\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/stories/1-Button.stories.js\"] = {\n    name: \"ButtonContainer\",\n    docgenInfo: ButtonContainer.__docgenInfo,\n    path: \"src/stories/1-Button.stories.js\"\n  };\n}","map":{"version":3,"sources":["/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/src/stories/1-Button.stories.js"],"names":["React","Component","action","BrowserRouter","PropTypes","NSButton","button","Typography","Collapse","IconButton","SnackbarContent","Edit","CloseIcon","MoreHoriz","CheckCircleIcon","ErrorIcon","InfoIcon","WarningIcon","NSButtonStyles","btnLinkStyles","createMuiTheme","makeStyles","clsx","title","component","ButtonContainer","children","componentClasses","version","textBtn","deleteLink","formId","disabled","variant","className","rest","classes","danger","negative","primary","type","secondary","variantIcon","success","warning","error","info","Icon","btns","margin","tsReorder","tsDragNDropCancelBtn","editBtn","editText","horiz","message","icon","iconVariant","showUndo","intl","formatMessage","globalMessage","undo","handleUndo","undoBtn","other"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { action } from '@storybook/addon-actions';\nimport { BrowserRouter } from 'react-router-dom'\nimport PropTypes from 'prop-types';\nimport NSButton from '../components/NSButton/index'\nimport button from '@material-ui/core/'\nimport { Typography, Collapse, IconButton, SnackbarContent } from '@material-ui/core';\nimport { Edit, CloseIcon, MoreHoriz, CheckCircleIcon, ErrorIcon, InfoIcon, WarningIcon } from '@material-ui/icons';\nimport { NSButtonStyles, btnLinkStyles } from '../components/NSButton/styles'\nimport { createMuiTheme, makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\n// import { FormattedMessage } from 'react-intl';\n// import TextLink from '../components/TextLink';\n// import globalMessages from 'messages';\n\n\n\nexport default {\n  title: 'Buttons',\n  component: NSButton, button, createMuiTheme, makeStyles \n};\n\nexport function ButtonContainer({\n  children,\n  componentClasses,\n  version,\n  textBtn,\n  deleteLink,\n  formId,\n  disabled,\n  variant,\n  className,\n  ...rest\n}) {\n  const classes = NSButtonStyles();\n  const danger = version === 3 ? classes.negative : classes.primary;\n  const type = version === 2 ? classes.secondary : danger;\n  const variantIcon = {\n    success: CheckCircleIcon,\n    warning: WarningIcon,\n    error: ErrorIcon,\n    info: InfoIcon,\n  };\n  const Icon = variantIcon[variant];\n\n  return (\n    <BrowserRouter>\n    <h3>Material-UI Buttons</h3>\n      <p>\n        <button className=\"MuiButtonBase-root MuiButton-root MuiButton-contained\" onClick={action(\"I've been clicked!\")}>\n          <span>MUI Btn</span>\n        </button>\n      &nbsp;\n        <button \n          className=\"MuiButtonBase-root MuiButton-root MuiButton-contained makeStyles-button-1807 makeStyles-bottomMargin-1809 makeStyles-topMargin-1810 MuiButton-containedPrimary MuiButton-containedSizeLarge MuiButton-sizeLarge\" \n          onClick={action(\"I've been clicked\")}>\n            <span class=\"MuiButton-label\">MUI Btn</span>\n        </button>  \n      </p>\n    <h3>NS Base Buttons</h3>\n      <p>\n        <NSButton\n          id=\"Base\"\n          version={1}\n          componentClasses={clsx(classes.btns, classes.margin)}\n          onClick={action(\"I've been clicked\")}>\n          <span>NS Btn V1</span>\n        </NSButton>\n      &nbsp;\n        <NSButton\n          id=\"Forward\"\n          version={2}\n          componentClasses={clsx(classes.btns, classes.margin)}\n          onClick={action(\"I've been clicked\")}>\n          <span>NS Btn V2</span>\n        </NSButton>\n      &nbsp;\n        <NSButton\n          id=\"Danger\"\n          version={3}\n          componentClasses={clsx(classes.btns, classes.margin)}\n          onClick={action(\"I've been clicked\")}>\n          <span>NS BTN V3</span>\n        </NSButton>\n      &nbsp;\n        <NSButton                 \n          componentClasses={classes.tsReorder}\n          variant=\"disabled\">\n          <span>Disabled</span>\n        </NSButton>\n      &nbsp;\n      <NSButton\n          textBtn\n          variant=\"contained\"\n          size=\"small\"\n          onClick={action(\"I've been clicked\")}\n          componentClasses={classes.tsDragNDropCancelBtn}>\n        <span>Text Btn</span>\n        </NSButton>\n      &nbsp;\n    </p>\n    <h3>Buttons with Icons</h3>\n      <p>\n      <NSButton \n        version={2}\n        onClick={action(\"I've been clicked\")}>\n        <>\n          <Edit fontSize=\"small\" className={classes.editBtn} />\n          <Typography className={classes.editText}/>\n          &nbsp; Edit\n        </>\n      </NSButton>\n    &nbsp;\n      <IconButton\n        size=\"small\"\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={action(\"I've been clicked\")}\n        >\n          <MoreHoriz className={classes.horiz} />\n      </IconButton>\n    &nbsp;\n    <SnackbarContent\n        className={clsx(classes[variant], className)}\n        aria-describedby=\"toaster\"\n        message={\n          <span id=\"toaster\" className={classes.message}>\n            <Icon className={clsx(classes.icon, classes.iconVariant)} />\n            {message}\n          </span>\n        }\n        action={\n          showUndo && (\n            <TextLink\n              content={intl.formatMessage(globalMessage.undo)}\n              onClick={handleUndo}\n              className={classes.undoBtn}\n            />\n          )\n        }\n        {...other}\n      />\n    </p>\n    </BrowserRouter>\n  );\n}\n\n// NSButton.propTypes = {\n//   children: PropTypes.oneOfType([\n//     PropTypes.element,\n//     PropTypes.array,\n//     PropTypes.string,\n//   ]).isRequired,\n//   componentClasses: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n//   version: PropTypes.number,\n//   textBtn: PropTypes.bool,\n//   deleteLink: PropTypes.bool,\n// };\n\n\n\n// export function NSButton({\n//   children,\n//   componentClasses,\n//   version,\n//   textBtn,\n//   deleteLink,\n//   formId,\n//   disabled,\n//   ...rest\n// }) {\n//   const classes = NSButtonStyles();\n//   const danger = version === 3 ? classes.negative : classes.primary;\n//   const type = version === 2 ? classes.secondary : danger;\n\n//   return (\n//     <Button \n//       onClick={action('I was clicked')}\n//       variant=\"contained\"\n//       color=\"primary\"\n//       size=\"large\"\n//       className={classes.confirmBtn}\n//       form={formId}\n//       type={type}\n//       disabled={disabled}\n//       >Primary\n//     </Button>\n//   )\n// }\n\n\n \n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}