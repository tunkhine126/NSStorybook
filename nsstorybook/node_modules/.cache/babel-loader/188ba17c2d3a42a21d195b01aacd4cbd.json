{"ast":null,"code":"import _objectWithoutProperties from \"/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/src/components/TimePickerValidation/index.js\";\n\n/**\n *\n * TimePickerValidation\n *\n */\nimport React from 'react';\nimport { asField } from 'informed';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardTimePicker } from '@material-ui/pickers';\nimport { inputStyles, DatePickerStyle } from 'global-styles';\nexport const TimePickerValidation = asField((_ref) => {\n  let {\n    fieldApi,\n    fieldState\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"fieldApi\", \"fieldState\"]);\n\n  const classes = inputStyles(fieldState.error)();\n  const {\n    value\n  } = fieldState;\n  const {\n    setValue,\n    setError,\n    setTouched,\n    reset\n  } = fieldApi;\n\n  const {\n    onChange,\n    customClass,\n    onBlur\n  } = props,\n        rest = _objectWithoutProperties(props, [\"onChange\", \"customClass\", \"onBlur\"]);\n\n  const timePickerClasses = DatePickerStyle(fieldState.error)();\n  return React.createElement(React.Fragment, null, React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(KeyboardTimePicker, Object.assign({}, rest, {\n    mask: \"__:__ _M\",\n    value: value || null,\n    classes: timePickerClasses,\n    className: clsx(customClass, 'validation-input', {\n      [classes.inputError]: fieldState.error\n    }),\n    onChange: date => {\n      if (moment(new Date(date)).isValid() || !date) {\n        reset();\n\n        if (date === null) {\n          setValue(null);\n        } else {\n          setValue(moment(new Date(date)).toLocaleString());\n        }\n\n        if (onChange) {\n          onChange(moment(new Date(date)).toLocaleString());\n        }\n      } else {\n        setError('Invalid Time');\n      }\n    },\n    onBlur: date => {\n      setTouched(true);\n\n      if (onBlur) {\n        onBlur(date);\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }))), fieldState.error ? React.createElement(\"small\", {\n    className: classes.error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, fieldState.error) : null);\n});\nexport default TimePickerValidation;","map":{"version":3,"sources":["/Users/tunkhine/Desktop/Development/NSStorybook/nsstorybook/src/components/TimePickerValidation/index.js"],"names":["React","asField","clsx","moment","DateFnsUtils","MuiPickersUtilsProvider","KeyboardTimePicker","inputStyles","DatePickerStyle","TimePickerValidation","fieldApi","fieldState","props","classes","error","value","setValue","setError","setTouched","reset","onChange","customClass","onBlur","rest","timePickerClasses","inputError","date","Date","isValid","toLocaleString"],"mappings":";;;AAAA;;;;;AAMA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,UAAxB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,SACEC,uBADF,EAEEC,kBAFF,QAGO,sBAHP;AAIA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,eAA7C;AAEA,OAAO,MAAMC,oBAAoB,GAAGR,OAAO,CACzC,UAAwC;AAAA,MAAvC;AAAES,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAuC;AAAA,MAAZC,KAAY;;AACtC,QAAMC,OAAO,GAAGN,WAAW,CAACI,UAAU,CAACG,KAAZ,CAAX,EAAhB;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAYJ,UAAlB;AACA,QAAM;AAAEK,IAAAA,QAAF;AAAYC,IAAAA,QAAZ;AAAsBC,IAAAA,UAAtB;AAAkCC,IAAAA;AAAlC,MAA4CT,QAAlD;;AACA,QAAM;AAAEU,IAAAA,QAAF;AAAYC,IAAAA,WAAZ;AAAyBC,IAAAA;AAAzB,MAA6CV,KAAnD;AAAA,QAA0CW,IAA1C,4BAAmDX,KAAnD;;AACA,QAAMY,iBAAiB,GAAGhB,eAAe,CAACG,UAAU,CAACG,KAAZ,CAAf,EAA1B;AAEA,SACE,0CACE,oBAAC,uBAAD;AAAyB,IAAA,KAAK,EAAEV,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,kBAAD,oBACMmB,IADN;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,KAAK,EAAER,KAAK,IAAI,IAHlB;AAIE,IAAA,OAAO,EAAES,iBAJX;AAKE,IAAA,SAAS,EAAEtB,IAAI,CAACmB,WAAD,EAAc,kBAAd,EAAkC;AAC/C,OAACR,OAAO,CAACY,UAAT,GAAsBd,UAAU,CAACG;AADc,KAAlC,CALjB;AAQE,IAAA,QAAQ,EAAEY,IAAI,IAAI;AAChB,UAAIvB,MAAM,CAAC,IAAIwB,IAAJ,CAASD,IAAT,CAAD,CAAN,CAAuBE,OAAvB,MAAoC,CAACF,IAAzC,EAA+C;AAC7CP,QAAAA,KAAK;;AAEL,YAAIO,IAAI,KAAK,IAAb,EAAmB;AACjBV,UAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,SAFD,MAEO;AACLA,UAAAA,QAAQ,CAACb,MAAM,CAAC,IAAIwB,IAAJ,CAASD,IAAT,CAAD,CAAN,CAAuBG,cAAvB,EAAD,CAAR;AACD;;AAED,YAAIT,QAAJ,EAAc;AACZA,UAAAA,QAAQ,CAACjB,MAAM,CAAC,IAAIwB,IAAJ,CAASD,IAAT,CAAD,CAAN,CAAuBG,cAAvB,EAAD,CAAR;AACD;AACF,OAZD,MAYO;AACLZ,QAAAA,QAAQ,CAAC,cAAD,CAAR;AACD;AACF,KAxBH;AAyBE,IAAA,MAAM,EAAES,IAAI,IAAI;AACdR,MAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,UAAII,MAAJ,EAAY;AACVA,QAAAA,MAAM,CAACI,IAAD,CAAN;AACD;AACF,KA9BH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADF,EAoCGf,UAAU,CAACG,KAAX,GACC;AAAO,IAAA,SAAS,EAAED,OAAO,CAACC,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCH,UAAU,CAACG,KAA7C,CADD,GAEG,IAtCN,CADF;AA0CD,CAlDwC,CAApC;AAqDP,eAAeL,oBAAf","sourcesContent":["/**\n *\n * TimePickerValidation\n *\n */\n\nimport React from 'react';\nimport { asField } from 'informed';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n} from '@material-ui/pickers';\nimport { inputStyles, DatePickerStyle } from 'global-styles';\n\nexport const TimePickerValidation = asField(\n  ({ fieldApi, fieldState, ...props }) => {\n    const classes = inputStyles(fieldState.error)();\n    const { value } = fieldState;\n    const { setValue, setError, setTouched, reset } = fieldApi;\n    const { onChange, customClass, onBlur, ...rest } = props;\n    const timePickerClasses = DatePickerStyle(fieldState.error)();\n\n    return (\n      <>\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n          <KeyboardTimePicker\n            {...rest}\n            mask=\"__:__ _M\"\n            value={value || null}\n            classes={timePickerClasses}\n            className={clsx(customClass, 'validation-input', {\n              [classes.inputError]: fieldState.error,\n            })}\n            onChange={date => {\n              if (moment(new Date(date)).isValid() || !date) {\n                reset();\n\n                if (date === null) {\n                  setValue(null);\n                } else {\n                  setValue(moment(new Date(date)).toLocaleString());\n                }\n\n                if (onChange) {\n                  onChange(moment(new Date(date)).toLocaleString());\n                }\n              } else {\n                setError('Invalid Time');\n              }\n            }}\n            onBlur={date => {\n              setTouched(true);\n              if (onBlur) {\n                onBlur(date);\n              }\n            }}\n          />\n        </MuiPickersUtilsProvider>\n\n        {fieldState.error ? (\n          <small className={classes.error}>{fieldState.error}</small>\n        ) : null}\n      </>\n    );\n  }\n);\n\nexport default TimePickerValidation;\n"]},"metadata":{},"sourceType":"module"}